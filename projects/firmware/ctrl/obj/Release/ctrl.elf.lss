
obj/Release/ctrl.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001c8c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000032  00800060  00001c8c  00001d20  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000034c  00800092  00800092  00001d52  2**0
                  ALLOC
  3 .stab         00000870  00000000  00000000  00001d54  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000000df  00000000  00000000  000025c4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 22 01 	jmp	0x244	; 0x244 <__vector_6>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d4 e0       	ldi	r29, 0x04	; 4
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ec e8       	ldi	r30, 0x8C	; 140
      68:	fc e1       	ldi	r31, 0x1C	; 28
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a2 39       	cpi	r26, 0x92	; 146
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	13 e0       	ldi	r17, 0x03	; 3
      78:	a2 e9       	ldi	r26, 0x92	; 146
      7a:	b0 e0       	ldi	r27, 0x00	; 0
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	ae 3d       	cpi	r26, 0xDE	; 222
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 0d 0d 	call	0x1a1a	; 0x1a1a <main>
      8a:	0c 94 44 0e 	jmp	0x1c88	; 0x1c88 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <pxPortInitialiseStack>:
      92:	fc 01       	movw	r30, r24
      94:	91 e1       	ldi	r25, 0x11	; 17
      96:	90 83       	st	Z, r25
      98:	22 e2       	ldi	r18, 0x22	; 34
      9a:	22 93       	st	-Z, r18
      9c:	83 e3       	ldi	r24, 0x33	; 51
      9e:	82 93       	st	-Z, r24
      a0:	62 93       	st	-Z, r22
      a2:	72 93       	st	-Z, r23
      a4:	12 92       	st	-Z, r1
      a6:	80 e8       	ldi	r24, 0x80	; 128
      a8:	82 93       	st	-Z, r24
      aa:	12 92       	st	-Z, r1
      ac:	82 e0       	ldi	r24, 0x02	; 2
      ae:	82 93       	st	-Z, r24
      b0:	83 e0       	ldi	r24, 0x03	; 3
      b2:	82 93       	st	-Z, r24
      b4:	84 e0       	ldi	r24, 0x04	; 4
      b6:	82 93       	st	-Z, r24
      b8:	85 e0       	ldi	r24, 0x05	; 5
      ba:	82 93       	st	-Z, r24
      bc:	86 e0       	ldi	r24, 0x06	; 6
      be:	82 93       	st	-Z, r24
      c0:	87 e0       	ldi	r24, 0x07	; 7
      c2:	82 93       	st	-Z, r24
      c4:	88 e0       	ldi	r24, 0x08	; 8
      c6:	82 93       	st	-Z, r24
      c8:	89 e0       	ldi	r24, 0x09	; 9
      ca:	82 93       	st	-Z, r24
      cc:	80 e1       	ldi	r24, 0x10	; 16
      ce:	82 93       	st	-Z, r24
      d0:	92 93       	st	-Z, r25
      d2:	82 e1       	ldi	r24, 0x12	; 18
      d4:	82 93       	st	-Z, r24
      d6:	83 e1       	ldi	r24, 0x13	; 19
      d8:	82 93       	st	-Z, r24
      da:	84 e1       	ldi	r24, 0x14	; 20
      dc:	82 93       	st	-Z, r24
      de:	85 e1       	ldi	r24, 0x15	; 21
      e0:	82 93       	st	-Z, r24
      e2:	86 e1       	ldi	r24, 0x16	; 22
      e4:	82 93       	st	-Z, r24
      e6:	87 e1       	ldi	r24, 0x17	; 23
      e8:	82 93       	st	-Z, r24
      ea:	88 e1       	ldi	r24, 0x18	; 24
      ec:	82 93       	st	-Z, r24
      ee:	89 e1       	ldi	r24, 0x19	; 25
      f0:	82 93       	st	-Z, r24
      f2:	80 e2       	ldi	r24, 0x20	; 32
      f4:	82 93       	st	-Z, r24
      f6:	81 e2       	ldi	r24, 0x21	; 33
      f8:	82 93       	st	-Z, r24
      fa:	22 93       	st	-Z, r18
      fc:	83 e2       	ldi	r24, 0x23	; 35
      fe:	82 93       	st	-Z, r24
     100:	42 93       	st	-Z, r20
     102:	52 93       	st	-Z, r21
     104:	86 e2       	ldi	r24, 0x26	; 38
     106:	82 93       	st	-Z, r24
     108:	87 e2       	ldi	r24, 0x27	; 39
     10a:	82 93       	st	-Z, r24
     10c:	88 e2       	ldi	r24, 0x28	; 40
     10e:	82 93       	st	-Z, r24
     110:	89 e2       	ldi	r24, 0x29	; 41
     112:	82 93       	st	-Z, r24
     114:	80 e3       	ldi	r24, 0x30	; 48
     116:	82 93       	st	-Z, r24
     118:	81 e3       	ldi	r24, 0x31	; 49
     11a:	82 93       	st	-Z, r24
     11c:	31 97       	sbiw	r30, 0x01	; 1
     11e:	cf 01       	movw	r24, r30
     120:	08 95       	ret

00000122 <xPortStartScheduler>:
     122:	1b bc       	out	0x2b, r1	; 43
     124:	8a eb       	ldi	r24, 0xBA	; 186
     126:	8a bd       	out	0x2a, r24	; 42
     128:	8b e0       	ldi	r24, 0x0B	; 11
     12a:	8e bd       	out	0x2e, r24	; 46
     12c:	89 b7       	in	r24, 0x39	; 57
     12e:	80 61       	ori	r24, 0x10	; 16
     130:	89 bf       	out	0x39, r24	; 57
     132:	a0 91 1d 03 	lds	r26, 0x031D
     136:	b0 91 1e 03 	lds	r27, 0x031E
     13a:	cd 91       	ld	r28, X+
     13c:	cd bf       	out	0x3d, r28	; 61
     13e:	dd 91       	ld	r29, X+
     140:	de bf       	out	0x3e, r29	; 62
     142:	ff 91       	pop	r31
     144:	ef 91       	pop	r30
     146:	df 91       	pop	r29
     148:	cf 91       	pop	r28
     14a:	bf 91       	pop	r27
     14c:	af 91       	pop	r26
     14e:	9f 91       	pop	r25
     150:	8f 91       	pop	r24
     152:	7f 91       	pop	r23
     154:	6f 91       	pop	r22
     156:	5f 91       	pop	r21
     158:	4f 91       	pop	r20
     15a:	3f 91       	pop	r19
     15c:	2f 91       	pop	r18
     15e:	1f 91       	pop	r17
     160:	0f 91       	pop	r16
     162:	ff 90       	pop	r15
     164:	ef 90       	pop	r14
     166:	df 90       	pop	r13
     168:	cf 90       	pop	r12
     16a:	bf 90       	pop	r11
     16c:	af 90       	pop	r10
     16e:	9f 90       	pop	r9
     170:	8f 90       	pop	r8
     172:	7f 90       	pop	r7
     174:	6f 90       	pop	r6
     176:	5f 90       	pop	r5
     178:	4f 90       	pop	r4
     17a:	3f 90       	pop	r3
     17c:	2f 90       	pop	r2
     17e:	1f 90       	pop	r1
     180:	0f 90       	pop	r0
     182:	0f be       	out	0x3f, r0	; 63
     184:	0f 90       	pop	r0
     186:	08 95       	ret
     188:	81 e0       	ldi	r24, 0x01	; 1
     18a:	08 95       	ret

0000018c <vPortEndScheduler>:
     18c:	08 95       	ret

0000018e <vPortYieldFromTick>:
     18e:	0f 92       	push	r0
     190:	0f b6       	in	r0, 0x3f	; 63
     192:	f8 94       	cli
     194:	0f 92       	push	r0
     196:	1f 92       	push	r1
     198:	11 24       	eor	r1, r1
     19a:	2f 92       	push	r2
     19c:	3f 92       	push	r3
     19e:	4f 92       	push	r4
     1a0:	5f 92       	push	r5
     1a2:	6f 92       	push	r6
     1a4:	7f 92       	push	r7
     1a6:	8f 92       	push	r8
     1a8:	9f 92       	push	r9
     1aa:	af 92       	push	r10
     1ac:	bf 92       	push	r11
     1ae:	cf 92       	push	r12
     1b0:	df 92       	push	r13
     1b2:	ef 92       	push	r14
     1b4:	ff 92       	push	r15
     1b6:	0f 93       	push	r16
     1b8:	1f 93       	push	r17
     1ba:	2f 93       	push	r18
     1bc:	3f 93       	push	r19
     1be:	4f 93       	push	r20
     1c0:	5f 93       	push	r21
     1c2:	6f 93       	push	r22
     1c4:	7f 93       	push	r23
     1c6:	8f 93       	push	r24
     1c8:	9f 93       	push	r25
     1ca:	af 93       	push	r26
     1cc:	bf 93       	push	r27
     1ce:	cf 93       	push	r28
     1d0:	df 93       	push	r29
     1d2:	ef 93       	push	r30
     1d4:	ff 93       	push	r31
     1d6:	a0 91 1d 03 	lds	r26, 0x031D
     1da:	b0 91 1e 03 	lds	r27, 0x031E
     1de:	0d b6       	in	r0, 0x3d	; 61
     1e0:	0d 92       	st	X+, r0
     1e2:	0e b6       	in	r0, 0x3e	; 62
     1e4:	0d 92       	st	X+, r0
     1e6:	0e 94 a9 08 	call	0x1152	; 0x1152 <vTaskIncrementTick>
     1ea:	0e 94 db 07 	call	0xfb6	; 0xfb6 <vTaskSwitchContext>
     1ee:	a0 91 1d 03 	lds	r26, 0x031D
     1f2:	b0 91 1e 03 	lds	r27, 0x031E
     1f6:	cd 91       	ld	r28, X+
     1f8:	cd bf       	out	0x3d, r28	; 61
     1fa:	dd 91       	ld	r29, X+
     1fc:	de bf       	out	0x3e, r29	; 62
     1fe:	ff 91       	pop	r31
     200:	ef 91       	pop	r30
     202:	df 91       	pop	r29
     204:	cf 91       	pop	r28
     206:	bf 91       	pop	r27
     208:	af 91       	pop	r26
     20a:	9f 91       	pop	r25
     20c:	8f 91       	pop	r24
     20e:	7f 91       	pop	r23
     210:	6f 91       	pop	r22
     212:	5f 91       	pop	r21
     214:	4f 91       	pop	r20
     216:	3f 91       	pop	r19
     218:	2f 91       	pop	r18
     21a:	1f 91       	pop	r17
     21c:	0f 91       	pop	r16
     21e:	ff 90       	pop	r15
     220:	ef 90       	pop	r14
     222:	df 90       	pop	r13
     224:	cf 90       	pop	r12
     226:	bf 90       	pop	r11
     228:	af 90       	pop	r10
     22a:	9f 90       	pop	r9
     22c:	8f 90       	pop	r8
     22e:	7f 90       	pop	r7
     230:	6f 90       	pop	r6
     232:	5f 90       	pop	r5
     234:	4f 90       	pop	r4
     236:	3f 90       	pop	r3
     238:	2f 90       	pop	r2
     23a:	1f 90       	pop	r1
     23c:	0f 90       	pop	r0
     23e:	0f be       	out	0x3f, r0	; 63
     240:	0f 90       	pop	r0
     242:	08 95       	ret

00000244 <__vector_6>:
     244:	0e 94 c7 00 	call	0x18e	; 0x18e <vPortYieldFromTick>
     248:	18 95       	reti

0000024a <vPortYield>:
     24a:	0f 92       	push	r0
     24c:	0f b6       	in	r0, 0x3f	; 63
     24e:	f8 94       	cli
     250:	0f 92       	push	r0
     252:	1f 92       	push	r1
     254:	11 24       	eor	r1, r1
     256:	2f 92       	push	r2
     258:	3f 92       	push	r3
     25a:	4f 92       	push	r4
     25c:	5f 92       	push	r5
     25e:	6f 92       	push	r6
     260:	7f 92       	push	r7
     262:	8f 92       	push	r8
     264:	9f 92       	push	r9
     266:	af 92       	push	r10
     268:	bf 92       	push	r11
     26a:	cf 92       	push	r12
     26c:	df 92       	push	r13
     26e:	ef 92       	push	r14
     270:	ff 92       	push	r15
     272:	0f 93       	push	r16
     274:	1f 93       	push	r17
     276:	2f 93       	push	r18
     278:	3f 93       	push	r19
     27a:	4f 93       	push	r20
     27c:	5f 93       	push	r21
     27e:	6f 93       	push	r22
     280:	7f 93       	push	r23
     282:	8f 93       	push	r24
     284:	9f 93       	push	r25
     286:	af 93       	push	r26
     288:	bf 93       	push	r27
     28a:	cf 93       	push	r28
     28c:	df 93       	push	r29
     28e:	ef 93       	push	r30
     290:	ff 93       	push	r31
     292:	a0 91 1d 03 	lds	r26, 0x031D
     296:	b0 91 1e 03 	lds	r27, 0x031E
     29a:	0d b6       	in	r0, 0x3d	; 61
     29c:	0d 92       	st	X+, r0
     29e:	0e b6       	in	r0, 0x3e	; 62
     2a0:	0d 92       	st	X+, r0
     2a2:	0e 94 db 07 	call	0xfb6	; 0xfb6 <vTaskSwitchContext>
     2a6:	a0 91 1d 03 	lds	r26, 0x031D
     2aa:	b0 91 1e 03 	lds	r27, 0x031E
     2ae:	cd 91       	ld	r28, X+
     2b0:	cd bf       	out	0x3d, r28	; 61
     2b2:	dd 91       	ld	r29, X+
     2b4:	de bf       	out	0x3e, r29	; 62
     2b6:	ff 91       	pop	r31
     2b8:	ef 91       	pop	r30
     2ba:	df 91       	pop	r29
     2bc:	cf 91       	pop	r28
     2be:	bf 91       	pop	r27
     2c0:	af 91       	pop	r26
     2c2:	9f 91       	pop	r25
     2c4:	8f 91       	pop	r24
     2c6:	7f 91       	pop	r23
     2c8:	6f 91       	pop	r22
     2ca:	5f 91       	pop	r21
     2cc:	4f 91       	pop	r20
     2ce:	3f 91       	pop	r19
     2d0:	2f 91       	pop	r18
     2d2:	1f 91       	pop	r17
     2d4:	0f 91       	pop	r16
     2d6:	ff 90       	pop	r15
     2d8:	ef 90       	pop	r14
     2da:	df 90       	pop	r13
     2dc:	cf 90       	pop	r12
     2de:	bf 90       	pop	r11
     2e0:	af 90       	pop	r10
     2e2:	9f 90       	pop	r9
     2e4:	8f 90       	pop	r8
     2e6:	7f 90       	pop	r7
     2e8:	6f 90       	pop	r6
     2ea:	5f 90       	pop	r5
     2ec:	4f 90       	pop	r4
     2ee:	3f 90       	pop	r3
     2f0:	2f 90       	pop	r2
     2f2:	1f 90       	pop	r1
     2f4:	0f 90       	pop	r0
     2f6:	0f be       	out	0x3f, r0	; 63
     2f8:	0f 90       	pop	r0
     2fa:	08 95       	ret

000002fc <xCoRoutineRemoveFromEventList>:
     2fc:	0f 93       	push	r16
     2fe:	1f 93       	push	r17
     300:	cf 93       	push	r28
     302:	df 93       	push	r29
     304:	fc 01       	movw	r30, r24
     306:	80 81       	ld	r24, Z
     308:	88 23       	and	r24, r24
     30a:	19 f4       	brne	.+6      	; 0x312 <xCoRoutineRemoveFromEventList+0x16>
     30c:	c0 e0       	ldi	r28, 0x00	; 0
     30e:	d0 e0       	ldi	r29, 0x00	; 0
     310:	05 c0       	rjmp	.+10     	; 0x31c <xCoRoutineRemoveFromEventList+0x20>
     312:	05 80       	ldd	r0, Z+5	; 0x05
     314:	f6 81       	ldd	r31, Z+6	; 0x06
     316:	e0 2d       	mov	r30, r0
     318:	c6 81       	ldd	r28, Z+6	; 0x06
     31a:	d7 81       	ldd	r29, Z+7	; 0x07
     31c:	8e 01       	movw	r16, r28
     31e:	04 5f       	subi	r16, 0xF4	; 244
     320:	1f 4f       	sbci	r17, 0xFF	; 255
     322:	c8 01       	movw	r24, r16
     324:	0e 94 ac 03 	call	0x758	; 0x758 <vListRemove>
     328:	8a eb       	ldi	r24, 0xBA	; 186
     32a:	90 e0       	ldi	r25, 0x00	; 0
     32c:	b8 01       	movw	r22, r16
     32e:	0e 94 4e 03 	call	0x69c	; 0x69c <vListInsertEnd>
     332:	20 e0       	ldi	r18, 0x00	; 0
     334:	e0 91 92 00 	lds	r30, 0x0092
     338:	f0 91 93 00 	lds	r31, 0x0093
     33c:	9e 89       	ldd	r25, Y+22	; 0x16
     33e:	86 89       	ldd	r24, Z+22	; 0x16
     340:	98 17       	cp	r25, r24
     342:	08 f0       	brcs	.+2      	; 0x346 <xCoRoutineRemoveFromEventList+0x4a>
     344:	21 e0       	ldi	r18, 0x01	; 1
     346:	82 2f       	mov	r24, r18
     348:	df 91       	pop	r29
     34a:	cf 91       	pop	r28
     34c:	1f 91       	pop	r17
     34e:	0f 91       	pop	r16
     350:	08 95       	ret

00000352 <vCoRoutineSchedule>:
     352:	ff 92       	push	r15
     354:	0f 93       	push	r16
     356:	1f 93       	push	r17
     358:	cf 93       	push	r28
     35a:	df 93       	push	r29
     35c:	99 e0       	ldi	r25, 0x09	; 9
     35e:	f9 2e       	mov	r15, r25
     360:	28 c0       	rjmp	.+80     	; 0x3b2 <vCoRoutineSchedule+0x60>
     362:	f8 94       	cli
     364:	80 91 ba 00 	lds	r24, 0x00BA
     368:	88 23       	and	r24, r24
     36a:	19 f4       	brne	.+6      	; 0x372 <vCoRoutineSchedule+0x20>
     36c:	c0 e0       	ldi	r28, 0x00	; 0
     36e:	d0 e0       	ldi	r29, 0x00	; 0
     370:	06 c0       	rjmp	.+12     	; 0x37e <vCoRoutineSchedule+0x2c>
     372:	e0 91 bf 00 	lds	r30, 0x00BF
     376:	f0 91 c0 00 	lds	r31, 0x00C0
     37a:	c6 81       	ldd	r28, Z+6	; 0x06
     37c:	d7 81       	ldd	r29, Z+7	; 0x07
     37e:	ce 01       	movw	r24, r28
     380:	0c 96       	adiw	r24, 0x0c	; 12
     382:	0e 94 ac 03 	call	0x758	; 0x758 <vListRemove>
     386:	78 94       	sei
     388:	8e 01       	movw	r16, r28
     38a:	0e 5f       	subi	r16, 0xFE	; 254
     38c:	1f 4f       	sbci	r17, 0xFF	; 255
     38e:	c8 01       	movw	r24, r16
     390:	0e 94 ac 03 	call	0x758	; 0x758 <vListRemove>
     394:	9e 89       	ldd	r25, Y+22	; 0x16
     396:	80 91 94 00 	lds	r24, 0x0094
     39a:	89 17       	cp	r24, r25
     39c:	10 f4       	brcc	.+4      	; 0x3a2 <vCoRoutineSchedule+0x50>
     39e:	90 93 94 00 	sts	0x0094, r25
     3a2:	9f 9d       	mul	r25, r15
     3a4:	c0 01       	movw	r24, r0
     3a6:	11 24       	eor	r1, r1
     3a8:	85 56       	subi	r24, 0x65	; 101
     3aa:	9f 4f       	sbci	r25, 0xFF	; 255
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 4e 03 	call	0x69c	; 0x69c <vListInsertEnd>
     3b2:	80 91 ba 00 	lds	r24, 0x00BA
     3b6:	88 23       	and	r24, r24
     3b8:	a1 f6       	brne	.-88     	; 0x362 <vCoRoutineSchedule+0x10>
     3ba:	0e 94 cd 07 	call	0xf9a	; 0xf9a <xTaskGetTickCount>
     3be:	20 91 95 00 	lds	r18, 0x0095
     3c2:	30 91 96 00 	lds	r19, 0x0096
     3c6:	82 1b       	sub	r24, r18
     3c8:	93 0b       	sbc	r25, r19
     3ca:	90 93 98 00 	sts	0x0098, r25
     3ce:	80 93 97 00 	sts	0x0097, r24
     3d2:	89 e0       	ldi	r24, 0x09	; 9
     3d4:	f8 2e       	mov	r15, r24
     3d6:	54 c0       	rjmp	.+168    	; 0x480 <__stack+0x21>
     3d8:	01 96       	adiw	r24, 0x01	; 1
     3da:	90 93 9a 00 	sts	0x009A, r25
     3de:	80 93 99 00 	sts	0x0099, r24
     3e2:	21 50       	subi	r18, 0x01	; 1
     3e4:	30 40       	sbci	r19, 0x00	; 0
     3e6:	30 93 98 00 	sts	0x0098, r19
     3ea:	20 93 97 00 	sts	0x0097, r18
     3ee:	89 2b       	or	r24, r25
     3f0:	c9 f5       	brne	.+114    	; 0x464 <__stack+0x5>
     3f2:	20 91 b6 00 	lds	r18, 0x00B6
     3f6:	30 91 b7 00 	lds	r19, 0x00B7
     3fa:	80 91 b8 00 	lds	r24, 0x00B8
     3fe:	90 91 b9 00 	lds	r25, 0x00B9
     402:	90 93 b7 00 	sts	0x00B7, r25
     406:	80 93 b6 00 	sts	0x00B6, r24
     40a:	30 93 b9 00 	sts	0x00B9, r19
     40e:	20 93 b8 00 	sts	0x00B8, r18
     412:	28 c0       	rjmp	.+80     	; 0x464 <__stack+0x5>
     414:	20 91 99 00 	lds	r18, 0x0099
     418:	30 91 9a 00 	lds	r19, 0x009A
     41c:	8a 81       	ldd	r24, Y+2	; 0x02
     41e:	9b 81       	ldd	r25, Y+3	; 0x03
     420:	28 17       	cp	r18, r24
     422:	39 07       	cpc	r19, r25
     424:	68 f1       	brcs	.+90     	; 0x480 <__stack+0x21>
     426:	f8 94       	cli
     428:	8e 01       	movw	r16, r28
     42a:	0e 5f       	subi	r16, 0xFE	; 254
     42c:	1f 4f       	sbci	r17, 0xFF	; 255
     42e:	c8 01       	movw	r24, r16
     430:	0e 94 ac 03 	call	0x758	; 0x758 <vListRemove>
     434:	8c 89       	ldd	r24, Y+20	; 0x14
     436:	9d 89       	ldd	r25, Y+21	; 0x15
     438:	89 2b       	or	r24, r25
     43a:	21 f0       	breq	.+8      	; 0x444 <vCoRoutineSchedule+0xf2>
     43c:	ce 01       	movw	r24, r28
     43e:	0c 96       	adiw	r24, 0x0c	; 12
     440:	0e 94 ac 03 	call	0x758	; 0x758 <vListRemove>
     444:	78 94       	sei
     446:	9e 89       	ldd	r25, Y+22	; 0x16
     448:	80 91 94 00 	lds	r24, 0x0094
     44c:	89 17       	cp	r24, r25
     44e:	10 f4       	brcc	.+4      	; 0x454 <vCoRoutineSchedule+0x102>
     450:	90 93 94 00 	sts	0x0094, r25
     454:	9f 9d       	mul	r25, r15
     456:	c0 01       	movw	r24, r0
     458:	11 24       	eor	r1, r1
     45a:	85 56       	subi	r24, 0x65	; 101
     45c:	9f 4f       	sbci	r25, 0xFF	; 255
     45e:	b8 01       	movw	r22, r16
     460:	0e 94 4e 03 	call	0x69c	; 0x69c <vListInsertEnd>
     464:	e0 91 b6 00 	lds	r30, 0x00B6
     468:	f0 91 b7 00 	lds	r31, 0x00B7
     46c:	80 81       	ld	r24, Z
     46e:	88 23       	and	r24, r24
     470:	39 f0       	breq	.+14     	; 0x480 <__stack+0x21>
     472:	05 80       	ldd	r0, Z+5	; 0x05
     474:	f6 81       	ldd	r31, Z+6	; 0x06
     476:	e0 2d       	mov	r30, r0
     478:	c6 81       	ldd	r28, Z+6	; 0x06
     47a:	d7 81       	ldd	r29, Z+7	; 0x07
     47c:	20 97       	sbiw	r28, 0x00	; 0
     47e:	51 f6       	brne	.-108    	; 0x414 <vCoRoutineSchedule+0xc2>
     480:	20 91 97 00 	lds	r18, 0x0097
     484:	30 91 98 00 	lds	r19, 0x0098
     488:	80 91 99 00 	lds	r24, 0x0099
     48c:	90 91 9a 00 	lds	r25, 0x009A
     490:	21 15       	cp	r18, r1
     492:	31 05       	cpc	r19, r1
     494:	09 f0       	breq	.+2      	; 0x498 <__stack+0x39>
     496:	a0 cf       	rjmp	.-192    	; 0x3d8 <vCoRoutineSchedule+0x86>
     498:	90 93 96 00 	sts	0x0096, r25
     49c:	80 93 95 00 	sts	0x0095, r24
     4a0:	90 91 94 00 	lds	r25, 0x0094
     4a4:	29 e0       	ldi	r18, 0x09	; 9
     4a6:	06 c0       	rjmp	.+12     	; 0x4b4 <__stack+0x55>
     4a8:	99 23       	and	r25, r25
     4aa:	19 f4       	brne	.+6      	; 0x4b2 <__stack+0x53>
     4ac:	10 92 94 00 	sts	0x0094, r1
     4b0:	32 c0       	rjmp	.+100    	; 0x516 <__stack+0xb7>
     4b2:	91 50       	subi	r25, 0x01	; 1
     4b4:	92 9f       	mul	r25, r18
     4b6:	d0 01       	movw	r26, r0
     4b8:	11 24       	eor	r1, r1
     4ba:	a5 56       	subi	r26, 0x65	; 101
     4bc:	bf 4f       	sbci	r27, 0xFF	; 255
     4be:	8c 91       	ld	r24, X
     4c0:	88 23       	and	r24, r24
     4c2:	91 f3       	breq	.-28     	; 0x4a8 <__stack+0x49>
     4c4:	90 93 94 00 	sts	0x0094, r25
     4c8:	11 96       	adiw	r26, 0x01	; 1
     4ca:	ed 91       	ld	r30, X+
     4cc:	fc 91       	ld	r31, X
     4ce:	12 97       	sbiw	r26, 0x02	; 2
     4d0:	02 80       	ldd	r0, Z+2	; 0x02
     4d2:	f3 81       	ldd	r31, Z+3	; 0x03
     4d4:	e0 2d       	mov	r30, r0
     4d6:	12 96       	adiw	r26, 0x02	; 2
     4d8:	fc 93       	st	X, r31
     4da:	ee 93       	st	-X, r30
     4dc:	11 97       	sbiw	r26, 0x01	; 1
     4de:	cd 01       	movw	r24, r26
     4e0:	03 96       	adiw	r24, 0x03	; 3
     4e2:	e8 17       	cp	r30, r24
     4e4:	f9 07       	cpc	r31, r25
     4e6:	31 f4       	brne	.+12     	; 0x4f4 <__stack+0x95>
     4e8:	82 81       	ldd	r24, Z+2	; 0x02
     4ea:	93 81       	ldd	r25, Z+3	; 0x03
     4ec:	12 96       	adiw	r26, 0x02	; 2
     4ee:	9c 93       	st	X, r25
     4f0:	8e 93       	st	-X, r24
     4f2:	11 97       	sbiw	r26, 0x01	; 1
     4f4:	11 96       	adiw	r26, 0x01	; 1
     4f6:	ed 91       	ld	r30, X+
     4f8:	fc 91       	ld	r31, X
     4fa:	12 97       	sbiw	r26, 0x02	; 2
     4fc:	06 80       	ldd	r0, Z+6	; 0x06
     4fe:	f7 81       	ldd	r31, Z+7	; 0x07
     500:	e0 2d       	mov	r30, r0
     502:	f0 93 93 00 	sts	0x0093, r31
     506:	e0 93 92 00 	sts	0x0092, r30
     50a:	20 81       	ld	r18, Z
     50c:	31 81       	ldd	r19, Z+1	; 0x01
     50e:	cf 01       	movw	r24, r30
     510:	67 89       	ldd	r22, Z+23	; 0x17
     512:	f9 01       	movw	r30, r18
     514:	09 95       	icall
     516:	df 91       	pop	r29
     518:	cf 91       	pop	r28
     51a:	1f 91       	pop	r17
     51c:	0f 91       	pop	r16
     51e:	ff 90       	pop	r15
     520:	08 95       	ret

00000522 <vCoRoutineAddToDelayedList>:
     522:	0f 93       	push	r16
     524:	1f 93       	push	r17
     526:	cf 93       	push	r28
     528:	df 93       	push	r29
     52a:	eb 01       	movw	r28, r22
     52c:	00 91 99 00 	lds	r16, 0x0099
     530:	10 91 9a 00 	lds	r17, 0x009A
     534:	08 0f       	add	r16, r24
     536:	19 1f       	adc	r17, r25
     538:	80 91 92 00 	lds	r24, 0x0092
     53c:	90 91 93 00 	lds	r25, 0x0093
     540:	02 96       	adiw	r24, 0x02	; 2
     542:	0e 94 ac 03 	call	0x758	; 0x758 <vListRemove>
     546:	e0 91 92 00 	lds	r30, 0x0092
     54a:	f0 91 93 00 	lds	r31, 0x0093
     54e:	13 83       	std	Z+3, r17	; 0x03
     550:	02 83       	std	Z+2, r16	; 0x02
     552:	80 91 99 00 	lds	r24, 0x0099
     556:	90 91 9a 00 	lds	r25, 0x009A
     55a:	bf 01       	movw	r22, r30
     55c:	6e 5f       	subi	r22, 0xFE	; 254
     55e:	7f 4f       	sbci	r23, 0xFF	; 255
     560:	08 17       	cp	r16, r24
     562:	19 07       	cpc	r17, r25
     564:	28 f4       	brcc	.+10     	; 0x570 <vCoRoutineAddToDelayedList+0x4e>
     566:	80 91 b8 00 	lds	r24, 0x00B8
     56a:	90 91 b9 00 	lds	r25, 0x00B9
     56e:	04 c0       	rjmp	.+8      	; 0x578 <vCoRoutineAddToDelayedList+0x56>
     570:	80 91 b6 00 	lds	r24, 0x00B6
     574:	90 91 b7 00 	lds	r25, 0x00B7
     578:	0e 94 77 03 	call	0x6ee	; 0x6ee <vListInsert>
     57c:	20 97       	sbiw	r28, 0x00	; 0
     57e:	49 f0       	breq	.+18     	; 0x592 <vCoRoutineAddToDelayedList+0x70>
     580:	60 91 92 00 	lds	r22, 0x0092
     584:	70 91 93 00 	lds	r23, 0x0093
     588:	64 5f       	subi	r22, 0xF4	; 244
     58a:	7f 4f       	sbci	r23, 0xFF	; 255
     58c:	ce 01       	movw	r24, r28
     58e:	0e 94 77 03 	call	0x6ee	; 0x6ee <vListInsert>
     592:	df 91       	pop	r29
     594:	cf 91       	pop	r28
     596:	1f 91       	pop	r17
     598:	0f 91       	pop	r16
     59a:	08 95       	ret

0000059c <xCoRoutineCreate>:
     59c:	bf 92       	push	r11
     59e:	cf 92       	push	r12
     5a0:	df 92       	push	r13
     5a2:	ef 92       	push	r14
     5a4:	ff 92       	push	r15
     5a6:	0f 93       	push	r16
     5a8:	1f 93       	push	r17
     5aa:	cf 93       	push	r28
     5ac:	df 93       	push	r29
     5ae:	6c 01       	movw	r12, r24
     5b0:	b4 2e       	mov	r11, r20
     5b2:	8a e1       	ldi	r24, 0x1A	; 26
     5b4:	90 e0       	ldi	r25, 0x00	; 0
     5b6:	0e 94 e4 03 	call	0x7c8	; 0x7c8 <pvPortMalloc>
     5ba:	ec 01       	movw	r28, r24
     5bc:	00 97       	sbiw	r24, 0x00	; 0
     5be:	11 f4       	brne	.+4      	; 0x5c4 <xCoRoutineCreate+0x28>
     5c0:	8f ef       	ldi	r24, 0xFF	; 255
     5c2:	4e c0       	rjmp	.+156    	; 0x660 <xCoRoutineCreate+0xc4>
     5c4:	80 91 92 00 	lds	r24, 0x0092
     5c8:	90 91 93 00 	lds	r25, 0x0093
     5cc:	89 2b       	or	r24, r25
     5ce:	01 f5       	brne	.+64     	; 0x610 <xCoRoutineCreate+0x74>
     5d0:	d0 93 93 00 	sts	0x0093, r29
     5d4:	c0 93 92 00 	sts	0x0092, r28
     5d8:	8b e9       	ldi	r24, 0x9B	; 155
     5da:	90 e0       	ldi	r25, 0x00	; 0
     5dc:	0e 94 3a 03 	call	0x674	; 0x674 <vListInitialise>
     5e0:	24 ea       	ldi	r18, 0xA4	; 164
     5e2:	e2 2e       	mov	r14, r18
     5e4:	20 e0       	ldi	r18, 0x00	; 0
     5e6:	f2 2e       	mov	r15, r18
     5e8:	c7 01       	movw	r24, r14
     5ea:	0e 94 3a 03 	call	0x674	; 0x674 <vListInitialise>
     5ee:	0d ea       	ldi	r16, 0xAD	; 173
     5f0:	10 e0       	ldi	r17, 0x00	; 0
     5f2:	c8 01       	movw	r24, r16
     5f4:	0e 94 3a 03 	call	0x674	; 0x674 <vListInitialise>
     5f8:	8a eb       	ldi	r24, 0xBA	; 186
     5fa:	90 e0       	ldi	r25, 0x00	; 0
     5fc:	0e 94 3a 03 	call	0x674	; 0x674 <vListInitialise>
     600:	f0 92 b7 00 	sts	0x00B7, r15
     604:	e0 92 b6 00 	sts	0x00B6, r14
     608:	10 93 b9 00 	sts	0x00B9, r17
     60c:	00 93 b8 00 	sts	0x00B8, r16
     610:	19 8e       	std	Y+25, r1	; 0x19
     612:	18 8e       	std	Y+24, r1	; 0x18
     614:	1e 8a       	std	Y+22, r1	; 0x16
     616:	bf 8a       	std	Y+23, r11	; 0x17
     618:	fe 01       	movw	r30, r28
     61a:	c1 92       	st	Z+, r12
     61c:	d1 92       	st	Z+, r13
     61e:	8f 01       	movw	r16, r30
     620:	cf 01       	movw	r24, r30
     622:	0e 94 4a 03 	call	0x694	; 0x694 <vListInitialiseItem>
     626:	ce 01       	movw	r24, r28
     628:	0c 96       	adiw	r24, 0x0c	; 12
     62a:	0e 94 4a 03 	call	0x694	; 0x694 <vListInitialiseItem>
     62e:	d9 87       	std	Y+9, r29	; 0x09
     630:	c8 87       	std	Y+8, r28	; 0x08
     632:	db 8b       	std	Y+19, r29	; 0x13
     634:	ca 8b       	std	Y+18, r28	; 0x12
     636:	81 e0       	ldi	r24, 0x01	; 1
     638:	90 e0       	ldi	r25, 0x00	; 0
     63a:	9d 87       	std	Y+13, r25	; 0x0d
     63c:	8c 87       	std	Y+12, r24	; 0x0c
     63e:	9e 89       	ldd	r25, Y+22	; 0x16
     640:	80 91 94 00 	lds	r24, 0x0094
     644:	89 17       	cp	r24, r25
     646:	10 f4       	brcc	.+4      	; 0x64c <xCoRoutineCreate+0xb0>
     648:	90 93 94 00 	sts	0x0094, r25
     64c:	89 e0       	ldi	r24, 0x09	; 9
     64e:	98 9f       	mul	r25, r24
     650:	c0 01       	movw	r24, r0
     652:	11 24       	eor	r1, r1
     654:	85 56       	subi	r24, 0x65	; 101
     656:	9f 4f       	sbci	r25, 0xFF	; 255
     658:	b8 01       	movw	r22, r16
     65a:	0e 94 4e 03 	call	0x69c	; 0x69c <vListInsertEnd>
     65e:	81 e0       	ldi	r24, 0x01	; 1
     660:	df 91       	pop	r29
     662:	cf 91       	pop	r28
     664:	1f 91       	pop	r17
     666:	0f 91       	pop	r16
     668:	ff 90       	pop	r15
     66a:	ef 90       	pop	r14
     66c:	df 90       	pop	r13
     66e:	cf 90       	pop	r12
     670:	bf 90       	pop	r11
     672:	08 95       	ret

00000674 <vListInitialise>:
     674:	fc 01       	movw	r30, r24
     676:	9c 01       	movw	r18, r24
     678:	2d 5f       	subi	r18, 0xFD	; 253
     67a:	3f 4f       	sbci	r19, 0xFF	; 255
     67c:	32 83       	std	Z+2, r19	; 0x02
     67e:	21 83       	std	Z+1, r18	; 0x01
     680:	8f ef       	ldi	r24, 0xFF	; 255
     682:	9f ef       	ldi	r25, 0xFF	; 255
     684:	94 83       	std	Z+4, r25	; 0x04
     686:	83 83       	std	Z+3, r24	; 0x03
     688:	36 83       	std	Z+6, r19	; 0x06
     68a:	25 83       	std	Z+5, r18	; 0x05
     68c:	30 87       	std	Z+8, r19	; 0x08
     68e:	27 83       	std	Z+7, r18	; 0x07
     690:	10 82       	st	Z, r1
     692:	08 95       	ret

00000694 <vListInitialiseItem>:
     694:	fc 01       	movw	r30, r24
     696:	11 86       	std	Z+9, r1	; 0x09
     698:	10 86       	std	Z+8, r1	; 0x08
     69a:	08 95       	ret

0000069c <vListInsertEnd>:
     69c:	cf 93       	push	r28
     69e:	df 93       	push	r29
     6a0:	ac 01       	movw	r20, r24
     6a2:	db 01       	movw	r26, r22
     6a4:	ec 01       	movw	r28, r24
     6a6:	29 81       	ldd	r18, Y+1	; 0x01
     6a8:	3a 81       	ldd	r19, Y+2	; 0x02
     6aa:	f9 01       	movw	r30, r18
     6ac:	82 81       	ldd	r24, Z+2	; 0x02
     6ae:	93 81       	ldd	r25, Z+3	; 0x03
     6b0:	13 96       	adiw	r26, 0x03	; 3
     6b2:	9c 93       	st	X, r25
     6b4:	8e 93       	st	-X, r24
     6b6:	12 97       	sbiw	r26, 0x02	; 2
     6b8:	89 81       	ldd	r24, Y+1	; 0x01
     6ba:	9a 81       	ldd	r25, Y+2	; 0x02
     6bc:	15 96       	adiw	r26, 0x05	; 5
     6be:	9c 93       	st	X, r25
     6c0:	8e 93       	st	-X, r24
     6c2:	14 97       	sbiw	r26, 0x04	; 4
     6c4:	02 80       	ldd	r0, Z+2	; 0x02
     6c6:	f3 81       	ldd	r31, Z+3	; 0x03
     6c8:	e0 2d       	mov	r30, r0
     6ca:	75 83       	std	Z+5, r23	; 0x05
     6cc:	64 83       	std	Z+4, r22	; 0x04
     6ce:	e9 01       	movw	r28, r18
     6d0:	7b 83       	std	Y+3, r23	; 0x03
     6d2:	6a 83       	std	Y+2, r22	; 0x02
     6d4:	fa 01       	movw	r30, r20
     6d6:	72 83       	std	Z+2, r23	; 0x02
     6d8:	61 83       	std	Z+1, r22	; 0x01
     6da:	19 96       	adiw	r26, 0x09	; 9
     6dc:	5c 93       	st	X, r21
     6de:	4e 93       	st	-X, r20
     6e0:	18 97       	sbiw	r26, 0x08	; 8
     6e2:	80 81       	ld	r24, Z
     6e4:	8f 5f       	subi	r24, 0xFF	; 255
     6e6:	80 83       	st	Z, r24
     6e8:	df 91       	pop	r29
     6ea:	cf 91       	pop	r28
     6ec:	08 95       	ret

000006ee <vListInsert>:
     6ee:	cf 93       	push	r28
     6f0:	df 93       	push	r29
     6f2:	9c 01       	movw	r18, r24
     6f4:	eb 01       	movw	r28, r22
     6f6:	48 81       	ld	r20, Y
     6f8:	59 81       	ldd	r21, Y+1	; 0x01
     6fa:	8f ef       	ldi	r24, 0xFF	; 255
     6fc:	4f 3f       	cpi	r20, 0xFF	; 255
     6fe:	58 07       	cpc	r21, r24
     700:	21 f4       	brne	.+8      	; 0x70a <vListInsert+0x1c>
     702:	f9 01       	movw	r30, r18
     704:	a7 81       	ldd	r26, Z+7	; 0x07
     706:	b0 85       	ldd	r27, Z+8	; 0x08
     708:	10 c0       	rjmp	.+32     	; 0x72a <vListInsert+0x3c>
     70a:	d9 01       	movw	r26, r18
     70c:	13 96       	adiw	r26, 0x03	; 3
     70e:	04 c0       	rjmp	.+8      	; 0x718 <vListInsert+0x2a>
     710:	12 96       	adiw	r26, 0x02	; 2
     712:	0d 90       	ld	r0, X+
     714:	bc 91       	ld	r27, X
     716:	a0 2d       	mov	r26, r0
     718:	12 96       	adiw	r26, 0x02	; 2
     71a:	ed 91       	ld	r30, X+
     71c:	fc 91       	ld	r31, X
     71e:	13 97       	sbiw	r26, 0x03	; 3
     720:	80 81       	ld	r24, Z
     722:	91 81       	ldd	r25, Z+1	; 0x01
     724:	48 17       	cp	r20, r24
     726:	59 07       	cpc	r21, r25
     728:	98 f7       	brcc	.-26     	; 0x710 <vListInsert+0x22>
     72a:	12 96       	adiw	r26, 0x02	; 2
     72c:	ed 91       	ld	r30, X+
     72e:	fc 91       	ld	r31, X
     730:	13 97       	sbiw	r26, 0x03	; 3
     732:	fb 83       	std	Y+3, r31	; 0x03
     734:	ea 83       	std	Y+2, r30	; 0x02
     736:	d5 83       	std	Z+5, r29	; 0x05
     738:	c4 83       	std	Z+4, r28	; 0x04
     73a:	bd 83       	std	Y+5, r27	; 0x05
     73c:	ac 83       	std	Y+4, r26	; 0x04
     73e:	13 96       	adiw	r26, 0x03	; 3
     740:	dc 93       	st	X, r29
     742:	ce 93       	st	-X, r28
     744:	12 97       	sbiw	r26, 0x02	; 2
     746:	39 87       	std	Y+9, r19	; 0x09
     748:	28 87       	std	Y+8, r18	; 0x08
     74a:	f9 01       	movw	r30, r18
     74c:	80 81       	ld	r24, Z
     74e:	8f 5f       	subi	r24, 0xFF	; 255
     750:	80 83       	st	Z, r24
     752:	df 91       	pop	r29
     754:	cf 91       	pop	r28
     756:	08 95       	ret

00000758 <vListRemove>:
     758:	cf 93       	push	r28
     75a:	df 93       	push	r29
     75c:	dc 01       	movw	r26, r24
     75e:	12 96       	adiw	r26, 0x02	; 2
     760:	ed 91       	ld	r30, X+
     762:	fc 91       	ld	r31, X
     764:	13 97       	sbiw	r26, 0x03	; 3
     766:	14 96       	adiw	r26, 0x04	; 4
     768:	8d 91       	ld	r24, X+
     76a:	9c 91       	ld	r25, X
     76c:	15 97       	sbiw	r26, 0x05	; 5
     76e:	95 83       	std	Z+5, r25	; 0x05
     770:	84 83       	std	Z+4, r24	; 0x04
     772:	14 96       	adiw	r26, 0x04	; 4
     774:	cd 91       	ld	r28, X+
     776:	dc 91       	ld	r29, X
     778:	15 97       	sbiw	r26, 0x05	; 5
     77a:	fb 83       	std	Y+3, r31	; 0x03
     77c:	ea 83       	std	Y+2, r30	; 0x02
     77e:	18 96       	adiw	r26, 0x08	; 8
     780:	ed 91       	ld	r30, X+
     782:	fc 91       	ld	r31, X
     784:	19 97       	sbiw	r26, 0x09	; 9
     786:	81 81       	ldd	r24, Z+1	; 0x01
     788:	92 81       	ldd	r25, Z+2	; 0x02
     78a:	8a 17       	cp	r24, r26
     78c:	9b 07       	cpc	r25, r27
     78e:	11 f4       	brne	.+4      	; 0x794 <vListRemove+0x3c>
     790:	d2 83       	std	Z+2, r29	; 0x02
     792:	c1 83       	std	Z+1, r28	; 0x01
     794:	19 96       	adiw	r26, 0x09	; 9
     796:	1c 92       	st	X, r1
     798:	1e 92       	st	-X, r1
     79a:	18 97       	sbiw	r26, 0x08	; 8
     79c:	80 81       	ld	r24, Z
     79e:	81 50       	subi	r24, 0x01	; 1
     7a0:	80 83       	st	Z, r24
     7a2:	df 91       	pop	r29
     7a4:	cf 91       	pop	r28
     7a6:	08 95       	ret

000007a8 <vPortFree>:
     7a8:	08 95       	ret

000007aa <vPortInitialiseBlocks>:
     7aa:	10 92 c4 00 	sts	0x00C4, r1
     7ae:	10 92 c3 00 	sts	0x00C3, r1
     7b2:	08 95       	ret

000007b4 <xPortGetFreeHeapSize>:
     7b4:	28 e5       	ldi	r18, 0x58	; 88
     7b6:	32 e0       	ldi	r19, 0x02	; 2
     7b8:	80 91 c3 00 	lds	r24, 0x00C3
     7bc:	90 91 c4 00 	lds	r25, 0x00C4
     7c0:	28 1b       	sub	r18, r24
     7c2:	39 0b       	sbc	r19, r25
     7c4:	c9 01       	movw	r24, r18
     7c6:	08 95       	ret

000007c8 <pvPortMalloc>:
     7c8:	0f 93       	push	r16
     7ca:	1f 93       	push	r17
     7cc:	cf 93       	push	r28
     7ce:	df 93       	push	r29
     7d0:	8c 01       	movw	r16, r24
     7d2:	0e 94 c7 07 	call	0xf8e	; 0xf8e <vTaskSuspendAll>
     7d6:	80 91 c3 00 	lds	r24, 0x00C3
     7da:	90 91 c4 00 	lds	r25, 0x00C4
     7de:	98 01       	movw	r18, r16
     7e0:	28 0f       	add	r18, r24
     7e2:	39 1f       	adc	r19, r25
     7e4:	42 e0       	ldi	r20, 0x02	; 2
     7e6:	28 35       	cpi	r18, 0x58	; 88
     7e8:	34 07       	cpc	r19, r20
     7ea:	58 f4       	brcc	.+22     	; 0x802 <pvPortMalloc+0x3a>
     7ec:	82 17       	cp	r24, r18
     7ee:	93 07       	cpc	r25, r19
     7f0:	40 f4       	brcc	.+16     	; 0x802 <pvPortMalloc+0x3a>
     7f2:	ec 01       	movw	r28, r24
     7f4:	cb 53       	subi	r28, 0x3B	; 59
     7f6:	df 4f       	sbci	r29, 0xFF	; 255
     7f8:	30 93 c4 00 	sts	0x00C4, r19
     7fc:	20 93 c3 00 	sts	0x00C3, r18
     800:	02 c0       	rjmp	.+4      	; 0x806 <pvPortMalloc+0x3e>
     802:	c0 e0       	ldi	r28, 0x00	; 0
     804:	d0 e0       	ldi	r29, 0x00	; 0
     806:	0e 94 58 09 	call	0x12b0	; 0x12b0 <xTaskResumeAll>
     80a:	ce 01       	movw	r24, r28
     80c:	df 91       	pop	r29
     80e:	cf 91       	pop	r28
     810:	1f 91       	pop	r17
     812:	0f 91       	pop	r16
     814:	08 95       	ret

00000816 <uxQueueMessagesWaiting>:
     816:	fc 01       	movw	r30, r24
     818:	0f b6       	in	r0, 0x3f	; 63
     81a:	f8 94       	cli
     81c:	0f 92       	push	r0
     81e:	82 8d       	ldd	r24, Z+26	; 0x1a
     820:	0f 90       	pop	r0
     822:	0f be       	out	0x3f, r0	; 63
     824:	08 95       	ret

00000826 <uxQueueMessagesWaitingFromISR>:
     826:	fc 01       	movw	r30, r24
     828:	82 8d       	ldd	r24, Z+26	; 0x1a
     82a:	08 95       	ret

0000082c <xQueueIsQueueEmptyFromISR>:
     82c:	fc 01       	movw	r30, r24
     82e:	82 8d       	ldd	r24, Z+26	; 0x1a
     830:	90 e0       	ldi	r25, 0x00	; 0
     832:	88 23       	and	r24, r24
     834:	09 f4       	brne	.+2      	; 0x838 <xQueueIsQueueEmptyFromISR+0xc>
     836:	91 e0       	ldi	r25, 0x01	; 1
     838:	89 2f       	mov	r24, r25
     83a:	08 95       	ret

0000083c <xQueueIsQueueFullFromISR>:
     83c:	fc 01       	movw	r30, r24
     83e:	92 8d       	ldd	r25, Z+26	; 0x1a
     840:	20 e0       	ldi	r18, 0x00	; 0
     842:	83 8d       	ldd	r24, Z+27	; 0x1b
     844:	98 17       	cp	r25, r24
     846:	09 f4       	brne	.+2      	; 0x84a <xQueueIsQueueFullFromISR+0xe>
     848:	21 e0       	ldi	r18, 0x01	; 1
     84a:	82 2f       	mov	r24, r18
     84c:	08 95       	ret

0000084e <prvCopyDataToQueue>:
     84e:	cf 93       	push	r28
     850:	df 93       	push	r29
     852:	ec 01       	movw	r28, r24
     854:	84 2f       	mov	r24, r20
     856:	4c 8d       	ldd	r20, Y+28	; 0x1c
     858:	44 23       	and	r20, r20
     85a:	a1 f1       	breq	.+104    	; 0x8c4 <prvCopyDataToQueue+0x76>
     85c:	88 23       	and	r24, r24
     85e:	b1 f4       	brne	.+44     	; 0x88c <prvCopyDataToQueue+0x3e>
     860:	8c 81       	ldd	r24, Y+4	; 0x04
     862:	9d 81       	ldd	r25, Y+5	; 0x05
     864:	50 e0       	ldi	r21, 0x00	; 0
     866:	0e 94 25 0e 	call	0x1c4a	; 0x1c4a <memcpy>
     86a:	8c 8d       	ldd	r24, Y+28	; 0x1c
     86c:	2c 81       	ldd	r18, Y+4	; 0x04
     86e:	3d 81       	ldd	r19, Y+5	; 0x05
     870:	28 0f       	add	r18, r24
     872:	31 1d       	adc	r19, r1
     874:	3d 83       	std	Y+5, r19	; 0x05
     876:	2c 83       	std	Y+4, r18	; 0x04
     878:	8a 81       	ldd	r24, Y+2	; 0x02
     87a:	9b 81       	ldd	r25, Y+3	; 0x03
     87c:	28 17       	cp	r18, r24
     87e:	39 07       	cpc	r19, r25
     880:	08 f1       	brcs	.+66     	; 0x8c4 <prvCopyDataToQueue+0x76>
     882:	88 81       	ld	r24, Y
     884:	99 81       	ldd	r25, Y+1	; 0x01
     886:	9d 83       	std	Y+5, r25	; 0x05
     888:	8c 83       	std	Y+4, r24	; 0x04
     88a:	1c c0       	rjmp	.+56     	; 0x8c4 <prvCopyDataToQueue+0x76>
     88c:	8e 81       	ldd	r24, Y+6	; 0x06
     88e:	9f 81       	ldd	r25, Y+7	; 0x07
     890:	50 e0       	ldi	r21, 0x00	; 0
     892:	0e 94 25 0e 	call	0x1c4a	; 0x1c4a <memcpy>
     896:	8c 8d       	ldd	r24, Y+28	; 0x1c
     898:	90 e0       	ldi	r25, 0x00	; 0
     89a:	44 27       	eor	r20, r20
     89c:	55 27       	eor	r21, r21
     89e:	48 1b       	sub	r20, r24
     8a0:	59 0b       	sbc	r21, r25
     8a2:	8e 81       	ldd	r24, Y+6	; 0x06
     8a4:	9f 81       	ldd	r25, Y+7	; 0x07
     8a6:	84 0f       	add	r24, r20
     8a8:	95 1f       	adc	r25, r21
     8aa:	9f 83       	std	Y+7, r25	; 0x07
     8ac:	8e 83       	std	Y+6, r24	; 0x06
     8ae:	28 81       	ld	r18, Y
     8b0:	39 81       	ldd	r19, Y+1	; 0x01
     8b2:	82 17       	cp	r24, r18
     8b4:	93 07       	cpc	r25, r19
     8b6:	30 f4       	brcc	.+12     	; 0x8c4 <prvCopyDataToQueue+0x76>
     8b8:	8a 81       	ldd	r24, Y+2	; 0x02
     8ba:	9b 81       	ldd	r25, Y+3	; 0x03
     8bc:	84 0f       	add	r24, r20
     8be:	95 1f       	adc	r25, r21
     8c0:	9f 83       	std	Y+7, r25	; 0x07
     8c2:	8e 83       	std	Y+6, r24	; 0x06
     8c4:	8a 8d       	ldd	r24, Y+26	; 0x1a
     8c6:	8f 5f       	subi	r24, 0xFF	; 255
     8c8:	8a 8f       	std	Y+26, r24	; 0x1a
     8ca:	df 91       	pop	r29
     8cc:	cf 91       	pop	r28
     8ce:	08 95       	ret

000008d0 <xQueueCRReceiveFromISR>:
     8d0:	0f 93       	push	r16
     8d2:	1f 93       	push	r17
     8d4:	cf 93       	push	r28
     8d6:	df 93       	push	r29
     8d8:	ec 01       	movw	r28, r24
     8da:	fb 01       	movw	r30, r22
     8dc:	8a 01       	movw	r16, r20
     8de:	8a 8d       	ldd	r24, Y+26	; 0x1a
     8e0:	88 23       	and	r24, r24
     8e2:	61 f1       	breq	.+88     	; 0x93c <xQueueCRReceiveFromISR+0x6c>
     8e4:	8c 8d       	ldd	r24, Y+28	; 0x1c
     8e6:	2e 81       	ldd	r18, Y+6	; 0x06
     8e8:	3f 81       	ldd	r19, Y+7	; 0x07
     8ea:	28 0f       	add	r18, r24
     8ec:	31 1d       	adc	r19, r1
     8ee:	3f 83       	std	Y+7, r19	; 0x07
     8f0:	2e 83       	std	Y+6, r18	; 0x06
     8f2:	8a 81       	ldd	r24, Y+2	; 0x02
     8f4:	9b 81       	ldd	r25, Y+3	; 0x03
     8f6:	28 17       	cp	r18, r24
     8f8:	39 07       	cpc	r19, r25
     8fa:	20 f0       	brcs	.+8      	; 0x904 <xQueueCRReceiveFromISR+0x34>
     8fc:	88 81       	ld	r24, Y
     8fe:	99 81       	ldd	r25, Y+1	; 0x01
     900:	9f 83       	std	Y+7, r25	; 0x07
     902:	8e 83       	std	Y+6, r24	; 0x06
     904:	8a 8d       	ldd	r24, Y+26	; 0x1a
     906:	81 50       	subi	r24, 0x01	; 1
     908:	8a 8f       	std	Y+26, r24	; 0x1a
     90a:	4c 8d       	ldd	r20, Y+28	; 0x1c
     90c:	6e 81       	ldd	r22, Y+6	; 0x06
     90e:	7f 81       	ldd	r23, Y+7	; 0x07
     910:	cf 01       	movw	r24, r30
     912:	50 e0       	ldi	r21, 0x00	; 0
     914:	0e 94 25 0e 	call	0x1c4a	; 0x1c4a <memcpy>
     918:	f8 01       	movw	r30, r16
     91a:	80 81       	ld	r24, Z
     91c:	88 23       	and	r24, r24
     91e:	69 f4       	brne	.+26     	; 0x93a <xQueueCRReceiveFromISR+0x6a>
     920:	88 85       	ldd	r24, Y+8	; 0x08
     922:	88 23       	and	r24, r24
     924:	51 f0       	breq	.+20     	; 0x93a <xQueueCRReceiveFromISR+0x6a>
     926:	ce 01       	movw	r24, r28
     928:	08 96       	adiw	r24, 0x08	; 8
     92a:	0e 94 7e 01 	call	0x2fc	; 0x2fc <xCoRoutineRemoveFromEventList>
     92e:	88 23       	and	r24, r24
     930:	21 f0       	breq	.+8      	; 0x93a <xQueueCRReceiveFromISR+0x6a>
     932:	81 e0       	ldi	r24, 0x01	; 1
     934:	f8 01       	movw	r30, r16
     936:	80 83       	st	Z, r24
     938:	01 c0       	rjmp	.+2      	; 0x93c <xQueueCRReceiveFromISR+0x6c>
     93a:	81 e0       	ldi	r24, 0x01	; 1
     93c:	df 91       	pop	r29
     93e:	cf 91       	pop	r28
     940:	1f 91       	pop	r17
     942:	0f 91       	pop	r16
     944:	08 95       	ret

00000946 <xQueueCRSendFromISR>:
     946:	1f 93       	push	r17
     948:	cf 93       	push	r28
     94a:	df 93       	push	r29
     94c:	ec 01       	movw	r28, r24
     94e:	14 2f       	mov	r17, r20
     950:	9a 8d       	ldd	r25, Y+26	; 0x1a
     952:	8b 8d       	ldd	r24, Y+27	; 0x1b
     954:	98 17       	cp	r25, r24
     956:	88 f4       	brcc	.+34     	; 0x97a <xQueueCRSendFromISR+0x34>
     958:	ce 01       	movw	r24, r28
     95a:	40 e0       	ldi	r20, 0x00	; 0
     95c:	0e 94 27 04 	call	0x84e	; 0x84e <prvCopyDataToQueue>
     960:	11 23       	and	r17, r17
     962:	59 f4       	brne	.+22     	; 0x97a <xQueueCRSendFromISR+0x34>
     964:	89 89       	ldd	r24, Y+17	; 0x11
     966:	88 23       	and	r24, r24
     968:	41 f0       	breq	.+16     	; 0x97a <xQueueCRSendFromISR+0x34>
     96a:	ce 01       	movw	r24, r28
     96c:	41 96       	adiw	r24, 0x11	; 17
     96e:	0e 94 7e 01 	call	0x2fc	; 0x2fc <xCoRoutineRemoveFromEventList>
     972:	48 2f       	mov	r20, r24
     974:	81 11       	cpse	r24, r1
     976:	41 e0       	ldi	r20, 0x01	; 1
     978:	14 2f       	mov	r17, r20
     97a:	81 2f       	mov	r24, r17
     97c:	df 91       	pop	r29
     97e:	cf 91       	pop	r28
     980:	1f 91       	pop	r17
     982:	08 95       	ret

00000984 <xQueueCRReceive>:
     984:	cf 93       	push	r28
     986:	df 93       	push	r29
     988:	ec 01       	movw	r28, r24
     98a:	fb 01       	movw	r30, r22
     98c:	f8 94       	cli
     98e:	8a 8d       	ldd	r24, Y+26	; 0x1a
     990:	88 23       	and	r24, r24
     992:	71 f4       	brne	.+28     	; 0x9b0 <xQueueCRReceive+0x2c>
     994:	41 15       	cp	r20, r1
     996:	51 05       	cpc	r21, r1
     998:	41 f0       	breq	.+16     	; 0x9aa <xQueueCRReceive+0x26>
     99a:	61 96       	adiw	r28, 0x11	; 17
     99c:	ca 01       	movw	r24, r20
     99e:	be 01       	movw	r22, r28
     9a0:	0e 94 91 02 	call	0x522	; 0x522 <vCoRoutineAddToDelayedList>
     9a4:	78 94       	sei
     9a6:	8c ef       	ldi	r24, 0xFC	; 252
     9a8:	30 c0       	rjmp	.+96     	; 0xa0a <xQueueCRReceive+0x86>
     9aa:	78 94       	sei
     9ac:	80 e0       	ldi	r24, 0x00	; 0
     9ae:	2d c0       	rjmp	.+90     	; 0xa0a <xQueueCRReceive+0x86>
     9b0:	78 94       	sei
     9b2:	00 00       	nop
     9b4:	f8 94       	cli
     9b6:	8a 8d       	ldd	r24, Y+26	; 0x1a
     9b8:	88 23       	and	r24, r24
     9ba:	31 f1       	breq	.+76     	; 0xa08 <xQueueCRReceive+0x84>
     9bc:	8c 8d       	ldd	r24, Y+28	; 0x1c
     9be:	2e 81       	ldd	r18, Y+6	; 0x06
     9c0:	3f 81       	ldd	r19, Y+7	; 0x07
     9c2:	28 0f       	add	r18, r24
     9c4:	31 1d       	adc	r19, r1
     9c6:	3f 83       	std	Y+7, r19	; 0x07
     9c8:	2e 83       	std	Y+6, r18	; 0x06
     9ca:	8a 81       	ldd	r24, Y+2	; 0x02
     9cc:	9b 81       	ldd	r25, Y+3	; 0x03
     9ce:	28 17       	cp	r18, r24
     9d0:	39 07       	cpc	r19, r25
     9d2:	20 f0       	brcs	.+8      	; 0x9dc <xQueueCRReceive+0x58>
     9d4:	88 81       	ld	r24, Y
     9d6:	99 81       	ldd	r25, Y+1	; 0x01
     9d8:	9f 83       	std	Y+7, r25	; 0x07
     9da:	8e 83       	std	Y+6, r24	; 0x06
     9dc:	8a 8d       	ldd	r24, Y+26	; 0x1a
     9de:	81 50       	subi	r24, 0x01	; 1
     9e0:	8a 8f       	std	Y+26, r24	; 0x1a
     9e2:	4c 8d       	ldd	r20, Y+28	; 0x1c
     9e4:	6e 81       	ldd	r22, Y+6	; 0x06
     9e6:	7f 81       	ldd	r23, Y+7	; 0x07
     9e8:	cf 01       	movw	r24, r30
     9ea:	50 e0       	ldi	r21, 0x00	; 0
     9ec:	0e 94 25 0e 	call	0x1c4a	; 0x1c4a <memcpy>
     9f0:	88 85       	ldd	r24, Y+8	; 0x08
     9f2:	88 23       	and	r24, r24
     9f4:	41 f0       	breq	.+16     	; 0xa06 <xQueueCRReceive+0x82>
     9f6:	ce 01       	movw	r24, r28
     9f8:	08 96       	adiw	r24, 0x08	; 8
     9fa:	0e 94 7e 01 	call	0x2fc	; 0x2fc <xCoRoutineRemoveFromEventList>
     9fe:	88 23       	and	r24, r24
     a00:	11 f0       	breq	.+4      	; 0xa06 <xQueueCRReceive+0x82>
     a02:	8b ef       	ldi	r24, 0xFB	; 251
     a04:	01 c0       	rjmp	.+2      	; 0xa08 <xQueueCRReceive+0x84>
     a06:	81 e0       	ldi	r24, 0x01	; 1
     a08:	78 94       	sei
     a0a:	df 91       	pop	r29
     a0c:	cf 91       	pop	r28
     a0e:	08 95       	ret

00000a10 <xQueueCRSend>:
     a10:	cf 93       	push	r28
     a12:	df 93       	push	r29
     a14:	ec 01       	movw	r28, r24
     a16:	f8 94       	cli
     a18:	0f b6       	in	r0, 0x3f	; 63
     a1a:	f8 94       	cli
     a1c:	0f 92       	push	r0
     a1e:	8a 8d       	ldd	r24, Y+26	; 0x1a
     a20:	9b 8d       	ldd	r25, Y+27	; 0x1b
     a22:	0f 90       	pop	r0
     a24:	0f be       	out	0x3f, r0	; 63
     a26:	89 17       	cp	r24, r25
     a28:	71 f4       	brne	.+28     	; 0xa46 <xQueueCRSend+0x36>
     a2a:	41 15       	cp	r20, r1
     a2c:	51 05       	cpc	r21, r1
     a2e:	41 f0       	breq	.+16     	; 0xa40 <xQueueCRSend+0x30>
     a30:	28 96       	adiw	r28, 0x08	; 8
     a32:	ca 01       	movw	r24, r20
     a34:	be 01       	movw	r22, r28
     a36:	0e 94 91 02 	call	0x522	; 0x522 <vCoRoutineAddToDelayedList>
     a3a:	78 94       	sei
     a3c:	8c ef       	ldi	r24, 0xFC	; 252
     a3e:	1c c0       	rjmp	.+56     	; 0xa78 <xQueueCRSend+0x68>
     a40:	78 94       	sei
     a42:	80 e0       	ldi	r24, 0x00	; 0
     a44:	19 c0       	rjmp	.+50     	; 0xa78 <xQueueCRSend+0x68>
     a46:	78 94       	sei
     a48:	00 00       	nop
     a4a:	f8 94       	cli
     a4c:	8a 8d       	ldd	r24, Y+26	; 0x1a
     a4e:	89 17       	cp	r24, r25
     a50:	10 f0       	brcs	.+4      	; 0xa56 <xQueueCRSend+0x46>
     a52:	80 e0       	ldi	r24, 0x00	; 0
     a54:	10 c0       	rjmp	.+32     	; 0xa76 <xQueueCRSend+0x66>
     a56:	ce 01       	movw	r24, r28
     a58:	40 e0       	ldi	r20, 0x00	; 0
     a5a:	0e 94 27 04 	call	0x84e	; 0x84e <prvCopyDataToQueue>
     a5e:	89 89       	ldd	r24, Y+17	; 0x11
     a60:	88 23       	and	r24, r24
     a62:	41 f0       	breq	.+16     	; 0xa74 <xQueueCRSend+0x64>
     a64:	ce 01       	movw	r24, r28
     a66:	41 96       	adiw	r24, 0x11	; 17
     a68:	0e 94 7e 01 	call	0x2fc	; 0x2fc <xCoRoutineRemoveFromEventList>
     a6c:	88 23       	and	r24, r24
     a6e:	11 f0       	breq	.+4      	; 0xa74 <xQueueCRSend+0x64>
     a70:	8b ef       	ldi	r24, 0xFB	; 251
     a72:	01 c0       	rjmp	.+2      	; 0xa76 <xQueueCRSend+0x66>
     a74:	81 e0       	ldi	r24, 0x01	; 1
     a76:	78 94       	sei
     a78:	df 91       	pop	r29
     a7a:	cf 91       	pop	r28
     a7c:	08 95       	ret

00000a7e <vQueueDelete>:
     a7e:	0f 93       	push	r16
     a80:	1f 93       	push	r17
     a82:	8c 01       	movw	r16, r24
     a84:	fc 01       	movw	r30, r24
     a86:	80 81       	ld	r24, Z
     a88:	91 81       	ldd	r25, Z+1	; 0x01
     a8a:	0e 94 d4 03 	call	0x7a8	; 0x7a8 <vPortFree>
     a8e:	c8 01       	movw	r24, r16
     a90:	0e 94 d4 03 	call	0x7a8	; 0x7a8 <vPortFree>
     a94:	1f 91       	pop	r17
     a96:	0f 91       	pop	r16
     a98:	08 95       	ret

00000a9a <xQueueReceiveFromISR>:
     a9a:	0f 93       	push	r16
     a9c:	1f 93       	push	r17
     a9e:	cf 93       	push	r28
     aa0:	df 93       	push	r29
     aa2:	ec 01       	movw	r28, r24
     aa4:	fb 01       	movw	r30, r22
     aa6:	8a 01       	movw	r16, r20
     aa8:	8a 8d       	ldd	r24, Y+26	; 0x1a
     aaa:	88 23       	and	r24, r24
     aac:	81 f1       	breq	.+96     	; 0xb0e <xQueueReceiveFromISR+0x74>
     aae:	48 81       	ld	r20, Y
     ab0:	59 81       	ldd	r21, Y+1	; 0x01
     ab2:	41 15       	cp	r20, r1
     ab4:	51 05       	cpc	r21, r1
     ab6:	a9 f0       	breq	.+42     	; 0xae2 <xQueueReceiveFromISR+0x48>
     ab8:	8c 8d       	ldd	r24, Y+28	; 0x1c
     aba:	2e 81       	ldd	r18, Y+6	; 0x06
     abc:	3f 81       	ldd	r19, Y+7	; 0x07
     abe:	28 0f       	add	r18, r24
     ac0:	31 1d       	adc	r19, r1
     ac2:	3f 83       	std	Y+7, r19	; 0x07
     ac4:	2e 83       	std	Y+6, r18	; 0x06
     ac6:	8a 81       	ldd	r24, Y+2	; 0x02
     ac8:	9b 81       	ldd	r25, Y+3	; 0x03
     aca:	28 17       	cp	r18, r24
     acc:	39 07       	cpc	r19, r25
     ace:	10 f0       	brcs	.+4      	; 0xad4 <xQueueReceiveFromISR+0x3a>
     ad0:	5f 83       	std	Y+7, r21	; 0x07
     ad2:	4e 83       	std	Y+6, r20	; 0x06
     ad4:	4c 8d       	ldd	r20, Y+28	; 0x1c
     ad6:	6e 81       	ldd	r22, Y+6	; 0x06
     ad8:	7f 81       	ldd	r23, Y+7	; 0x07
     ada:	cf 01       	movw	r24, r30
     adc:	50 e0       	ldi	r21, 0x00	; 0
     ade:	0e 94 25 0e 	call	0x1c4a	; 0x1c4a <memcpy>
     ae2:	8a 8d       	ldd	r24, Y+26	; 0x1a
     ae4:	81 50       	subi	r24, 0x01	; 1
     ae6:	8a 8f       	std	Y+26, r24	; 0x1a
     ae8:	8d 8d       	ldd	r24, Y+29	; 0x1d
     aea:	8f 3f       	cpi	r24, 0xFF	; 255
     aec:	69 f4       	brne	.+26     	; 0xb08 <xQueueReceiveFromISR+0x6e>
     aee:	88 85       	ldd	r24, Y+8	; 0x08
     af0:	88 23       	and	r24, r24
     af2:	61 f0       	breq	.+24     	; 0xb0c <xQueueReceiveFromISR+0x72>
     af4:	ce 01       	movw	r24, r28
     af6:	08 96       	adiw	r24, 0x08	; 8
     af8:	0e 94 66 08 	call	0x10cc	; 0x10cc <xTaskRemoveFromEventList>
     afc:	88 23       	and	r24, r24
     afe:	31 f0       	breq	.+12     	; 0xb0c <xQueueReceiveFromISR+0x72>
     b00:	81 e0       	ldi	r24, 0x01	; 1
     b02:	f8 01       	movw	r30, r16
     b04:	80 83       	st	Z, r24
     b06:	03 c0       	rjmp	.+6      	; 0xb0e <xQueueReceiveFromISR+0x74>
     b08:	8f 5f       	subi	r24, 0xFF	; 255
     b0a:	8d 8f       	std	Y+29, r24	; 0x1d
     b0c:	81 e0       	ldi	r24, 0x01	; 1
     b0e:	df 91       	pop	r29
     b10:	cf 91       	pop	r28
     b12:	1f 91       	pop	r17
     b14:	0f 91       	pop	r16
     b16:	08 95       	ret

00000b18 <xQueueGenericSendFromISR>:
     b18:	0f 93       	push	r16
     b1a:	1f 93       	push	r17
     b1c:	cf 93       	push	r28
     b1e:	df 93       	push	r29
     b20:	ec 01       	movw	r28, r24
     b22:	8a 01       	movw	r16, r20
     b24:	9a 8d       	ldd	r25, Y+26	; 0x1a
     b26:	8b 8d       	ldd	r24, Y+27	; 0x1b
     b28:	98 17       	cp	r25, r24
     b2a:	10 f0       	brcs	.+4      	; 0xb30 <xQueueGenericSendFromISR+0x18>
     b2c:	80 e0       	ldi	r24, 0x00	; 0
     b2e:	17 c0       	rjmp	.+46     	; 0xb5e <xQueueGenericSendFromISR+0x46>
     b30:	ce 01       	movw	r24, r28
     b32:	42 2f       	mov	r20, r18
     b34:	0e 94 27 04 	call	0x84e	; 0x84e <prvCopyDataToQueue>
     b38:	8e 8d       	ldd	r24, Y+30	; 0x1e
     b3a:	8f 3f       	cpi	r24, 0xFF	; 255
     b3c:	69 f4       	brne	.+26     	; 0xb58 <xQueueGenericSendFromISR+0x40>
     b3e:	89 89       	ldd	r24, Y+17	; 0x11
     b40:	88 23       	and	r24, r24
     b42:	61 f0       	breq	.+24     	; 0xb5c <xQueueGenericSendFromISR+0x44>
     b44:	ce 01       	movw	r24, r28
     b46:	41 96       	adiw	r24, 0x11	; 17
     b48:	0e 94 66 08 	call	0x10cc	; 0x10cc <xTaskRemoveFromEventList>
     b4c:	88 23       	and	r24, r24
     b4e:	31 f0       	breq	.+12     	; 0xb5c <xQueueGenericSendFromISR+0x44>
     b50:	81 e0       	ldi	r24, 0x01	; 1
     b52:	f8 01       	movw	r30, r16
     b54:	80 83       	st	Z, r24
     b56:	03 c0       	rjmp	.+6      	; 0xb5e <xQueueGenericSendFromISR+0x46>
     b58:	8f 5f       	subi	r24, 0xFF	; 255
     b5a:	8e 8f       	std	Y+30, r24	; 0x1e
     b5c:	81 e0       	ldi	r24, 0x01	; 1
     b5e:	df 91       	pop	r29
     b60:	cf 91       	pop	r28
     b62:	1f 91       	pop	r17
     b64:	0f 91       	pop	r16
     b66:	08 95       	ret

00000b68 <prvUnlockQueue>:
     b68:	0f 93       	push	r16
     b6a:	1f 93       	push	r17
     b6c:	cf 93       	push	r28
     b6e:	df 93       	push	r29
     b70:	ec 01       	movw	r28, r24
     b72:	0f b6       	in	r0, 0x3f	; 63
     b74:	f8 94       	cli
     b76:	0f 92       	push	r0
     b78:	8c 01       	movw	r16, r24
     b7a:	0f 5e       	subi	r16, 0xEF	; 239
     b7c:	1f 4f       	sbci	r17, 0xFF	; 255
     b7e:	0d c0       	rjmp	.+26     	; 0xb9a <prvUnlockQueue+0x32>
     b80:	89 89       	ldd	r24, Y+17	; 0x11
     b82:	88 23       	and	r24, r24
     b84:	69 f0       	breq	.+26     	; 0xba0 <prvUnlockQueue+0x38>
     b86:	c8 01       	movw	r24, r16
     b88:	0e 94 66 08 	call	0x10cc	; 0x10cc <xTaskRemoveFromEventList>
     b8c:	88 23       	and	r24, r24
     b8e:	11 f0       	breq	.+4      	; 0xb94 <prvUnlockQueue+0x2c>
     b90:	0e 94 62 08 	call	0x10c4	; 0x10c4 <vTaskMissedYield>
     b94:	8e 8d       	ldd	r24, Y+30	; 0x1e
     b96:	81 50       	subi	r24, 0x01	; 1
     b98:	8e 8f       	std	Y+30, r24	; 0x1e
     b9a:	8e 8d       	ldd	r24, Y+30	; 0x1e
     b9c:	18 16       	cp	r1, r24
     b9e:	84 f3       	brlt	.-32     	; 0xb80 <prvUnlockQueue+0x18>
     ba0:	8f ef       	ldi	r24, 0xFF	; 255
     ba2:	8e 8f       	std	Y+30, r24	; 0x1e
     ba4:	0f 90       	pop	r0
     ba6:	0f be       	out	0x3f, r0	; 63
     ba8:	0f b6       	in	r0, 0x3f	; 63
     baa:	f8 94       	cli
     bac:	0f 92       	push	r0
     bae:	8e 01       	movw	r16, r28
     bb0:	08 5f       	subi	r16, 0xF8	; 248
     bb2:	1f 4f       	sbci	r17, 0xFF	; 255
     bb4:	0d c0       	rjmp	.+26     	; 0xbd0 <prvUnlockQueue+0x68>
     bb6:	88 85       	ldd	r24, Y+8	; 0x08
     bb8:	88 23       	and	r24, r24
     bba:	69 f0       	breq	.+26     	; 0xbd6 <prvUnlockQueue+0x6e>
     bbc:	c8 01       	movw	r24, r16
     bbe:	0e 94 66 08 	call	0x10cc	; 0x10cc <xTaskRemoveFromEventList>
     bc2:	88 23       	and	r24, r24
     bc4:	11 f0       	breq	.+4      	; 0xbca <prvUnlockQueue+0x62>
     bc6:	0e 94 62 08 	call	0x10c4	; 0x10c4 <vTaskMissedYield>
     bca:	8d 8d       	ldd	r24, Y+29	; 0x1d
     bcc:	81 50       	subi	r24, 0x01	; 1
     bce:	8d 8f       	std	Y+29, r24	; 0x1d
     bd0:	8d 8d       	ldd	r24, Y+29	; 0x1d
     bd2:	18 16       	cp	r1, r24
     bd4:	84 f3       	brlt	.-32     	; 0xbb6 <prvUnlockQueue+0x4e>
     bd6:	8f ef       	ldi	r24, 0xFF	; 255
     bd8:	8d 8f       	std	Y+29, r24	; 0x1d
     bda:	0f 90       	pop	r0
     bdc:	0f be       	out	0x3f, r0	; 63
     bde:	df 91       	pop	r29
     be0:	cf 91       	pop	r28
     be2:	1f 91       	pop	r17
     be4:	0f 91       	pop	r16
     be6:	08 95       	ret

00000be8 <xQueueGenericReceive>:
     be8:	7f 92       	push	r7
     bea:	8f 92       	push	r8
     bec:	9f 92       	push	r9
     bee:	af 92       	push	r10
     bf0:	bf 92       	push	r11
     bf2:	cf 92       	push	r12
     bf4:	df 92       	push	r13
     bf6:	ef 92       	push	r14
     bf8:	ff 92       	push	r15
     bfa:	0f 93       	push	r16
     bfc:	1f 93       	push	r17
     bfe:	df 93       	push	r29
     c00:	cf 93       	push	r28
     c02:	00 d0       	rcall	.+0      	; 0xc04 <xQueueGenericReceive+0x1c>
     c04:	00 d0       	rcall	.+0      	; 0xc06 <xQueueGenericReceive+0x1e>
     c06:	0f 92       	push	r0
     c08:	cd b7       	in	r28, 0x3d	; 61
     c0a:	de b7       	in	r29, 0x3e	; 62
     c0c:	8c 01       	movw	r16, r24
     c0e:	96 2e       	mov	r9, r22
     c10:	87 2e       	mov	r8, r23
     c12:	5d 83       	std	Y+5, r21	; 0x05
     c14:	4c 83       	std	Y+4, r20	; 0x04
     c16:	72 2e       	mov	r7, r18
     c18:	91 e1       	ldi	r25, 0x11	; 17
     c1a:	c9 2e       	mov	r12, r25
     c1c:	d1 2c       	mov	r13, r1
     c1e:	c0 0e       	add	r12, r16
     c20:	d1 1e       	adc	r13, r17
     c22:	20 e0       	ldi	r18, 0x00	; 0
     c24:	7e 01       	movw	r14, r28
     c26:	08 94       	sec
     c28:	e1 1c       	adc	r14, r1
     c2a:	f1 1c       	adc	r15, r1
     c2c:	84 e0       	ldi	r24, 0x04	; 4
     c2e:	a8 2e       	mov	r10, r24
     c30:	b1 2c       	mov	r11, r1
     c32:	ac 0e       	add	r10, r28
     c34:	bd 1e       	adc	r11, r29
     c36:	01 c0       	rjmp	.+2      	; 0xc3a <xQueueGenericReceive+0x52>
     c38:	21 e0       	ldi	r18, 0x01	; 1
     c3a:	0f b6       	in	r0, 0x3f	; 63
     c3c:	f8 94       	cli
     c3e:	0f 92       	push	r0
     c40:	f8 01       	movw	r30, r16
     c42:	82 8d       	ldd	r24, Z+26	; 0x1a
     c44:	88 23       	and	r24, r24
     c46:	09 f4       	brne	.+2      	; 0xc4a <xQueueGenericReceive+0x62>
     c48:	3e c0       	rjmp	.+124    	; 0xcc6 <xQueueGenericReceive+0xde>
     c4a:	e6 80       	ldd	r14, Z+6	; 0x06
     c4c:	f7 80       	ldd	r15, Z+7	; 0x07
     c4e:	40 81       	ld	r20, Z
     c50:	51 81       	ldd	r21, Z+1	; 0x01
     c52:	41 15       	cp	r20, r1
     c54:	51 05       	cpc	r21, r1
     c56:	b1 f0       	breq	.+44     	; 0xc84 <xQueueGenericReceive+0x9c>
     c58:	84 8d       	ldd	r24, Z+28	; 0x1c
     c5a:	97 01       	movw	r18, r14
     c5c:	28 0f       	add	r18, r24
     c5e:	31 1d       	adc	r19, r1
     c60:	37 83       	std	Z+7, r19	; 0x07
     c62:	26 83       	std	Z+6, r18	; 0x06
     c64:	82 81       	ldd	r24, Z+2	; 0x02
     c66:	93 81       	ldd	r25, Z+3	; 0x03
     c68:	28 17       	cp	r18, r24
     c6a:	39 07       	cpc	r19, r25
     c6c:	10 f0       	brcs	.+4      	; 0xc72 <xQueueGenericReceive+0x8a>
     c6e:	57 83       	std	Z+7, r21	; 0x07
     c70:	46 83       	std	Z+6, r20	; 0x06
     c72:	f8 01       	movw	r30, r16
     c74:	44 8d       	ldd	r20, Z+28	; 0x1c
     c76:	66 81       	ldd	r22, Z+6	; 0x06
     c78:	77 81       	ldd	r23, Z+7	; 0x07
     c7a:	89 2d       	mov	r24, r9
     c7c:	98 2d       	mov	r25, r8
     c7e:	50 e0       	ldi	r21, 0x00	; 0
     c80:	0e 94 25 0e 	call	0x1c4a	; 0x1c4a <memcpy>
     c84:	77 20       	and	r7, r7
     c86:	71 f4       	brne	.+28     	; 0xca4 <xQueueGenericReceive+0xbc>
     c88:	f8 01       	movw	r30, r16
     c8a:	82 8d       	ldd	r24, Z+26	; 0x1a
     c8c:	81 50       	subi	r24, 0x01	; 1
     c8e:	82 8f       	std	Z+26, r24	; 0x1a
     c90:	80 85       	ldd	r24, Z+8	; 0x08
     c92:	88 23       	and	r24, r24
     c94:	a1 f0       	breq	.+40     	; 0xcbe <xQueueGenericReceive+0xd6>
     c96:	c8 01       	movw	r24, r16
     c98:	08 96       	adiw	r24, 0x08	; 8
     c9a:	0e 94 66 08 	call	0x10cc	; 0x10cc <xTaskRemoveFromEventList>
     c9e:	81 30       	cpi	r24, 0x01	; 1
     ca0:	71 f4       	brne	.+28     	; 0xcbe <xQueueGenericReceive+0xd6>
     ca2:	0b c0       	rjmp	.+22     	; 0xcba <xQueueGenericReceive+0xd2>
     ca4:	f8 01       	movw	r30, r16
     ca6:	f7 82       	std	Z+7, r15	; 0x07
     ca8:	e6 82       	std	Z+6, r14	; 0x06
     caa:	81 89       	ldd	r24, Z+17	; 0x11
     cac:	88 23       	and	r24, r24
     cae:	39 f0       	breq	.+14     	; 0xcbe <xQueueGenericReceive+0xd6>
     cb0:	c6 01       	movw	r24, r12
     cb2:	0e 94 66 08 	call	0x10cc	; 0x10cc <xTaskRemoveFromEventList>
     cb6:	88 23       	and	r24, r24
     cb8:	11 f0       	breq	.+4      	; 0xcbe <xQueueGenericReceive+0xd6>
     cba:	0e 94 25 01 	call	0x24a	; 0x24a <vPortYield>
     cbe:	0f 90       	pop	r0
     cc0:	0f be       	out	0x3f, r0	; 63
     cc2:	81 e0       	ldi	r24, 0x01	; 1
     cc4:	4a c0       	rjmp	.+148    	; 0xd5a <xQueueGenericReceive+0x172>
     cc6:	8c 81       	ldd	r24, Y+4	; 0x04
     cc8:	9d 81       	ldd	r25, Y+5	; 0x05
     cca:	89 2b       	or	r24, r25
     ccc:	19 f4       	brne	.+6      	; 0xcd4 <xQueueGenericReceive+0xec>
     cce:	0f 90       	pop	r0
     cd0:	0f be       	out	0x3f, r0	; 63
     cd2:	42 c0       	rjmp	.+132    	; 0xd58 <xQueueGenericReceive+0x170>
     cd4:	22 23       	and	r18, r18
     cd6:	19 f4       	brne	.+6      	; 0xcde <xQueueGenericReceive+0xf6>
     cd8:	c7 01       	movw	r24, r14
     cda:	0e 94 1d 08 	call	0x103a	; 0x103a <vTaskSetTimeOutState>
     cde:	0f 90       	pop	r0
     ce0:	0f be       	out	0x3f, r0	; 63
     ce2:	0e 94 c7 07 	call	0xf8e	; 0xf8e <vTaskSuspendAll>
     ce6:	0f b6       	in	r0, 0x3f	; 63
     ce8:	f8 94       	cli
     cea:	0f 92       	push	r0
     cec:	f8 01       	movw	r30, r16
     cee:	85 8d       	ldd	r24, Z+29	; 0x1d
     cf0:	8f 3f       	cpi	r24, 0xFF	; 255
     cf2:	09 f4       	brne	.+2      	; 0xcf6 <xQueueGenericReceive+0x10e>
     cf4:	15 8e       	std	Z+29, r1	; 0x1d
     cf6:	f8 01       	movw	r30, r16
     cf8:	86 8d       	ldd	r24, Z+30	; 0x1e
     cfa:	8f 3f       	cpi	r24, 0xFF	; 255
     cfc:	09 f4       	brne	.+2      	; 0xd00 <xQueueGenericReceive+0x118>
     cfe:	16 8e       	std	Z+30, r1	; 0x1e
     d00:	0f 90       	pop	r0
     d02:	0f be       	out	0x3f, r0	; 63
     d04:	c7 01       	movw	r24, r14
     d06:	b5 01       	movw	r22, r10
     d08:	0e 94 28 08 	call	0x1050	; 0x1050 <xTaskCheckForTimeOut>
     d0c:	88 23       	and	r24, r24
     d0e:	f9 f4       	brne	.+62     	; 0xd4e <xQueueGenericReceive+0x166>
     d10:	0f b6       	in	r0, 0x3f	; 63
     d12:	f8 94       	cli
     d14:	0f 92       	push	r0
     d16:	f8 01       	movw	r30, r16
     d18:	82 8d       	ldd	r24, Z+26	; 0x1a
     d1a:	0f 90       	pop	r0
     d1c:	0f be       	out	0x3f, r0	; 63
     d1e:	88 23       	and	r24, r24
     d20:	81 f4       	brne	.+32     	; 0xd42 <xQueueGenericReceive+0x15a>
     d22:	6c 81       	ldd	r22, Y+4	; 0x04
     d24:	7d 81       	ldd	r23, Y+5	; 0x05
     d26:	c6 01       	movw	r24, r12
     d28:	0e 94 1f 09 	call	0x123e	; 0x123e <vTaskPlaceOnEventList>
     d2c:	c8 01       	movw	r24, r16
     d2e:	0e 94 b4 05 	call	0xb68	; 0xb68 <prvUnlockQueue>
     d32:	0e 94 58 09 	call	0x12b0	; 0x12b0 <xTaskResumeAll>
     d36:	88 23       	and	r24, r24
     d38:	09 f0       	breq	.+2      	; 0xd3c <xQueueGenericReceive+0x154>
     d3a:	7e cf       	rjmp	.-260    	; 0xc38 <xQueueGenericReceive+0x50>
     d3c:	0e 94 25 01 	call	0x24a	; 0x24a <vPortYield>
     d40:	7b cf       	rjmp	.-266    	; 0xc38 <xQueueGenericReceive+0x50>
     d42:	c8 01       	movw	r24, r16
     d44:	0e 94 b4 05 	call	0xb68	; 0xb68 <prvUnlockQueue>
     d48:	0e 94 58 09 	call	0x12b0	; 0x12b0 <xTaskResumeAll>
     d4c:	75 cf       	rjmp	.-278    	; 0xc38 <xQueueGenericReceive+0x50>
     d4e:	c8 01       	movw	r24, r16
     d50:	0e 94 b4 05 	call	0xb68	; 0xb68 <prvUnlockQueue>
     d54:	0e 94 58 09 	call	0x12b0	; 0x12b0 <xTaskResumeAll>
     d58:	80 e0       	ldi	r24, 0x00	; 0
     d5a:	0f 90       	pop	r0
     d5c:	0f 90       	pop	r0
     d5e:	0f 90       	pop	r0
     d60:	0f 90       	pop	r0
     d62:	0f 90       	pop	r0
     d64:	cf 91       	pop	r28
     d66:	df 91       	pop	r29
     d68:	1f 91       	pop	r17
     d6a:	0f 91       	pop	r16
     d6c:	ff 90       	pop	r15
     d6e:	ef 90       	pop	r14
     d70:	df 90       	pop	r13
     d72:	cf 90       	pop	r12
     d74:	bf 90       	pop	r11
     d76:	af 90       	pop	r10
     d78:	9f 90       	pop	r9
     d7a:	8f 90       	pop	r8
     d7c:	7f 90       	pop	r7
     d7e:	08 95       	ret

00000d80 <xQueueGenericSend>:
     d80:	7f 92       	push	r7
     d82:	8f 92       	push	r8
     d84:	9f 92       	push	r9
     d86:	af 92       	push	r10
     d88:	bf 92       	push	r11
     d8a:	cf 92       	push	r12
     d8c:	df 92       	push	r13
     d8e:	ef 92       	push	r14
     d90:	ff 92       	push	r15
     d92:	0f 93       	push	r16
     d94:	1f 93       	push	r17
     d96:	df 93       	push	r29
     d98:	cf 93       	push	r28
     d9a:	00 d0       	rcall	.+0      	; 0xd9c <xQueueGenericSend+0x1c>
     d9c:	00 d0       	rcall	.+0      	; 0xd9e <xQueueGenericSend+0x1e>
     d9e:	0f 92       	push	r0
     da0:	cd b7       	in	r28, 0x3d	; 61
     da2:	de b7       	in	r29, 0x3e	; 62
     da4:	8c 01       	movw	r16, r24
     da6:	6b 01       	movw	r12, r22
     da8:	5d 83       	std	Y+5, r21	; 0x05
     daa:	4c 83       	std	Y+4, r20	; 0x04
     dac:	72 2e       	mov	r7, r18
     dae:	48 e0       	ldi	r20, 0x08	; 8
     db0:	e4 2e       	mov	r14, r20
     db2:	f1 2c       	mov	r15, r1
     db4:	e8 0e       	add	r14, r24
     db6:	f9 1e       	adc	r15, r25
     db8:	20 e0       	ldi	r18, 0x00	; 0
     dba:	5e 01       	movw	r10, r28
     dbc:	08 94       	sec
     dbe:	a1 1c       	adc	r10, r1
     dc0:	b1 1c       	adc	r11, r1
     dc2:	34 e0       	ldi	r19, 0x04	; 4
     dc4:	83 2e       	mov	r8, r19
     dc6:	91 2c       	mov	r9, r1
     dc8:	8c 0e       	add	r8, r28
     dca:	9d 1e       	adc	r9, r29
     dcc:	01 c0       	rjmp	.+2      	; 0xdd0 <xQueueGenericSend+0x50>
     dce:	21 e0       	ldi	r18, 0x01	; 1
     dd0:	0f b6       	in	r0, 0x3f	; 63
     dd2:	f8 94       	cli
     dd4:	0f 92       	push	r0
     dd6:	f8 01       	movw	r30, r16
     dd8:	92 8d       	ldd	r25, Z+26	; 0x1a
     dda:	83 8d       	ldd	r24, Z+27	; 0x1b
     ddc:	98 17       	cp	r25, r24
     dde:	a8 f4       	brcc	.+42     	; 0xe0a <xQueueGenericSend+0x8a>
     de0:	c8 01       	movw	r24, r16
     de2:	b6 01       	movw	r22, r12
     de4:	47 2d       	mov	r20, r7
     de6:	0e 94 27 04 	call	0x84e	; 0x84e <prvCopyDataToQueue>
     dea:	f8 01       	movw	r30, r16
     dec:	81 89       	ldd	r24, Z+17	; 0x11
     dee:	88 23       	and	r24, r24
     df0:	41 f0       	breq	.+16     	; 0xe02 <xQueueGenericSend+0x82>
     df2:	c8 01       	movw	r24, r16
     df4:	41 96       	adiw	r24, 0x11	; 17
     df6:	0e 94 66 08 	call	0x10cc	; 0x10cc <xTaskRemoveFromEventList>
     dfa:	81 30       	cpi	r24, 0x01	; 1
     dfc:	11 f4       	brne	.+4      	; 0xe02 <xQueueGenericSend+0x82>
     dfe:	0e 94 25 01 	call	0x24a	; 0x24a <vPortYield>
     e02:	0f 90       	pop	r0
     e04:	0f be       	out	0x3f, r0	; 63
     e06:	81 e0       	ldi	r24, 0x01	; 1
     e08:	4c c0       	rjmp	.+152    	; 0xea2 <xQueueGenericSend+0x122>
     e0a:	8c 81       	ldd	r24, Y+4	; 0x04
     e0c:	9d 81       	ldd	r25, Y+5	; 0x05
     e0e:	89 2b       	or	r24, r25
     e10:	19 f4       	brne	.+6      	; 0xe18 <xQueueGenericSend+0x98>
     e12:	0f 90       	pop	r0
     e14:	0f be       	out	0x3f, r0	; 63
     e16:	44 c0       	rjmp	.+136    	; 0xea0 <xQueueGenericSend+0x120>
     e18:	22 23       	and	r18, r18
     e1a:	19 f4       	brne	.+6      	; 0xe22 <xQueueGenericSend+0xa2>
     e1c:	c5 01       	movw	r24, r10
     e1e:	0e 94 1d 08 	call	0x103a	; 0x103a <vTaskSetTimeOutState>
     e22:	0f 90       	pop	r0
     e24:	0f be       	out	0x3f, r0	; 63
     e26:	0e 94 c7 07 	call	0xf8e	; 0xf8e <vTaskSuspendAll>
     e2a:	0f b6       	in	r0, 0x3f	; 63
     e2c:	f8 94       	cli
     e2e:	0f 92       	push	r0
     e30:	f8 01       	movw	r30, r16
     e32:	85 8d       	ldd	r24, Z+29	; 0x1d
     e34:	8f 3f       	cpi	r24, 0xFF	; 255
     e36:	09 f4       	brne	.+2      	; 0xe3a <xQueueGenericSend+0xba>
     e38:	15 8e       	std	Z+29, r1	; 0x1d
     e3a:	f8 01       	movw	r30, r16
     e3c:	86 8d       	ldd	r24, Z+30	; 0x1e
     e3e:	8f 3f       	cpi	r24, 0xFF	; 255
     e40:	09 f4       	brne	.+2      	; 0xe44 <xQueueGenericSend+0xc4>
     e42:	16 8e       	std	Z+30, r1	; 0x1e
     e44:	0f 90       	pop	r0
     e46:	0f be       	out	0x3f, r0	; 63
     e48:	c5 01       	movw	r24, r10
     e4a:	b4 01       	movw	r22, r8
     e4c:	0e 94 28 08 	call	0x1050	; 0x1050 <xTaskCheckForTimeOut>
     e50:	88 23       	and	r24, r24
     e52:	09 f5       	brne	.+66     	; 0xe96 <xQueueGenericSend+0x116>
     e54:	0f b6       	in	r0, 0x3f	; 63
     e56:	f8 94       	cli
     e58:	0f 92       	push	r0
     e5a:	f8 01       	movw	r30, r16
     e5c:	92 8d       	ldd	r25, Z+26	; 0x1a
     e5e:	0f 90       	pop	r0
     e60:	0f be       	out	0x3f, r0	; 63
     e62:	f8 01       	movw	r30, r16
     e64:	83 8d       	ldd	r24, Z+27	; 0x1b
     e66:	98 17       	cp	r25, r24
     e68:	81 f4       	brne	.+32     	; 0xe8a <xQueueGenericSend+0x10a>
     e6a:	6c 81       	ldd	r22, Y+4	; 0x04
     e6c:	7d 81       	ldd	r23, Y+5	; 0x05
     e6e:	c7 01       	movw	r24, r14
     e70:	0e 94 1f 09 	call	0x123e	; 0x123e <vTaskPlaceOnEventList>
     e74:	c8 01       	movw	r24, r16
     e76:	0e 94 b4 05 	call	0xb68	; 0xb68 <prvUnlockQueue>
     e7a:	0e 94 58 09 	call	0x12b0	; 0x12b0 <xTaskResumeAll>
     e7e:	88 23       	and	r24, r24
     e80:	09 f0       	breq	.+2      	; 0xe84 <xQueueGenericSend+0x104>
     e82:	a5 cf       	rjmp	.-182    	; 0xdce <xQueueGenericSend+0x4e>
     e84:	0e 94 25 01 	call	0x24a	; 0x24a <vPortYield>
     e88:	a2 cf       	rjmp	.-188    	; 0xdce <xQueueGenericSend+0x4e>
     e8a:	c8 01       	movw	r24, r16
     e8c:	0e 94 b4 05 	call	0xb68	; 0xb68 <prvUnlockQueue>
     e90:	0e 94 58 09 	call	0x12b0	; 0x12b0 <xTaskResumeAll>
     e94:	9c cf       	rjmp	.-200    	; 0xdce <xQueueGenericSend+0x4e>
     e96:	c8 01       	movw	r24, r16
     e98:	0e 94 b4 05 	call	0xb68	; 0xb68 <prvUnlockQueue>
     e9c:	0e 94 58 09 	call	0x12b0	; 0x12b0 <xTaskResumeAll>
     ea0:	80 e0       	ldi	r24, 0x00	; 0
     ea2:	0f 90       	pop	r0
     ea4:	0f 90       	pop	r0
     ea6:	0f 90       	pop	r0
     ea8:	0f 90       	pop	r0
     eaa:	0f 90       	pop	r0
     eac:	cf 91       	pop	r28
     eae:	df 91       	pop	r29
     eb0:	1f 91       	pop	r17
     eb2:	0f 91       	pop	r16
     eb4:	ff 90       	pop	r15
     eb6:	ef 90       	pop	r14
     eb8:	df 90       	pop	r13
     eba:	cf 90       	pop	r12
     ebc:	bf 90       	pop	r11
     ebe:	af 90       	pop	r10
     ec0:	9f 90       	pop	r9
     ec2:	8f 90       	pop	r8
     ec4:	7f 90       	pop	r7
     ec6:	08 95       	ret

00000ec8 <xQueueCreate>:
     ec8:	8f 92       	push	r8
     eca:	9f 92       	push	r9
     ecc:	af 92       	push	r10
     ece:	bf 92       	push	r11
     ed0:	cf 92       	push	r12
     ed2:	df 92       	push	r13
     ed4:	ef 92       	push	r14
     ed6:	ff 92       	push	r15
     ed8:	0f 93       	push	r16
     eda:	1f 93       	push	r17
     edc:	cf 93       	push	r28
     ede:	df 93       	push	r29
     ee0:	98 2e       	mov	r9, r24
     ee2:	86 2e       	mov	r8, r22
     ee4:	88 23       	and	r24, r24
     ee6:	09 f4       	brne	.+2      	; 0xeea <xQueueCreate+0x22>
     ee8:	42 c0       	rjmp	.+132    	; 0xf6e <xQueueCreate+0xa6>
     eea:	8f e1       	ldi	r24, 0x1F	; 31
     eec:	90 e0       	ldi	r25, 0x00	; 0
     eee:	0e 94 e4 03 	call	0x7c8	; 0x7c8 <pvPortMalloc>
     ef2:	8c 01       	movw	r16, r24
     ef4:	ec 01       	movw	r28, r24
     ef6:	00 97       	sbiw	r24, 0x00	; 0
     ef8:	e1 f1       	breq	.+120    	; 0xf72 <xQueueCreate+0xaa>
     efa:	c9 2c       	mov	r12, r9
     efc:	dd 24       	eor	r13, r13
     efe:	a8 2c       	mov	r10, r8
     f00:	bb 24       	eor	r11, r11
     f02:	ac 9c       	mul	r10, r12
     f04:	70 01       	movw	r14, r0
     f06:	ad 9c       	mul	r10, r13
     f08:	f0 0c       	add	r15, r0
     f0a:	bc 9c       	mul	r11, r12
     f0c:	f0 0c       	add	r15, r0
     f0e:	11 24       	eor	r1, r1
     f10:	c7 01       	movw	r24, r14
     f12:	01 96       	adiw	r24, 0x01	; 1
     f14:	0e 94 e4 03 	call	0x7c8	; 0x7c8 <pvPortMalloc>
     f18:	9c 01       	movw	r18, r24
     f1a:	99 83       	std	Y+1, r25	; 0x01
     f1c:	88 83       	st	Y, r24
     f1e:	00 97       	sbiw	r24, 0x00	; 0
     f20:	19 f1       	breq	.+70     	; 0xf68 <xQueueCreate+0xa0>
     f22:	e8 0e       	add	r14, r24
     f24:	f9 1e       	adc	r15, r25
     f26:	fb 82       	std	Y+3, r15	; 0x03
     f28:	ea 82       	std	Y+2, r14	; 0x02
     f2a:	1a 8e       	std	Y+26, r1	; 0x1a
     f2c:	9d 83       	std	Y+5, r25	; 0x05
     f2e:	8c 83       	std	Y+4, r24	; 0x04
     f30:	08 94       	sec
     f32:	c1 08       	sbc	r12, r1
     f34:	d1 08       	sbc	r13, r1
     f36:	ca 9c       	mul	r12, r10
     f38:	c0 01       	movw	r24, r0
     f3a:	cb 9c       	mul	r12, r11
     f3c:	90 0d       	add	r25, r0
     f3e:	da 9c       	mul	r13, r10
     f40:	90 0d       	add	r25, r0
     f42:	11 24       	eor	r1, r1
     f44:	28 0f       	add	r18, r24
     f46:	39 1f       	adc	r19, r25
     f48:	3f 83       	std	Y+7, r19	; 0x07
     f4a:	2e 83       	std	Y+6, r18	; 0x06
     f4c:	9b 8e       	std	Y+27, r9	; 0x1b
     f4e:	8c 8e       	std	Y+28, r8	; 0x1c
     f50:	8f ef       	ldi	r24, 0xFF	; 255
     f52:	8d 8f       	std	Y+29, r24	; 0x1d
     f54:	8e 8f       	std	Y+30, r24	; 0x1e
     f56:	c8 01       	movw	r24, r16
     f58:	08 96       	adiw	r24, 0x08	; 8
     f5a:	0e 94 3a 03 	call	0x674	; 0x674 <vListInitialise>
     f5e:	c8 01       	movw	r24, r16
     f60:	41 96       	adiw	r24, 0x11	; 17
     f62:	0e 94 3a 03 	call	0x674	; 0x674 <vListInitialise>
     f66:	05 c0       	rjmp	.+10     	; 0xf72 <xQueueCreate+0xaa>
     f68:	c8 01       	movw	r24, r16
     f6a:	0e 94 d4 03 	call	0x7a8	; 0x7a8 <vPortFree>
     f6e:	c0 e0       	ldi	r28, 0x00	; 0
     f70:	d0 e0       	ldi	r29, 0x00	; 0
     f72:	ce 01       	movw	r24, r28
     f74:	df 91       	pop	r29
     f76:	cf 91       	pop	r28
     f78:	1f 91       	pop	r17
     f7a:	0f 91       	pop	r16
     f7c:	ff 90       	pop	r15
     f7e:	ef 90       	pop	r14
     f80:	df 90       	pop	r13
     f82:	cf 90       	pop	r12
     f84:	bf 90       	pop	r11
     f86:	af 90       	pop	r10
     f88:	9f 90       	pop	r9
     f8a:	8f 90       	pop	r8
     f8c:	08 95       	ret

00000f8e <vTaskSuspendAll>:
     f8e:	80 91 23 03 	lds	r24, 0x0323
     f92:	8f 5f       	subi	r24, 0xFF	; 255
     f94:	80 93 23 03 	sts	0x0323, r24
     f98:	08 95       	ret

00000f9a <xTaskGetTickCount>:
     f9a:	0f b6       	in	r0, 0x3f	; 63
     f9c:	f8 94       	cli
     f9e:	0f 92       	push	r0
     fa0:	20 91 21 03 	lds	r18, 0x0321
     fa4:	30 91 22 03 	lds	r19, 0x0322
     fa8:	0f 90       	pop	r0
     faa:	0f be       	out	0x3f, r0	; 63
     fac:	c9 01       	movw	r24, r18
     fae:	08 95       	ret

00000fb0 <uxTaskGetNumberOfTasks>:
     fb0:	80 91 26 03 	lds	r24, 0x0326
     fb4:	08 95       	ret

00000fb6 <vTaskSwitchContext>:
     fb6:	80 91 23 03 	lds	r24, 0x0323
     fba:	88 23       	and	r24, r24
     fbc:	51 f0       	breq	.+20     	; 0xfd2 <vTaskSwitchContext+0x1c>
     fbe:	81 e0       	ldi	r24, 0x01	; 1
     fc0:	80 93 1f 03 	sts	0x031F, r24
     fc4:	08 95       	ret
     fc6:	80 91 24 03 	lds	r24, 0x0324
     fca:	81 50       	subi	r24, 0x01	; 1
     fcc:	80 93 24 03 	sts	0x0324, r24
     fd0:	01 c0       	rjmp	.+2      	; 0xfd4 <vTaskSwitchContext+0x1e>
     fd2:	99 e0       	ldi	r25, 0x09	; 9
     fd4:	e0 91 24 03 	lds	r30, 0x0324
     fd8:	e9 9f       	mul	r30, r25
     fda:	f0 01       	movw	r30, r0
     fdc:	11 24       	eor	r1, r1
     fde:	e6 5d       	subi	r30, 0xD6	; 214
     fe0:	fc 4f       	sbci	r31, 0xFC	; 252
     fe2:	80 81       	ld	r24, Z
     fe4:	88 23       	and	r24, r24
     fe6:	79 f3       	breq	.-34     	; 0xfc6 <vTaskSwitchContext+0x10>
     fe8:	90 91 24 03 	lds	r25, 0x0324
     fec:	89 e0       	ldi	r24, 0x09	; 9
     fee:	98 9f       	mul	r25, r24
     ff0:	d0 01       	movw	r26, r0
     ff2:	11 24       	eor	r1, r1
     ff4:	a6 5d       	subi	r26, 0xD6	; 214
     ff6:	bc 4f       	sbci	r27, 0xFC	; 252
     ff8:	11 96       	adiw	r26, 0x01	; 1
     ffa:	ed 91       	ld	r30, X+
     ffc:	fc 91       	ld	r31, X
     ffe:	12 97       	sbiw	r26, 0x02	; 2
    1000:	02 80       	ldd	r0, Z+2	; 0x02
    1002:	f3 81       	ldd	r31, Z+3	; 0x03
    1004:	e0 2d       	mov	r30, r0
    1006:	12 96       	adiw	r26, 0x02	; 2
    1008:	fc 93       	st	X, r31
    100a:	ee 93       	st	-X, r30
    100c:	11 97       	sbiw	r26, 0x01	; 1
    100e:	cd 01       	movw	r24, r26
    1010:	03 96       	adiw	r24, 0x03	; 3
    1012:	e8 17       	cp	r30, r24
    1014:	f9 07       	cpc	r31, r25
    1016:	31 f4       	brne	.+12     	; 0x1024 <vTaskSwitchContext+0x6e>
    1018:	82 81       	ldd	r24, Z+2	; 0x02
    101a:	93 81       	ldd	r25, Z+3	; 0x03
    101c:	12 96       	adiw	r26, 0x02	; 2
    101e:	9c 93       	st	X, r25
    1020:	8e 93       	st	-X, r24
    1022:	11 97       	sbiw	r26, 0x01	; 1
    1024:	11 96       	adiw	r26, 0x01	; 1
    1026:	ed 91       	ld	r30, X+
    1028:	fc 91       	ld	r31, X
    102a:	12 97       	sbiw	r26, 0x02	; 2
    102c:	86 81       	ldd	r24, Z+6	; 0x06
    102e:	97 81       	ldd	r25, Z+7	; 0x07
    1030:	90 93 1e 03 	sts	0x031E, r25
    1034:	80 93 1d 03 	sts	0x031D, r24
    1038:	08 95       	ret

0000103a <vTaskSetTimeOutState>:
    103a:	fc 01       	movw	r30, r24
    103c:	80 91 20 03 	lds	r24, 0x0320
    1040:	80 83       	st	Z, r24
    1042:	80 91 21 03 	lds	r24, 0x0321
    1046:	90 91 22 03 	lds	r25, 0x0322
    104a:	92 83       	std	Z+2, r25	; 0x02
    104c:	81 83       	std	Z+1, r24	; 0x01
    104e:	08 95       	ret

00001050 <xTaskCheckForTimeOut>:
    1050:	fc 01       	movw	r30, r24
    1052:	db 01       	movw	r26, r22
    1054:	0f b6       	in	r0, 0x3f	; 63
    1056:	f8 94       	cli
    1058:	0f 92       	push	r0
    105a:	90 91 20 03 	lds	r25, 0x0320
    105e:	80 81       	ld	r24, Z
    1060:	98 17       	cp	r25, r24
    1062:	49 f0       	breq	.+18     	; 0x1076 <xTaskCheckForTimeOut+0x26>
    1064:	20 91 21 03 	lds	r18, 0x0321
    1068:	30 91 22 03 	lds	r19, 0x0322
    106c:	81 81       	ldd	r24, Z+1	; 0x01
    106e:	92 81       	ldd	r25, Z+2	; 0x02
    1070:	28 17       	cp	r18, r24
    1072:	39 07       	cpc	r19, r25
    1074:	18 f5       	brcc	.+70     	; 0x10bc <xTaskCheckForTimeOut+0x6c>
    1076:	80 91 21 03 	lds	r24, 0x0321
    107a:	90 91 22 03 	lds	r25, 0x0322
    107e:	21 81       	ldd	r18, Z+1	; 0x01
    1080:	32 81       	ldd	r19, Z+2	; 0x02
    1082:	4d 91       	ld	r20, X+
    1084:	5c 91       	ld	r21, X
    1086:	11 97       	sbiw	r26, 0x01	; 1
    1088:	82 1b       	sub	r24, r18
    108a:	93 0b       	sbc	r25, r19
    108c:	84 17       	cp	r24, r20
    108e:	95 07       	cpc	r25, r21
    1090:	a8 f4       	brcc	.+42     	; 0x10bc <xTaskCheckForTimeOut+0x6c>
    1092:	80 91 21 03 	lds	r24, 0x0321
    1096:	90 91 22 03 	lds	r25, 0x0322
    109a:	28 1b       	sub	r18, r24
    109c:	39 0b       	sbc	r19, r25
    109e:	24 0f       	add	r18, r20
    10a0:	35 1f       	adc	r19, r21
    10a2:	2d 93       	st	X+, r18
    10a4:	3c 93       	st	X, r19
    10a6:	80 91 20 03 	lds	r24, 0x0320
    10aa:	80 83       	st	Z, r24
    10ac:	80 91 21 03 	lds	r24, 0x0321
    10b0:	90 91 22 03 	lds	r25, 0x0322
    10b4:	92 83       	std	Z+2, r25	; 0x02
    10b6:	81 83       	std	Z+1, r24	; 0x01
    10b8:	80 e0       	ldi	r24, 0x00	; 0
    10ba:	01 c0       	rjmp	.+2      	; 0x10be <xTaskCheckForTimeOut+0x6e>
    10bc:	81 e0       	ldi	r24, 0x01	; 1
    10be:	0f 90       	pop	r0
    10c0:	0f be       	out	0x3f, r0	; 63
    10c2:	08 95       	ret

000010c4 <vTaskMissedYield>:
    10c4:	81 e0       	ldi	r24, 0x01	; 1
    10c6:	80 93 1f 03 	sts	0x031F, r24
    10ca:	08 95       	ret

000010cc <xTaskRemoveFromEventList>:
    10cc:	0f 93       	push	r16
    10ce:	1f 93       	push	r17
    10d0:	cf 93       	push	r28
    10d2:	df 93       	push	r29
    10d4:	fc 01       	movw	r30, r24
    10d6:	80 81       	ld	r24, Z
    10d8:	88 23       	and	r24, r24
    10da:	19 f4       	brne	.+6      	; 0x10e2 <xTaskRemoveFromEventList+0x16>
    10dc:	c0 e0       	ldi	r28, 0x00	; 0
    10de:	d0 e0       	ldi	r29, 0x00	; 0
    10e0:	05 c0       	rjmp	.+10     	; 0x10ec <xTaskRemoveFromEventList+0x20>
    10e2:	05 80       	ldd	r0, Z+5	; 0x05
    10e4:	f6 81       	ldd	r31, Z+6	; 0x06
    10e6:	e0 2d       	mov	r30, r0
    10e8:	c6 81       	ldd	r28, Z+6	; 0x06
    10ea:	d7 81       	ldd	r29, Z+7	; 0x07
    10ec:	8e 01       	movw	r16, r28
    10ee:	04 5f       	subi	r16, 0xF4	; 244
    10f0:	1f 4f       	sbci	r17, 0xFF	; 255
    10f2:	c8 01       	movw	r24, r16
    10f4:	0e 94 ac 03 	call	0x758	; 0x758 <vListRemove>
    10f8:	80 91 23 03 	lds	r24, 0x0323
    10fc:	88 23       	and	r24, r24
    10fe:	a1 f4       	brne	.+40     	; 0x1128 <xTaskRemoveFromEventList+0x5c>
    1100:	8e 01       	movw	r16, r28
    1102:	0e 5f       	subi	r16, 0xFE	; 254
    1104:	1f 4f       	sbci	r17, 0xFF	; 255
    1106:	c8 01       	movw	r24, r16
    1108:	0e 94 ac 03 	call	0x758	; 0x758 <vListRemove>
    110c:	9e 89       	ldd	r25, Y+22	; 0x16
    110e:	80 91 24 03 	lds	r24, 0x0324
    1112:	89 17       	cp	r24, r25
    1114:	10 f4       	brcc	.+4      	; 0x111a <xTaskRemoveFromEventList+0x4e>
    1116:	90 93 24 03 	sts	0x0324, r25
    111a:	89 e0       	ldi	r24, 0x09	; 9
    111c:	98 9f       	mul	r25, r24
    111e:	c0 01       	movw	r24, r0
    1120:	11 24       	eor	r1, r1
    1122:	86 5d       	subi	r24, 0xD6	; 214
    1124:	9c 4f       	sbci	r25, 0xFC	; 252
    1126:	02 c0       	rjmp	.+4      	; 0x112c <xTaskRemoveFromEventList+0x60>
    1128:	89 e4       	ldi	r24, 0x49	; 73
    112a:	93 e0       	ldi	r25, 0x03	; 3
    112c:	b8 01       	movw	r22, r16
    112e:	0e 94 4e 03 	call	0x69c	; 0x69c <vListInsertEnd>
    1132:	e0 91 1d 03 	lds	r30, 0x031D
    1136:	f0 91 1e 03 	lds	r31, 0x031E
    113a:	20 e0       	ldi	r18, 0x00	; 0
    113c:	9e 89       	ldd	r25, Y+22	; 0x16
    113e:	86 89       	ldd	r24, Z+22	; 0x16
    1140:	98 17       	cp	r25, r24
    1142:	08 f0       	brcs	.+2      	; 0x1146 <xTaskRemoveFromEventList+0x7a>
    1144:	21 e0       	ldi	r18, 0x01	; 1
    1146:	82 2f       	mov	r24, r18
    1148:	df 91       	pop	r29
    114a:	cf 91       	pop	r28
    114c:	1f 91       	pop	r17
    114e:	0f 91       	pop	r16
    1150:	08 95       	ret

00001152 <vTaskIncrementTick>:
    1152:	ff 92       	push	r15
    1154:	0f 93       	push	r16
    1156:	1f 93       	push	r17
    1158:	cf 93       	push	r28
    115a:	df 93       	push	r29
    115c:	80 91 23 03 	lds	r24, 0x0323
    1160:	88 23       	and	r24, r24
    1162:	09 f0       	breq	.+2      	; 0x1166 <vTaskIncrementTick+0x14>
    1164:	61 c0       	rjmp	.+194    	; 0x1228 <vTaskIncrementTick+0xd6>
    1166:	80 91 21 03 	lds	r24, 0x0321
    116a:	90 91 22 03 	lds	r25, 0x0322
    116e:	01 96       	adiw	r24, 0x01	; 1
    1170:	90 93 22 03 	sts	0x0322, r25
    1174:	80 93 21 03 	sts	0x0321, r24
    1178:	80 91 21 03 	lds	r24, 0x0321
    117c:	90 91 22 03 	lds	r25, 0x0322
    1180:	89 2b       	or	r24, r25
    1182:	e9 f5       	brne	.+122    	; 0x11fe <vTaskIncrementTick+0xac>
    1184:	80 91 45 03 	lds	r24, 0x0345
    1188:	90 91 46 03 	lds	r25, 0x0346
    118c:	20 91 47 03 	lds	r18, 0x0347
    1190:	30 91 48 03 	lds	r19, 0x0348
    1194:	30 93 46 03 	sts	0x0346, r19
    1198:	20 93 45 03 	sts	0x0345, r18
    119c:	90 93 48 03 	sts	0x0348, r25
    11a0:	80 93 47 03 	sts	0x0347, r24
    11a4:	80 91 20 03 	lds	r24, 0x0320
    11a8:	8f 5f       	subi	r24, 0xFF	; 255
    11aa:	80 93 20 03 	sts	0x0320, r24
    11ae:	27 c0       	rjmp	.+78     	; 0x11fe <vTaskIncrementTick+0xac>
    11b0:	20 91 21 03 	lds	r18, 0x0321
    11b4:	30 91 22 03 	lds	r19, 0x0322
    11b8:	8a 81       	ldd	r24, Y+2	; 0x02
    11ba:	9b 81       	ldd	r25, Y+3	; 0x03
    11bc:	28 17       	cp	r18, r24
    11be:	39 07       	cpc	r19, r25
    11c0:	c0 f1       	brcs	.+112    	; 0x1232 <vTaskIncrementTick+0xe0>
    11c2:	8e 01       	movw	r16, r28
    11c4:	0e 5f       	subi	r16, 0xFE	; 254
    11c6:	1f 4f       	sbci	r17, 0xFF	; 255
    11c8:	c8 01       	movw	r24, r16
    11ca:	0e 94 ac 03 	call	0x758	; 0x758 <vListRemove>
    11ce:	8c 89       	ldd	r24, Y+20	; 0x14
    11d0:	9d 89       	ldd	r25, Y+21	; 0x15
    11d2:	89 2b       	or	r24, r25
    11d4:	21 f0       	breq	.+8      	; 0x11de <vTaskIncrementTick+0x8c>
    11d6:	ce 01       	movw	r24, r28
    11d8:	0c 96       	adiw	r24, 0x0c	; 12
    11da:	0e 94 ac 03 	call	0x758	; 0x758 <vListRemove>
    11de:	9e 89       	ldd	r25, Y+22	; 0x16
    11e0:	80 91 24 03 	lds	r24, 0x0324
    11e4:	89 17       	cp	r24, r25
    11e6:	10 f4       	brcc	.+4      	; 0x11ec <vTaskIncrementTick+0x9a>
    11e8:	90 93 24 03 	sts	0x0324, r25
    11ec:	9f 9d       	mul	r25, r15
    11ee:	c0 01       	movw	r24, r0
    11f0:	11 24       	eor	r1, r1
    11f2:	86 5d       	subi	r24, 0xD6	; 214
    11f4:	9c 4f       	sbci	r25, 0xFC	; 252
    11f6:	b8 01       	movw	r22, r16
    11f8:	0e 94 4e 03 	call	0x69c	; 0x69c <vListInsertEnd>
    11fc:	02 c0       	rjmp	.+4      	; 0x1202 <vTaskIncrementTick+0xb0>
    11fe:	89 e0       	ldi	r24, 0x09	; 9
    1200:	f8 2e       	mov	r15, r24
    1202:	e0 91 45 03 	lds	r30, 0x0345
    1206:	f0 91 46 03 	lds	r31, 0x0346
    120a:	80 81       	ld	r24, Z
    120c:	88 23       	and	r24, r24
    120e:	89 f0       	breq	.+34     	; 0x1232 <vTaskIncrementTick+0xe0>
    1210:	e0 91 45 03 	lds	r30, 0x0345
    1214:	f0 91 46 03 	lds	r31, 0x0346
    1218:	05 80       	ldd	r0, Z+5	; 0x05
    121a:	f6 81       	ldd	r31, Z+6	; 0x06
    121c:	e0 2d       	mov	r30, r0
    121e:	c6 81       	ldd	r28, Z+6	; 0x06
    1220:	d7 81       	ldd	r29, Z+7	; 0x07
    1222:	20 97       	sbiw	r28, 0x00	; 0
    1224:	29 f6       	brne	.-118    	; 0x11b0 <vTaskIncrementTick+0x5e>
    1226:	05 c0       	rjmp	.+10     	; 0x1232 <vTaskIncrementTick+0xe0>
    1228:	80 91 25 03 	lds	r24, 0x0325
    122c:	8f 5f       	subi	r24, 0xFF	; 255
    122e:	80 93 25 03 	sts	0x0325, r24
    1232:	df 91       	pop	r29
    1234:	cf 91       	pop	r28
    1236:	1f 91       	pop	r17
    1238:	0f 91       	pop	r16
    123a:	ff 90       	pop	r15
    123c:	08 95       	ret

0000123e <vTaskPlaceOnEventList>:
    123e:	0f 93       	push	r16
    1240:	1f 93       	push	r17
    1242:	8b 01       	movw	r16, r22
    1244:	60 91 1d 03 	lds	r22, 0x031D
    1248:	70 91 1e 03 	lds	r23, 0x031E
    124c:	64 5f       	subi	r22, 0xF4	; 244
    124e:	7f 4f       	sbci	r23, 0xFF	; 255
    1250:	0e 94 77 03 	call	0x6ee	; 0x6ee <vListInsert>
    1254:	80 91 1d 03 	lds	r24, 0x031D
    1258:	90 91 1e 03 	lds	r25, 0x031E
    125c:	02 96       	adiw	r24, 0x02	; 2
    125e:	0e 94 ac 03 	call	0x758	; 0x758 <vListRemove>
    1262:	80 91 21 03 	lds	r24, 0x0321
    1266:	90 91 22 03 	lds	r25, 0x0322
    126a:	80 0f       	add	r24, r16
    126c:	91 1f       	adc	r25, r17
    126e:	e0 91 1d 03 	lds	r30, 0x031D
    1272:	f0 91 1e 03 	lds	r31, 0x031E
    1276:	93 83       	std	Z+3, r25	; 0x03
    1278:	82 83       	std	Z+2, r24	; 0x02
    127a:	20 91 21 03 	lds	r18, 0x0321
    127e:	30 91 22 03 	lds	r19, 0x0322
    1282:	82 17       	cp	r24, r18
    1284:	93 07       	cpc	r25, r19
    1286:	28 f4       	brcc	.+10     	; 0x1292 <vTaskPlaceOnEventList+0x54>
    1288:	80 91 47 03 	lds	r24, 0x0347
    128c:	90 91 48 03 	lds	r25, 0x0348
    1290:	04 c0       	rjmp	.+8      	; 0x129a <vTaskPlaceOnEventList+0x5c>
    1292:	80 91 45 03 	lds	r24, 0x0345
    1296:	90 91 46 03 	lds	r25, 0x0346
    129a:	60 91 1d 03 	lds	r22, 0x031D
    129e:	70 91 1e 03 	lds	r23, 0x031E
    12a2:	6e 5f       	subi	r22, 0xFE	; 254
    12a4:	7f 4f       	sbci	r23, 0xFF	; 255
    12a6:	0e 94 77 03 	call	0x6ee	; 0x6ee <vListInsert>
    12aa:	1f 91       	pop	r17
    12ac:	0f 91       	pop	r16
    12ae:	08 95       	ret

000012b0 <xTaskResumeAll>:
    12b0:	cf 92       	push	r12
    12b2:	df 92       	push	r13
    12b4:	ff 92       	push	r15
    12b6:	0f 93       	push	r16
    12b8:	1f 93       	push	r17
    12ba:	df 93       	push	r29
    12bc:	cf 93       	push	r28
    12be:	0f 92       	push	r0
    12c0:	cd b7       	in	r28, 0x3d	; 61
    12c2:	de b7       	in	r29, 0x3e	; 62
    12c4:	0f b6       	in	r0, 0x3f	; 63
    12c6:	f8 94       	cli
    12c8:	0f 92       	push	r0
    12ca:	80 91 23 03 	lds	r24, 0x0323
    12ce:	81 50       	subi	r24, 0x01	; 1
    12d0:	80 93 23 03 	sts	0x0323, r24
    12d4:	80 91 23 03 	lds	r24, 0x0323
    12d8:	88 23       	and	r24, r24
    12da:	09 f0       	breq	.+2      	; 0x12de <xTaskResumeAll+0x2e>
    12dc:	5b c0       	rjmp	.+182    	; 0x1394 <xTaskResumeAll+0xe4>
    12de:	80 91 26 03 	lds	r24, 0x0326
    12e2:	88 23       	and	r24, r24
    12e4:	09 f4       	brne	.+2      	; 0x12e8 <xTaskResumeAll+0x38>
    12e6:	56 c0       	rjmp	.+172    	; 0x1394 <xTaskResumeAll+0xe4>
    12e8:	19 82       	std	Y+1, r1	; 0x01
    12ea:	99 e0       	ldi	r25, 0x09	; 9
    12ec:	f9 2e       	mov	r15, r25
    12ee:	27 c0       	rjmp	.+78     	; 0x133e <xTaskResumeAll+0x8e>
    12f0:	c6 01       	movw	r24, r12
    12f2:	0c 96       	adiw	r24, 0x0c	; 12
    12f4:	0e 94 ac 03 	call	0x758	; 0x758 <vListRemove>
    12f8:	86 01       	movw	r16, r12
    12fa:	0e 5f       	subi	r16, 0xFE	; 254
    12fc:	1f 4f       	sbci	r17, 0xFF	; 255
    12fe:	c8 01       	movw	r24, r16
    1300:	0e 94 ac 03 	call	0x758	; 0x758 <vListRemove>
    1304:	d6 01       	movw	r26, r12
    1306:	56 96       	adiw	r26, 0x16	; 22
    1308:	9c 91       	ld	r25, X
    130a:	80 91 24 03 	lds	r24, 0x0324
    130e:	89 17       	cp	r24, r25
    1310:	10 f4       	brcc	.+4      	; 0x1316 <xTaskResumeAll+0x66>
    1312:	90 93 24 03 	sts	0x0324, r25
    1316:	9f 9d       	mul	r25, r15
    1318:	c0 01       	movw	r24, r0
    131a:	11 24       	eor	r1, r1
    131c:	86 5d       	subi	r24, 0xD6	; 214
    131e:	9c 4f       	sbci	r25, 0xFC	; 252
    1320:	b8 01       	movw	r22, r16
    1322:	0e 94 4e 03 	call	0x69c	; 0x69c <vListInsertEnd>
    1326:	e0 91 1d 03 	lds	r30, 0x031D
    132a:	f0 91 1e 03 	lds	r31, 0x031E
    132e:	d6 01       	movw	r26, r12
    1330:	56 96       	adiw	r26, 0x16	; 22
    1332:	9c 91       	ld	r25, X
    1334:	86 89       	ldd	r24, Z+22	; 0x16
    1336:	98 17       	cp	r25, r24
    1338:	10 f0       	brcs	.+4      	; 0x133e <xTaskResumeAll+0x8e>
    133a:	b1 e0       	ldi	r27, 0x01	; 1
    133c:	b9 83       	std	Y+1, r27	; 0x01
    133e:	80 91 49 03 	lds	r24, 0x0349
    1342:	88 23       	and	r24, r24
    1344:	49 f0       	breq	.+18     	; 0x1358 <xTaskResumeAll+0xa8>
    1346:	e0 91 4e 03 	lds	r30, 0x034E
    134a:	f0 91 4f 03 	lds	r31, 0x034F
    134e:	c6 80       	ldd	r12, Z+6	; 0x06
    1350:	d7 80       	ldd	r13, Z+7	; 0x07
    1352:	c1 14       	cp	r12, r1
    1354:	d1 04       	cpc	r13, r1
    1356:	61 f6       	brne	.-104    	; 0x12f0 <xTaskResumeAll+0x40>
    1358:	80 91 25 03 	lds	r24, 0x0325
    135c:	88 23       	and	r24, r24
    135e:	41 f4       	brne	.+16     	; 0x1370 <xTaskResumeAll+0xc0>
    1360:	0c c0       	rjmp	.+24     	; 0x137a <xTaskResumeAll+0xca>
    1362:	0e 94 a9 08 	call	0x1152	; 0x1152 <vTaskIncrementTick>
    1366:	80 91 25 03 	lds	r24, 0x0325
    136a:	81 50       	subi	r24, 0x01	; 1
    136c:	80 93 25 03 	sts	0x0325, r24
    1370:	80 91 25 03 	lds	r24, 0x0325
    1374:	88 23       	and	r24, r24
    1376:	a9 f7       	brne	.-22     	; 0x1362 <xTaskResumeAll+0xb2>
    1378:	07 c0       	rjmp	.+14     	; 0x1388 <xTaskResumeAll+0xd8>
    137a:	e9 81       	ldd	r30, Y+1	; 0x01
    137c:	e1 30       	cpi	r30, 0x01	; 1
    137e:	21 f0       	breq	.+8      	; 0x1388 <xTaskResumeAll+0xd8>
    1380:	80 91 1f 03 	lds	r24, 0x031F
    1384:	81 30       	cpi	r24, 0x01	; 1
    1386:	31 f4       	brne	.+12     	; 0x1394 <xTaskResumeAll+0xe4>
    1388:	10 92 1f 03 	sts	0x031F, r1
    138c:	0e 94 25 01 	call	0x24a	; 0x24a <vPortYield>
    1390:	81 e0       	ldi	r24, 0x01	; 1
    1392:	01 c0       	rjmp	.+2      	; 0x1396 <xTaskResumeAll+0xe6>
    1394:	80 e0       	ldi	r24, 0x00	; 0
    1396:	0f 90       	pop	r0
    1398:	0f be       	out	0x3f, r0	; 63
    139a:	0f 90       	pop	r0
    139c:	cf 91       	pop	r28
    139e:	df 91       	pop	r29
    13a0:	1f 91       	pop	r17
    13a2:	0f 91       	pop	r16
    13a4:	ff 90       	pop	r15
    13a6:	df 90       	pop	r13
    13a8:	cf 90       	pop	r12
    13aa:	08 95       	ret

000013ac <vTaskEndScheduler>:
    13ac:	f8 94       	cli
    13ae:	10 92 27 03 	sts	0x0327, r1
    13b2:	0e 94 c6 00 	call	0x18c	; 0x18c <vPortEndScheduler>
    13b6:	08 95       	ret

000013b8 <prvIdleTask>:
    13b8:	0e 94 0a 0d 	call	0x1a14	; 0x1a14 <vApplicationIdleHook>
    13bc:	fd cf       	rjmp	.-6      	; 0x13b8 <prvIdleTask>

000013be <xTaskGenericCreate>:
    13be:	2f 92       	push	r2
    13c0:	3f 92       	push	r3
    13c2:	4f 92       	push	r4
    13c4:	5f 92       	push	r5
    13c6:	6f 92       	push	r6
    13c8:	7f 92       	push	r7
    13ca:	8f 92       	push	r8
    13cc:	9f 92       	push	r9
    13ce:	af 92       	push	r10
    13d0:	bf 92       	push	r11
    13d2:	cf 92       	push	r12
    13d4:	df 92       	push	r13
    13d6:	ef 92       	push	r14
    13d8:	ff 92       	push	r15
    13da:	0f 93       	push	r16
    13dc:	1f 93       	push	r17
    13de:	df 93       	push	r29
    13e0:	cf 93       	push	r28
    13e2:	00 d0       	rcall	.+0      	; 0x13e4 <xTaskGenericCreate+0x26>
    13e4:	0f 92       	push	r0
    13e6:	cd b7       	in	r28, 0x3d	; 61
    13e8:	de b7       	in	r29, 0x3e	; 62
    13ea:	2c 01       	movw	r4, r24
    13ec:	4b 01       	movw	r8, r22
    13ee:	5a 01       	movw	r10, r20
    13f0:	39 01       	movw	r6, r18
    13f2:	09 83       	std	Y+1, r16	; 0x01
    13f4:	17 01       	movw	r2, r14
    13f6:	8b e1       	ldi	r24, 0x1B	; 27
    13f8:	90 e0       	ldi	r25, 0x00	; 0
    13fa:	0e 94 e4 03 	call	0x7c8	; 0x7c8 <pvPortMalloc>
    13fe:	8a 83       	std	Y+2, r24	; 0x02
    1400:	9b 83       	std	Y+3, r25	; 0x03
    1402:	8a 81       	ldd	r24, Y+2	; 0x02
    1404:	9b 81       	ldd	r25, Y+3	; 0x03
    1406:	89 2b       	or	r24, r25
    1408:	89 f0       	breq	.+34     	; 0x142c <xTaskGenericCreate+0x6e>
    140a:	c1 14       	cp	r12, r1
    140c:	d1 04       	cpc	r13, r1
    140e:	21 f4       	brne	.+8      	; 0x1418 <xTaskGenericCreate+0x5a>
    1410:	c5 01       	movw	r24, r10
    1412:	0e 94 e4 03 	call	0x7c8	; 0x7c8 <pvPortMalloc>
    1416:	6c 01       	movw	r12, r24
    1418:	ea 81       	ldd	r30, Y+2	; 0x02
    141a:	fb 81       	ldd	r31, Y+3	; 0x03
    141c:	d0 8e       	std	Z+24, r13	; 0x18
    141e:	c7 8a       	std	Z+23, r12	; 0x17
    1420:	c1 14       	cp	r12, r1
    1422:	d1 04       	cpc	r13, r1
    1424:	29 f4       	brne	.+10     	; 0x1430 <xTaskGenericCreate+0x72>
    1426:	cf 01       	movw	r24, r30
    1428:	0e 94 d4 03 	call	0x7a8	; 0x7a8 <vPortFree>
    142c:	8f ef       	ldi	r24, 0xFF	; 255
    142e:	b6 c0       	rjmp	.+364    	; 0x159c <xTaskGenericCreate+0x1de>
    1430:	c6 01       	movw	r24, r12
    1432:	65 ea       	ldi	r22, 0xA5	; 165
    1434:	70 e0       	ldi	r23, 0x00	; 0
    1436:	a5 01       	movw	r20, r10
    1438:	0e 94 2e 0e 	call	0x1c5c	; 0x1c5c <memset>
    143c:	08 94       	sec
    143e:	a1 08       	sbc	r10, r1
    1440:	b1 08       	sbc	r11, r1
    1442:	ea 81       	ldd	r30, Y+2	; 0x02
    1444:	fb 81       	ldd	r31, Y+3	; 0x03
    1446:	87 89       	ldd	r24, Z+23	; 0x17
    1448:	90 8d       	ldd	r25, Z+24	; 0x18
    144a:	a8 0e       	add	r10, r24
    144c:	b9 1e       	adc	r11, r25
    144e:	cf 01       	movw	r24, r30
    1450:	49 96       	adiw	r24, 0x19	; 25
    1452:	b4 01       	movw	r22, r8
    1454:	42 e0       	ldi	r20, 0x02	; 2
    1456:	50 e0       	ldi	r21, 0x00	; 0
    1458:	0e 94 35 0e 	call	0x1c6a	; 0x1c6a <strncpy>
    145c:	ea 81       	ldd	r30, Y+2	; 0x02
    145e:	fb 81       	ldd	r31, Y+3	; 0x03
    1460:	12 8e       	std	Z+26, r1	; 0x1a
    1462:	16 8a       	std	Z+22, r1	; 0x16
    1464:	32 e0       	ldi	r19, 0x02	; 2
    1466:	c3 2e       	mov	r12, r19
    1468:	d1 2c       	mov	r13, r1
    146a:	ce 0e       	add	r12, r30
    146c:	df 1e       	adc	r13, r31
    146e:	c6 01       	movw	r24, r12
    1470:	0e 94 4a 03 	call	0x694	; 0x694 <vListInitialiseItem>
    1474:	8a 81       	ldd	r24, Y+2	; 0x02
    1476:	9b 81       	ldd	r25, Y+3	; 0x03
    1478:	0c 96       	adiw	r24, 0x0c	; 12
    147a:	0e 94 4a 03 	call	0x694	; 0x694 <vListInitialiseItem>
    147e:	8a 81       	ldd	r24, Y+2	; 0x02
    1480:	9b 81       	ldd	r25, Y+3	; 0x03
    1482:	fc 01       	movw	r30, r24
    1484:	91 87       	std	Z+9, r25	; 0x09
    1486:	80 87       	std	Z+8, r24	; 0x08
    1488:	81 e0       	ldi	r24, 0x01	; 1
    148a:	90 e0       	ldi	r25, 0x00	; 0
    148c:	95 87       	std	Z+13, r25	; 0x0d
    148e:	84 87       	std	Z+12, r24	; 0x0c
    1490:	f3 8b       	std	Z+19, r31	; 0x13
    1492:	e2 8b       	std	Z+18, r30	; 0x12
    1494:	c5 01       	movw	r24, r10
    1496:	b2 01       	movw	r22, r4
    1498:	a3 01       	movw	r20, r6
    149a:	0e 94 49 00 	call	0x92	; 0x92 <pxPortInitialiseStack>
    149e:	ea 81       	ldd	r30, Y+2	; 0x02
    14a0:	fb 81       	ldd	r31, Y+3	; 0x03
    14a2:	91 83       	std	Z+1, r25	; 0x01
    14a4:	80 83       	st	Z, r24
    14a6:	0f b6       	in	r0, 0x3f	; 63
    14a8:	f8 94       	cli
    14aa:	0f 92       	push	r0
    14ac:	80 91 26 03 	lds	r24, 0x0326
    14b0:	8f 5f       	subi	r24, 0xFF	; 255
    14b2:	80 93 26 03 	sts	0x0326, r24
    14b6:	80 91 26 03 	lds	r24, 0x0326
    14ba:	81 30       	cpi	r24, 0x01	; 1
    14bc:	09 f5       	brne	.+66     	; 0x1500 <xTaskGenericCreate+0x142>
    14be:	f0 93 1e 03 	sts	0x031E, r31
    14c2:	e0 93 1d 03 	sts	0x031D, r30
    14c6:	8a e2       	ldi	r24, 0x2A	; 42
    14c8:	93 e0       	ldi	r25, 0x03	; 3
    14ca:	0e 94 3a 03 	call	0x674	; 0x674 <vListInitialise>
    14ce:	23 e3       	ldi	r18, 0x33	; 51
    14d0:	e2 2e       	mov	r14, r18
    14d2:	23 e0       	ldi	r18, 0x03	; 3
    14d4:	f2 2e       	mov	r15, r18
    14d6:	c7 01       	movw	r24, r14
    14d8:	0e 94 3a 03 	call	0x674	; 0x674 <vListInitialise>
    14dc:	0c e3       	ldi	r16, 0x3C	; 60
    14de:	13 e0       	ldi	r17, 0x03	; 3
    14e0:	c8 01       	movw	r24, r16
    14e2:	0e 94 3a 03 	call	0x674	; 0x674 <vListInitialise>
    14e6:	89 e4       	ldi	r24, 0x49	; 73
    14e8:	93 e0       	ldi	r25, 0x03	; 3
    14ea:	0e 94 3a 03 	call	0x674	; 0x674 <vListInitialise>
    14ee:	f0 92 46 03 	sts	0x0346, r15
    14f2:	e0 92 45 03 	sts	0x0345, r14
    14f6:	10 93 48 03 	sts	0x0348, r17
    14fa:	00 93 47 03 	sts	0x0347, r16
    14fe:	12 c0       	rjmp	.+36     	; 0x1524 <xTaskGenericCreate+0x166>
    1500:	80 91 27 03 	lds	r24, 0x0327
    1504:	88 23       	and	r24, r24
    1506:	71 f4       	brne	.+28     	; 0x1524 <xTaskGenericCreate+0x166>
    1508:	e0 91 1d 03 	lds	r30, 0x031D
    150c:	f0 91 1e 03 	lds	r31, 0x031E
    1510:	86 89       	ldd	r24, Z+22	; 0x16
    1512:	f9 81       	ldd	r31, Y+1	; 0x01
    1514:	f8 17       	cp	r31, r24
    1516:	30 f0       	brcs	.+12     	; 0x1524 <xTaskGenericCreate+0x166>
    1518:	8a 81       	ldd	r24, Y+2	; 0x02
    151a:	9b 81       	ldd	r25, Y+3	; 0x03
    151c:	90 93 1e 03 	sts	0x031E, r25
    1520:	80 93 1d 03 	sts	0x031D, r24
    1524:	ea 81       	ldd	r30, Y+2	; 0x02
    1526:	fb 81       	ldd	r31, Y+3	; 0x03
    1528:	96 89       	ldd	r25, Z+22	; 0x16
    152a:	80 91 28 03 	lds	r24, 0x0328
    152e:	89 17       	cp	r24, r25
    1530:	10 f4       	brcc	.+4      	; 0x1536 <xTaskGenericCreate+0x178>
    1532:	90 93 28 03 	sts	0x0328, r25
    1536:	80 91 29 03 	lds	r24, 0x0329
    153a:	8f 5f       	subi	r24, 0xFF	; 255
    153c:	80 93 29 03 	sts	0x0329, r24
    1540:	ea 81       	ldd	r30, Y+2	; 0x02
    1542:	fb 81       	ldd	r31, Y+3	; 0x03
    1544:	96 89       	ldd	r25, Z+22	; 0x16
    1546:	80 91 24 03 	lds	r24, 0x0324
    154a:	89 17       	cp	r24, r25
    154c:	10 f4       	brcc	.+4      	; 0x1552 <xTaskGenericCreate+0x194>
    154e:	90 93 24 03 	sts	0x0324, r25
    1552:	ea 81       	ldd	r30, Y+2	; 0x02
    1554:	fb 81       	ldd	r31, Y+3	; 0x03
    1556:	86 89       	ldd	r24, Z+22	; 0x16
    1558:	29 e0       	ldi	r18, 0x09	; 9
    155a:	82 9f       	mul	r24, r18
    155c:	c0 01       	movw	r24, r0
    155e:	11 24       	eor	r1, r1
    1560:	86 5d       	subi	r24, 0xD6	; 214
    1562:	9c 4f       	sbci	r25, 0xFC	; 252
    1564:	b6 01       	movw	r22, r12
    1566:	0e 94 4e 03 	call	0x69c	; 0x69c <vListInsertEnd>
    156a:	0f 90       	pop	r0
    156c:	0f be       	out	0x3f, r0	; 63
    156e:	21 14       	cp	r2, r1
    1570:	31 04       	cpc	r3, r1
    1572:	29 f0       	breq	.+10     	; 0x157e <xTaskGenericCreate+0x1c0>
    1574:	8a 81       	ldd	r24, Y+2	; 0x02
    1576:	9b 81       	ldd	r25, Y+3	; 0x03
    1578:	f1 01       	movw	r30, r2
    157a:	91 83       	std	Z+1, r25	; 0x01
    157c:	80 83       	st	Z, r24
    157e:	80 91 27 03 	lds	r24, 0x0327
    1582:	88 23       	and	r24, r24
    1584:	51 f0       	breq	.+20     	; 0x159a <xTaskGenericCreate+0x1dc>
    1586:	e0 91 1d 03 	lds	r30, 0x031D
    158a:	f0 91 1e 03 	lds	r31, 0x031E
    158e:	86 89       	ldd	r24, Z+22	; 0x16
    1590:	99 81       	ldd	r25, Y+1	; 0x01
    1592:	89 17       	cp	r24, r25
    1594:	10 f4       	brcc	.+4      	; 0x159a <xTaskGenericCreate+0x1dc>
    1596:	0e 94 25 01 	call	0x24a	; 0x24a <vPortYield>
    159a:	81 e0       	ldi	r24, 0x01	; 1
    159c:	0f 90       	pop	r0
    159e:	0f 90       	pop	r0
    15a0:	0f 90       	pop	r0
    15a2:	cf 91       	pop	r28
    15a4:	df 91       	pop	r29
    15a6:	1f 91       	pop	r17
    15a8:	0f 91       	pop	r16
    15aa:	ff 90       	pop	r15
    15ac:	ef 90       	pop	r14
    15ae:	df 90       	pop	r13
    15b0:	cf 90       	pop	r12
    15b2:	bf 90       	pop	r11
    15b4:	af 90       	pop	r10
    15b6:	9f 90       	pop	r9
    15b8:	8f 90       	pop	r8
    15ba:	7f 90       	pop	r7
    15bc:	6f 90       	pop	r6
    15be:	5f 90       	pop	r5
    15c0:	4f 90       	pop	r4
    15c2:	3f 90       	pop	r3
    15c4:	2f 90       	pop	r2
    15c6:	08 95       	ret

000015c8 <vTaskStartScheduler>:
    15c8:	af 92       	push	r10
    15ca:	bf 92       	push	r11
    15cc:	cf 92       	push	r12
    15ce:	df 92       	push	r13
    15d0:	ef 92       	push	r14
    15d2:	ff 92       	push	r15
    15d4:	0f 93       	push	r16
    15d6:	8c ed       	ldi	r24, 0xDC	; 220
    15d8:	99 e0       	ldi	r25, 0x09	; 9
    15da:	60 e6       	ldi	r22, 0x60	; 96
    15dc:	70 e0       	ldi	r23, 0x00	; 0
    15de:	4e e5       	ldi	r20, 0x5E	; 94
    15e0:	51 e0       	ldi	r21, 0x01	; 1
    15e2:	20 e0       	ldi	r18, 0x00	; 0
    15e4:	30 e0       	ldi	r19, 0x00	; 0
    15e6:	00 e0       	ldi	r16, 0x00	; 0
    15e8:	ee 24       	eor	r14, r14
    15ea:	ff 24       	eor	r15, r15
    15ec:	cc 24       	eor	r12, r12
    15ee:	dd 24       	eor	r13, r13
    15f0:	aa 24       	eor	r10, r10
    15f2:	bb 24       	eor	r11, r11
    15f4:	0e 94 df 09 	call	0x13be	; 0x13be <xTaskGenericCreate>
    15f8:	81 30       	cpi	r24, 0x01	; 1
    15fa:	49 f4       	brne	.+18     	; 0x160e <vTaskStartScheduler+0x46>
    15fc:	f8 94       	cli
    15fe:	80 93 27 03 	sts	0x0327, r24
    1602:	10 92 22 03 	sts	0x0322, r1
    1606:	10 92 21 03 	sts	0x0321, r1
    160a:	0e 94 91 00 	call	0x122	; 0x122 <xPortStartScheduler>
    160e:	0f 91       	pop	r16
    1610:	ff 90       	pop	r15
    1612:	ef 90       	pop	r14
    1614:	df 90       	pop	r13
    1616:	cf 90       	pop	r12
    1618:	bf 90       	pop	r11
    161a:	af 90       	pop	r10
    161c:	08 95       	ret

0000161e <encodeWord>:
    161e:	0f 93       	push	r16
    1620:	1f 93       	push	r17
    1622:	cf 93       	push	r28
    1624:	df 93       	push	r29
    1626:	8c 01       	movw	r16, r24
    1628:	db 01       	movw	r26, r22
    162a:	fc 01       	movw	r30, r24
    162c:	40 e0       	ldi	r20, 0x00	; 0
    162e:	80 81       	ld	r24, Z
    1630:	80 32       	cpi	r24, 0x20	; 32
    1632:	21 f4       	brne	.+8      	; 0x163c <encodeWord+0x1e>
    1634:	4f 5f       	subi	r20, 0xFF	; 255
    1636:	31 96       	adiw	r30, 0x01	; 1
    1638:	40 34       	cpi	r20, 0x40	; 64
    163a:	c9 f7       	brne	.-14     	; 0x162e <encodeWord+0x10>
    163c:	1c 92       	st	X, r1
    163e:	5a 2f       	mov	r21, r26
    1640:	cd 01       	movw	r24, r26
    1642:	ec 01       	movw	r28, r24
    1644:	0f c0       	rjmp	.+30     	; 0x1664 <encodeWord+0x46>
    1646:	f8 01       	movw	r30, r16
    1648:	e4 0f       	add	r30, r20
    164a:	f1 1d       	adc	r31, r1
    164c:	e0 81       	ld	r30, Z
    164e:	e0 32       	cpi	r30, 0x20	; 32
    1650:	29 f0       	breq	.+10     	; 0x165c <encodeWord+0x3e>
    1652:	ee 23       	and	r30, r30
    1654:	19 f0       	breq	.+6      	; 0x165c <encodeWord+0x3e>
    1656:	e9 93       	st	Y+, r30
    1658:	4f 5f       	subi	r20, 0xFF	; 255
    165a:	04 c0       	rjmp	.+8      	; 0x1664 <encodeWord+0x46>
    165c:	a8 0f       	add	r26, r24
    165e:	b1 1d       	adc	r27, r1
    1660:	1c 92       	st	X, r1
    1662:	05 c0       	rjmp	.+10     	; 0x166e <encodeWord+0x50>
    1664:	9e 01       	movw	r18, r28
    1666:	25 1b       	sub	r18, r21
    1668:	82 2f       	mov	r24, r18
    166a:	40 34       	cpi	r20, 0x40	; 64
    166c:	60 f3       	brcs	.-40     	; 0x1646 <encodeWord+0x28>
    166e:	84 2f       	mov	r24, r20
    1670:	df 91       	pop	r29
    1672:	cf 91       	pop	r28
    1674:	1f 91       	pop	r17
    1676:	0f 91       	pop	r16
    1678:	08 95       	ret

0000167a <strLen>:
    167a:	fc 01       	movw	r30, r24
    167c:	90 e0       	ldi	r25, 0x00	; 0
    167e:	06 c0       	rjmp	.+12     	; 0x168c <strLen+0x12>
    1680:	89 2f       	mov	r24, r25
    1682:	8f 5f       	subi	r24, 0xFF	; 255
    1684:	31 96       	adiw	r30, 0x01	; 1
    1686:	80 34       	cpi	r24, 0x40	; 64
    1688:	21 f0       	breq	.+8      	; 0x1692 <strLen+0x18>
    168a:	98 2f       	mov	r25, r24
    168c:	80 81       	ld	r24, Z
    168e:	88 23       	and	r24, r24
    1690:	b9 f7       	brne	.-18     	; 0x1680 <strLen+0x6>
    1692:	89 2f       	mov	r24, r25
    1694:	08 95       	ret

00001696 <strCmp>:
    1696:	dc 01       	movw	r26, r24
    1698:	20 e0       	ldi	r18, 0x00	; 0
    169a:	30 e0       	ldi	r19, 0x00	; 0
    169c:	07 c0       	rjmp	.+14     	; 0x16ac <strCmp+0x16>
    169e:	44 23       	and	r20, r20
    16a0:	89 f0       	breq	.+34     	; 0x16c4 <strCmp+0x2e>
    16a2:	2f 5f       	subi	r18, 0xFF	; 255
    16a4:	3f 4f       	sbci	r19, 0xFF	; 255
    16a6:	20 34       	cpi	r18, 0x40	; 64
    16a8:	31 05       	cpc	r19, r1
    16aa:	61 f0       	breq	.+24     	; 0x16c4 <strCmp+0x2e>
    16ac:	fd 01       	movw	r30, r26
    16ae:	e2 0f       	add	r30, r18
    16b0:	f3 1f       	adc	r31, r19
    16b2:	40 81       	ld	r20, Z
    16b4:	fb 01       	movw	r30, r22
    16b6:	e2 0f       	add	r30, r18
    16b8:	f3 1f       	adc	r31, r19
    16ba:	80 81       	ld	r24, Z
    16bc:	48 17       	cp	r20, r24
    16be:	79 f3       	breq	.-34     	; 0x169e <strCmp+0x8>
    16c0:	81 e0       	ldi	r24, 0x01	; 1
    16c2:	08 95       	ret
    16c4:	80 e0       	ldi	r24, 0x00	; 0
    16c6:	08 95       	ret

000016c8 <str2int>:
    16c8:	dc 01       	movw	r26, r24
    16ca:	50 e0       	ldi	r21, 0x00	; 0
    16cc:	8c 91       	ld	r24, X
    16ce:	8d 32       	cpi	r24, 0x2D	; 45
    16d0:	09 f4       	brne	.+2      	; 0x16d4 <str2int+0xc>
    16d2:	51 e0       	ldi	r21, 0x01	; 1
    16d4:	45 2f       	mov	r20, r21
    16d6:	fd 01       	movw	r30, r26
    16d8:	e5 0f       	add	r30, r21
    16da:	f1 1d       	adc	r31, r1
    16dc:	e0 81       	ld	r30, Z
    16de:	20 e0       	ldi	r18, 0x00	; 0
    16e0:	30 e0       	ldi	r19, 0x00	; 0
    16e2:	17 c0       	rjmp	.+46     	; 0x1712 <str2int+0x4a>
    16e4:	c9 01       	movw	r24, r18
    16e6:	73 e0       	ldi	r23, 0x03	; 3
    16e8:	88 0f       	add	r24, r24
    16ea:	99 1f       	adc	r25, r25
    16ec:	7a 95       	dec	r23
    16ee:	e1 f7       	brne	.-8      	; 0x16e8 <str2int+0x20>
    16f0:	22 0f       	add	r18, r18
    16f2:	33 1f       	adc	r19, r19
    16f4:	28 0f       	add	r18, r24
    16f6:	39 1f       	adc	r19, r25
    16f8:	8e 2f       	mov	r24, r30
    16fa:	99 27       	eor	r25, r25
    16fc:	87 fd       	sbrc	r24, 7
    16fe:	90 95       	com	r25
    1700:	28 0f       	add	r18, r24
    1702:	39 1f       	adc	r19, r25
    1704:	20 53       	subi	r18, 0x30	; 48
    1706:	30 40       	sbci	r19, 0x00	; 0
    1708:	4f 5f       	subi	r20, 0xFF	; 255
    170a:	fd 01       	movw	r30, r26
    170c:	e4 0f       	add	r30, r20
    170e:	f1 1d       	adc	r31, r1
    1710:	e0 81       	ld	r30, Z
    1712:	8e 2f       	mov	r24, r30
    1714:	80 53       	subi	r24, 0x30	; 48
    1716:	8a 30       	cpi	r24, 0x0A	; 10
    1718:	10 f4       	brcc	.+4      	; 0x171e <str2int+0x56>
    171a:	40 34       	cpi	r20, 0x40	; 64
    171c:	18 f3       	brcs	.-58     	; 0x16e4 <str2int+0x1c>
    171e:	55 23       	and	r21, r21
    1720:	19 f0       	breq	.+6      	; 0x1728 <str2int+0x60>
    1722:	30 95       	com	r19
    1724:	21 95       	neg	r18
    1726:	3f 4f       	sbci	r19, 0xFF	; 255
    1728:	c9 01       	movw	r24, r18
    172a:	08 95       	ret

0000172c <parseCmd>:
    172c:	bf 92       	push	r11
    172e:	cf 92       	push	r12
    1730:	df 92       	push	r13
    1732:	ef 92       	push	r14
    1734:	ff 92       	push	r15
    1736:	0f 93       	push	r16
    1738:	1f 93       	push	r17
    173a:	df 93       	push	r29
    173c:	cf 93       	push	r28
    173e:	cd b7       	in	r28, 0x3d	; 61
    1740:	de b7       	in	r29, 0x3e	; 62
    1742:	c0 54       	subi	r28, 0x40	; 64
    1744:	d0 40       	sbci	r29, 0x00	; 0
    1746:	0f b6       	in	r0, 0x3f	; 63
    1748:	f8 94       	cli
    174a:	de bf       	out	0x3e, r29	; 62
    174c:	0f be       	out	0x3f, r0	; 63
    174e:	cd bf       	out	0x3d, r28	; 61
    1750:	8c 01       	movw	r16, r24
    1752:	63 e5       	ldi	r22, 0x53	; 83
    1754:	73 e0       	ldi	r23, 0x03	; 3
    1756:	0e 94 0f 0b 	call	0x161e	; 0x161e <encodeWord>
    175a:	e8 2e       	mov	r14, r24
    175c:	80 93 52 03 	sts	0x0352, r24
    1760:	83 e5       	ldi	r24, 0x53	; 83
    1762:	93 e0       	ldi	r25, 0x03	; 3
    1764:	65 e6       	ldi	r22, 0x65	; 101
    1766:	70 e0       	ldi	r23, 0x00	; 0
    1768:	0e 94 4b 0b 	call	0x1696	; 0x1696 <strCmp>
    176c:	88 23       	and	r24, r24
    176e:	a1 f4       	brne	.+40     	; 0x1798 <parseCmd+0x6c>
    1770:	c8 01       	movw	r24, r16
    1772:	8e 01       	movw	r16, r28
    1774:	0f 5f       	subi	r16, 0xFF	; 255
    1776:	1f 4f       	sbci	r17, 0xFF	; 255
    1778:	b8 01       	movw	r22, r16
    177a:	0e 94 0f 0b 	call	0x161e	; 0x161e <encodeWord>
    177e:	c8 01       	movw	r24, r16
    1780:	0e 94 64 0b 	call	0x16c8	; 0x16c8 <str2int>
    1784:	18 2f       	mov	r17, r24
    1786:	10 5d       	subi	r17, 0xD0	; 208
    1788:	01 c0       	rjmp	.+2      	; 0x178c <parseCmd+0x60>
    178a:	00 00       	nop
    178c:	81 2f       	mov	r24, r17
    178e:	0e 94 15 0e 	call	0x1c2a	; 0x1c2a <uartWrite>
    1792:	88 23       	and	r24, r24
    1794:	d1 f7       	brne	.-12     	; 0x178a <parseCmd+0x5e>
    1796:	16 c1       	rjmp	.+556    	; 0x19c4 <parseCmd+0x298>
    1798:	83 e5       	ldi	r24, 0x53	; 83
    179a:	93 e0       	ldi	r25, 0x03	; 3
    179c:	69 e6       	ldi	r22, 0x69	; 105
    179e:	70 e0       	ldi	r23, 0x00	; 0
    17a0:	0e 94 4b 0b 	call	0x1696	; 0x1696 <strCmp>
    17a4:	88 23       	and	r24, r24
    17a6:	09 f0       	breq	.+2      	; 0x17aa <parseCmd+0x7e>
    17a8:	42 c0       	rjmp	.+132    	; 0x182e <parseCmd+0x102>
    17aa:	c8 01       	movw	r24, r16
    17ac:	8e 0d       	add	r24, r14
    17ae:	91 1d       	adc	r25, r1
    17b0:	7c 01       	movw	r14, r24
    17b2:	8e 01       	movw	r16, r28
    17b4:	0f 5f       	subi	r16, 0xFF	; 255
    17b6:	1f 4f       	sbci	r17, 0xFF	; 255
    17b8:	b8 01       	movw	r22, r16
    17ba:	0e 94 0f 0b 	call	0x161e	; 0x161e <encodeWord>
    17be:	c8 2e       	mov	r12, r24
    17c0:	c8 01       	movw	r24, r16
    17c2:	0e 94 64 0b 	call	0x16c8	; 0x16c8 <str2int>
    17c6:	d8 2e       	mov	r13, r24
    17c8:	18 2f       	mov	r17, r24
    17ca:	10 5d       	subi	r17, 0xD0	; 208
    17cc:	01 c0       	rjmp	.+2      	; 0x17d0 <parseCmd+0xa4>
    17ce:	00 00       	nop
    17d0:	81 2f       	mov	r24, r17
    17d2:	0e 94 15 0e 	call	0x1c2a	; 0x1c2a <uartWrite>
    17d6:	88 23       	and	r24, r24
    17d8:	d1 f7       	brne	.-12     	; 0x17ce <parseCmd+0xa2>
    17da:	c7 01       	movw	r24, r14
    17dc:	8c 0d       	add	r24, r12
    17de:	91 1d       	adc	r25, r1
    17e0:	8e 01       	movw	r16, r28
    17e2:	0f 5f       	subi	r16, 0xFF	; 255
    17e4:	1f 4f       	sbci	r17, 0xFF	; 255
    17e6:	b8 01       	movw	r22, r16
    17e8:	0e 94 0f 0b 	call	0x161e	; 0x161e <encodeWord>
    17ec:	c8 01       	movw	r24, r16
    17ee:	0e 94 64 0b 	call	0x16c8	; 0x16c8 <str2int>
    17f2:	18 2f       	mov	r17, r24
    17f4:	08 2f       	mov	r16, r24
    17f6:	00 5d       	subi	r16, 0xD0	; 208
    17f8:	01 c0       	rjmp	.+2      	; 0x17fc <parseCmd+0xd0>
    17fa:	00 00       	nop
    17fc:	80 2f       	mov	r24, r16
    17fe:	0e 94 15 0e 	call	0x1c2a	; 0x1c2a <uartWrite>
    1802:	88 23       	and	r24, r24
    1804:	d1 f7       	brne	.-12     	; 0x17fa <parseCmd+0xce>
    1806:	1d 14       	cp	r1, r13
    1808:	14 f4       	brge	.+4      	; 0x180e <parseCmd+0xe2>
    180a:	92 e0       	ldi	r25, 0x02	; 2
    180c:	05 c0       	rjmp	.+10     	; 0x1818 <parseCmd+0xec>
    180e:	dd 20       	and	r13, r13
    1810:	11 f0       	breq	.+4      	; 0x1816 <parseCmd+0xea>
    1812:	94 e0       	ldi	r25, 0x04	; 4
    1814:	01 c0       	rjmp	.+2      	; 0x1818 <parseCmd+0xec>
    1816:	90 e0       	ldi	r25, 0x00	; 0
    1818:	11 16       	cp	r1, r17
    181a:	14 f4       	brge	.+4      	; 0x1820 <parseCmd+0xf4>
    181c:	98 60       	ori	r25, 0x08	; 8
    181e:	02 c0       	rjmp	.+4      	; 0x1824 <parseCmd+0xf8>
    1820:	11 11       	cpse	r17, r1
    1822:	90 61       	ori	r25, 0x10	; 16
    1824:	8b b3       	in	r24, 0x1b	; 27
    1826:	81 7e       	andi	r24, 0xE1	; 225
    1828:	98 2b       	or	r25, r24
    182a:	9b bb       	out	0x1b, r25	; 27
    182c:	cb c0       	rjmp	.+406    	; 0x19c4 <parseCmd+0x298>
    182e:	83 e5       	ldi	r24, 0x53	; 83
    1830:	93 e0       	ldi	r25, 0x03	; 3
    1832:	61 e7       	ldi	r22, 0x71	; 113
    1834:	70 e0       	ldi	r23, 0x00	; 0
    1836:	0e 94 4b 0b 	call	0x1696	; 0x1696 <strCmp>
    183a:	88 23       	and	r24, r24
    183c:	e9 f4       	brne	.+58     	; 0x1878 <parseCmd+0x14c>
    183e:	c8 01       	movw	r24, r16
    1840:	8e 0d       	add	r24, r14
    1842:	91 1d       	adc	r25, r1
    1844:	8e 01       	movw	r16, r28
    1846:	0f 5f       	subi	r16, 0xFF	; 255
    1848:	1f 4f       	sbci	r17, 0xFF	; 255
    184a:	b8 01       	movw	r22, r16
    184c:	0e 94 0f 0b 	call	0x161e	; 0x161e <encodeWord>
    1850:	c8 01       	movw	r24, r16
    1852:	0e 94 64 0b 	call	0x16c8	; 0x16c8 <str2int>
    1856:	8c 01       	movw	r16, r24
    1858:	f0 e3       	ldi	r31, 0x30	; 48
    185a:	ff 2e       	mov	r15, r31
    185c:	f8 0e       	add	r15, r24
    185e:	01 c0       	rjmp	.+2      	; 0x1862 <parseCmd+0x136>
    1860:	00 00       	nop
    1862:	8f 2d       	mov	r24, r15
    1864:	0e 94 15 0e 	call	0x1c2a	; 0x1c2a <uartWrite>
    1868:	88 23       	and	r24, r24
    186a:	d1 f7       	brne	.-12     	; 0x1860 <parseCmd+0x134>
    186c:	01 2b       	or	r16, r17
    186e:	11 f0       	breq	.+4      	; 0x1874 <parseCmd+0x148>
    1870:	d8 9a       	sbi	0x1b, 0	; 27
    1872:	a8 c0       	rjmp	.+336    	; 0x19c4 <parseCmd+0x298>
    1874:	d8 98       	cbi	0x1b, 0	; 27
    1876:	a6 c0       	rjmp	.+332    	; 0x19c4 <parseCmd+0x298>
    1878:	83 e5       	ldi	r24, 0x53	; 83
    187a:	93 e0       	ldi	r25, 0x03	; 3
    187c:	6b e7       	ldi	r22, 0x7B	; 123
    187e:	70 e0       	ldi	r23, 0x00	; 0
    1880:	0e 94 4b 0b 	call	0x1696	; 0x1696 <strCmp>
    1884:	88 23       	and	r24, r24
    1886:	f9 f4       	brne	.+62     	; 0x18c6 <parseCmd+0x19a>
    1888:	c8 01       	movw	r24, r16
    188a:	8e 0d       	add	r24, r14
    188c:	91 1d       	adc	r25, r1
    188e:	8e 01       	movw	r16, r28
    1890:	0f 5f       	subi	r16, 0xFF	; 255
    1892:	1f 4f       	sbci	r17, 0xFF	; 255
    1894:	b8 01       	movw	r22, r16
    1896:	0e 94 0f 0b 	call	0x161e	; 0x161e <encodeWord>
    189a:	c8 01       	movw	r24, r16
    189c:	0e 94 64 0b 	call	0x16c8	; 0x16c8 <str2int>
    18a0:	18 2f       	mov	r17, r24
    18a2:	08 2f       	mov	r16, r24
    18a4:	02 95       	swap	r16
    18a6:	0f 70       	andi	r16, 0x0F	; 15
    18a8:	00 5d       	subi	r16, 0xD0	; 208
    18aa:	01 c0       	rjmp	.+2      	; 0x18ae <parseCmd+0x182>
    18ac:	00 00       	nop
    18ae:	80 2f       	mov	r24, r16
    18b0:	0e 94 15 0e 	call	0x1c2a	; 0x1c2a <uartWrite>
    18b4:	88 23       	and	r24, r24
    18b6:	d1 f7       	brne	.-12     	; 0x18ac <parseCmd+0x180>
    18b8:	11 11       	cpse	r17, r1
    18ba:	10 e8       	ldi	r17, 0x80	; 128
    18bc:	8b b3       	in	r24, 0x1b	; 27
    18be:	8f 77       	andi	r24, 0x7F	; 127
    18c0:	81 2b       	or	r24, r17
    18c2:	8b bb       	out	0x1b, r24	; 27
    18c4:	7f c0       	rjmp	.+254    	; 0x19c4 <parseCmd+0x298>
    18c6:	83 e5       	ldi	r24, 0x53	; 83
    18c8:	93 e0       	ldi	r25, 0x03	; 3
    18ca:	66 e8       	ldi	r22, 0x86	; 134
    18cc:	70 e0       	ldi	r23, 0x00	; 0
    18ce:	0e 94 4b 0b 	call	0x1696	; 0x1696 <strCmp>
    18d2:	88 23       	and	r24, r24
    18d4:	09 f0       	breq	.+2      	; 0x18d8 <parseCmd+0x1ac>
    18d6:	76 c0       	rjmp	.+236    	; 0x19c4 <parseCmd+0x298>
    18d8:	68 01       	movw	r12, r16
    18da:	ce 0c       	add	r12, r14
    18dc:	d1 1c       	adc	r13, r1
    18de:	c6 01       	movw	r24, r12
    18e0:	7e 01       	movw	r14, r28
    18e2:	08 94       	sec
    18e4:	e1 1c       	adc	r14, r1
    18e6:	f1 1c       	adc	r15, r1
    18e8:	b7 01       	movw	r22, r14
    18ea:	0e 94 0f 0b 	call	0x161e	; 0x161e <encodeWord>
    18ee:	b8 2e       	mov	r11, r24
    18f0:	00 91 8f 00 	lds	r16, 0x008F
    18f4:	10 91 90 00 	lds	r17, 0x0090
    18f8:	c7 01       	movw	r24, r14
    18fa:	0e 94 64 0b 	call	0x16c8	; 0x16c8 <str2int>
    18fe:	f8 01       	movw	r30, r16
    1900:	92 83       	std	Z+2, r25	; 0x02
    1902:	81 83       	std	Z+1, r24	; 0x01
    1904:	01 c0       	rjmp	.+2      	; 0x1908 <parseCmd+0x1dc>
    1906:	00 00       	nop
    1908:	8c e3       	ldi	r24, 0x3C	; 60
    190a:	0e 94 15 0e 	call	0x1c2a	; 0x1c2a <uartWrite>
    190e:	88 23       	and	r24, r24
    1910:	d1 f7       	brne	.-12     	; 0x1906 <parseCmd+0x1da>
    1912:	01 c0       	rjmp	.+2      	; 0x1916 <parseCmd+0x1ea>
    1914:	00 00       	nop
    1916:	e0 91 8f 00 	lds	r30, 0x008F
    191a:	f0 91 90 00 	lds	r31, 0x0090
    191e:	82 81       	ldd	r24, Z+2	; 0x02
    1920:	82 95       	swap	r24
    1922:	8f 70       	andi	r24, 0x0F	; 15
    1924:	80 5d       	subi	r24, 0xD0	; 208
    1926:	0e 94 15 0e 	call	0x1c2a	; 0x1c2a <uartWrite>
    192a:	88 23       	and	r24, r24
    192c:	99 f7       	brne	.-26     	; 0x1914 <parseCmd+0x1e8>
    192e:	01 c0       	rjmp	.+2      	; 0x1932 <parseCmd+0x206>
    1930:	00 00       	nop
    1932:	e0 91 8f 00 	lds	r30, 0x008F
    1936:	f0 91 90 00 	lds	r31, 0x0090
    193a:	81 81       	ldd	r24, Z+1	; 0x01
    193c:	92 81       	ldd	r25, Z+2	; 0x02
    193e:	80 70       	andi	r24, 0x00	; 0
    1940:	9f 70       	andi	r25, 0x0F	; 15
    1942:	89 2f       	mov	r24, r25
    1944:	80 5d       	subi	r24, 0xD0	; 208
    1946:	0e 94 15 0e 	call	0x1c2a	; 0x1c2a <uartWrite>
    194a:	88 23       	and	r24, r24
    194c:	89 f7       	brne	.-30     	; 0x1930 <parseCmd+0x204>
    194e:	01 c0       	rjmp	.+2      	; 0x1952 <parseCmd+0x226>
    1950:	00 00       	nop
    1952:	e0 91 8f 00 	lds	r30, 0x008F
    1956:	f0 91 90 00 	lds	r31, 0x0090
    195a:	81 81       	ldd	r24, Z+1	; 0x01
    195c:	92 81       	ldd	r25, Z+2	; 0x02
    195e:	80 7f       	andi	r24, 0xF0	; 240
    1960:	90 70       	andi	r25, 0x00	; 0
    1962:	e4 e0       	ldi	r30, 0x04	; 4
    1964:	96 95       	lsr	r25
    1966:	87 95       	ror	r24
    1968:	ea 95       	dec	r30
    196a:	e1 f7       	brne	.-8      	; 0x1964 <parseCmd+0x238>
    196c:	80 5d       	subi	r24, 0xD0	; 208
    196e:	0e 94 15 0e 	call	0x1c2a	; 0x1c2a <uartWrite>
    1972:	88 23       	and	r24, r24
    1974:	69 f7       	brne	.-38     	; 0x1950 <parseCmd+0x224>
    1976:	01 c0       	rjmp	.+2      	; 0x197a <parseCmd+0x24e>
    1978:	00 00       	nop
    197a:	e0 91 8f 00 	lds	r30, 0x008F
    197e:	f0 91 90 00 	lds	r31, 0x0090
    1982:	81 81       	ldd	r24, Z+1	; 0x01
    1984:	8f 70       	andi	r24, 0x0F	; 15
    1986:	80 5d       	subi	r24, 0xD0	; 208
    1988:	0e 94 15 0e 	call	0x1c2a	; 0x1c2a <uartWrite>
    198c:	88 23       	and	r24, r24
    198e:	a1 f7       	brne	.-24     	; 0x1978 <parseCmd+0x24c>
    1990:	01 c0       	rjmp	.+2      	; 0x1994 <parseCmd+0x268>
    1992:	00 00       	nop
    1994:	8e e3       	ldi	r24, 0x3E	; 62
    1996:	0e 94 15 0e 	call	0x1c2a	; 0x1c2a <uartWrite>
    199a:	88 23       	and	r24, r24
    199c:	d1 f7       	brne	.-12     	; 0x1992 <parseCmd+0x266>
    199e:	c6 01       	movw	r24, r12
    19a0:	8b 0d       	add	r24, r11
    19a2:	91 1d       	adc	r25, r1
    19a4:	8e 01       	movw	r16, r28
    19a6:	0f 5f       	subi	r16, 0xFF	; 255
    19a8:	1f 4f       	sbci	r17, 0xFF	; 255
    19aa:	b8 01       	movw	r22, r16
    19ac:	0e 94 0f 0b 	call	0x161e	; 0x161e <encodeWord>
    19b0:	e0 90 8f 00 	lds	r14, 0x008F
    19b4:	f0 90 90 00 	lds	r15, 0x0090
    19b8:	c8 01       	movw	r24, r16
    19ba:	0e 94 64 0b 	call	0x16c8	; 0x16c8 <str2int>
    19be:	f7 01       	movw	r30, r14
    19c0:	94 83       	std	Z+4, r25	; 0x04
    19c2:	83 83       	std	Z+3, r24	; 0x03
    19c4:	c0 5c       	subi	r28, 0xC0	; 192
    19c6:	df 4f       	sbci	r29, 0xFF	; 255
    19c8:	0f b6       	in	r0, 0x3f	; 63
    19ca:	f8 94       	cli
    19cc:	de bf       	out	0x3e, r29	; 62
    19ce:	0f be       	out	0x3f, r0	; 63
    19d0:	cd bf       	out	0x3d, r28	; 61
    19d2:	cf 91       	pop	r28
    19d4:	df 91       	pop	r29
    19d6:	1f 91       	pop	r17
    19d8:	0f 91       	pop	r16
    19da:	ff 90       	pop	r15
    19dc:	ef 90       	pop	r14
    19de:	df 90       	pop	r13
    19e0:	cf 90       	pop	r12
    19e2:	bf 90       	pop	r11
    19e4:	08 95       	ret

000019e6 <ioStructInit>:
    19e6:	fc 01       	movw	r30, r24
    19e8:	10 82       	st	Z, r1
    19ea:	12 82       	std	Z+2, r1	; 0x02
    19ec:	11 82       	std	Z+1, r1	; 0x01
    19ee:	14 82       	std	Z+4, r1	; 0x04
    19f0:	13 82       	std	Z+3, r1	; 0x03
    19f2:	84 e1       	ldi	r24, 0x14	; 20
    19f4:	90 e0       	ldi	r25, 0x00	; 0
    19f6:	96 83       	std	Z+6, r25	; 0x06
    19f8:	85 83       	std	Z+5, r24	; 0x05
    19fa:	8b b3       	in	r24, 0x1b	; 27
    19fc:	1b ba       	out	0x1b, r1	; 27
    19fe:	8a b3       	in	r24, 0x1a	; 26
    1a00:	8f ef       	ldi	r24, 0xFF	; 255
    1a02:	8a bb       	out	0x1a, r24	; 26
    1a04:	89 b7       	in	r24, 0x39	; 57
    1a06:	8c 7f       	andi	r24, 0xFC	; 252
    1a08:	89 bf       	out	0x39, r24	; 57
    1a0a:	87 e6       	ldi	r24, 0x67	; 103
    1a0c:	90 e0       	ldi	r25, 0x00	; 0
    1a0e:	0e 94 0e 0e 	call	0x1c1c	; 0x1c1c <uartInit>
    1a12:	08 95       	ret

00001a14 <vApplicationIdleHook>:
    1a14:	0e 94 a9 01 	call	0x352	; 0x352 <vCoRoutineSchedule>
    1a18:	fd cf       	rjmp	.-6      	; 0x1a14 <vApplicationIdleHook>

00001a1a <main>:
    1a1a:	80 91 8f 00 	lds	r24, 0x008F
    1a1e:	90 91 90 00 	lds	r25, 0x0090
    1a22:	0e 94 f3 0c 	call	0x19e6	; 0x19e6 <ioStructInit>
    1a26:	82 e2       	ldi	r24, 0x22	; 34
    1a28:	9d e0       	ldi	r25, 0x0D	; 13
    1a2a:	60 e0       	ldi	r22, 0x00	; 0
    1a2c:	40 e0       	ldi	r20, 0x00	; 0
    1a2e:	0e 94 ce 02 	call	0x59c	; 0x59c <xCoRoutineCreate>
    1a32:	89 e8       	ldi	r24, 0x89	; 137
    1a34:	9d e0       	ldi	r25, 0x0D	; 13
    1a36:	60 e0       	ldi	r22, 0x00	; 0
    1a38:	40 e0       	ldi	r20, 0x00	; 0
    1a3a:	0e 94 ce 02 	call	0x59c	; 0x59c <xCoRoutineCreate>
    1a3e:	0e 94 e4 0a 	call	0x15c8	; 0x15c8 <vTaskStartScheduler>
    1a42:	08 95       	ret

00001a44 <taskDbg>:
    1a44:	cf 93       	push	r28
    1a46:	df 93       	push	r29
    1a48:	ec 01       	movw	r28, r24
    1a4a:	88 8d       	ldd	r24, Y+24	; 0x18
    1a4c:	99 8d       	ldd	r25, Y+25	; 0x19
    1a4e:	8e 33       	cpi	r24, 0x3E	; 62
    1a50:	91 05       	cpc	r25, r1
    1a52:	09 f4       	brne	.+2      	; 0x1a56 <taskDbg+0x12>
    1a54:	3e c0       	rjmp	.+124    	; 0x1ad2 <taskDbg+0x8e>
    1a56:	8f 33       	cpi	r24, 0x3F	; 63
    1a58:	91 05       	cpc	r25, r1
    1a5a:	30 f4       	brcc	.+12     	; 0x1a68 <taskDbg+0x24>
    1a5c:	00 97       	sbiw	r24, 0x00	; 0
    1a5e:	c9 f1       	breq	.+114    	; 0x1ad2 <taskDbg+0x8e>
    1a60:	c8 97       	sbiw	r24, 0x38	; 56
    1a62:	09 f0       	breq	.+2      	; 0x1a66 <taskDbg+0x22>
    1a64:	53 c0       	rjmp	.+166    	; 0x1b0c <taskDbg+0xc8>
    1a66:	32 c0       	rjmp	.+100    	; 0x1acc <taskDbg+0x88>
    1a68:	8a 34       	cpi	r24, 0x4A	; 74
    1a6a:	91 05       	cpc	r25, r1
    1a6c:	09 f0       	breq	.+2      	; 0x1a70 <taskDbg+0x2c>
    1a6e:	4e c0       	rjmp	.+156    	; 0x1b0c <taskDbg+0xc8>
    1a70:	30 c0       	rjmp	.+96     	; 0x1ad2 <taskDbg+0x8e>
    1a72:	81 e9       	ldi	r24, 0x91	; 145
    1a74:	90 e0       	ldi	r25, 0x00	; 0
    1a76:	0e 94 1c 0e 	call	0x1c38	; 0x1c38 <uartRead>
    1a7a:	88 23       	and	r24, r24
    1a7c:	09 f5       	brne	.+66     	; 0x1ac0 <taskDbg+0x7c>
    1a7e:	90 91 91 00 	lds	r25, 0x0091
    1a82:	9d 30       	cpi	r25, 0x0D	; 13
    1a84:	09 f4       	brne	.+2      	; 0x1a88 <taskDbg+0x44>
    1a86:	90 e0       	ldi	r25, 0x00	; 0
    1a88:	90 93 91 00 	sts	0x0091, r25
    1a8c:	80 91 d3 03 	lds	r24, 0x03D3
    1a90:	e8 2f       	mov	r30, r24
    1a92:	f0 e0       	ldi	r31, 0x00	; 0
    1a94:	ed 56       	subi	r30, 0x6D	; 109
    1a96:	fc 4f       	sbci	r31, 0xFC	; 252
    1a98:	90 83       	st	Z, r25
    1a9a:	8f 5f       	subi	r24, 0xFF	; 255
    1a9c:	80 93 d3 03 	sts	0x03D3, r24
    1aa0:	06 c0       	rjmp	.+12     	; 0x1aae <taskDbg+0x6a>
    1aa2:	81 e0       	ldi	r24, 0x01	; 1
    1aa4:	90 e0       	ldi	r25, 0x00	; 0
    1aa6:	60 e0       	ldi	r22, 0x00	; 0
    1aa8:	70 e0       	ldi	r23, 0x00	; 0
    1aaa:	0e 94 91 02 	call	0x522	; 0x522 <vCoRoutineAddToDelayedList>
    1aae:	80 91 91 00 	lds	r24, 0x0091
    1ab2:	0e 94 15 0e 	call	0x1c2a	; 0x1c2a <uartWrite>
    1ab6:	88 23       	and	r24, r24
    1ab8:	a1 f7       	brne	.-24     	; 0x1aa2 <taskDbg+0x5e>
    1aba:	88 e3       	ldi	r24, 0x38	; 56
    1abc:	90 e0       	ldi	r25, 0x00	; 0
    1abe:	24 c0       	rjmp	.+72     	; 0x1b08 <taskDbg+0xc4>
    1ac0:	81 e0       	ldi	r24, 0x01	; 1
    1ac2:	90 e0       	ldi	r25, 0x00	; 0
    1ac4:	60 e0       	ldi	r22, 0x00	; 0
    1ac6:	70 e0       	ldi	r23, 0x00	; 0
    1ac8:	0e 94 91 02 	call	0x522	; 0x522 <vCoRoutineAddToDelayedList>
    1acc:	8e e3       	ldi	r24, 0x3E	; 62
    1ace:	90 e0       	ldi	r25, 0x00	; 0
    1ad0:	1b c0       	rjmp	.+54     	; 0x1b08 <taskDbg+0xc4>
    1ad2:	80 91 91 00 	lds	r24, 0x0091
    1ad6:	88 23       	and	r24, r24
    1ad8:	31 f0       	breq	.+12     	; 0x1ae6 <taskDbg+0xa2>
    1ada:	8d 30       	cpi	r24, 0x0D	; 13
    1adc:	21 f0       	breq	.+8      	; 0x1ae6 <taskDbg+0xa2>
    1ade:	80 91 d3 03 	lds	r24, 0x03D3
    1ae2:	80 34       	cpi	r24, 0x40	; 64
    1ae4:	30 f2       	brcs	.-116    	; 0x1a72 <taskDbg+0x2e>
    1ae6:	10 92 d3 03 	sts	0x03D3, r1
    1aea:	81 e6       	ldi	r24, 0x61	; 97
    1aec:	80 93 91 00 	sts	0x0091, r24
    1af0:	83 e9       	ldi	r24, 0x93	; 147
    1af2:	93 e0       	ldi	r25, 0x03	; 3
    1af4:	0e 94 96 0b 	call	0x172c	; 0x172c <parseCmd>
    1af8:	81 e0       	ldi	r24, 0x01	; 1
    1afa:	90 e0       	ldi	r25, 0x00	; 0
    1afc:	60 e0       	ldi	r22, 0x00	; 0
    1afe:	70 e0       	ldi	r23, 0x00	; 0
    1b00:	0e 94 91 02 	call	0x522	; 0x522 <vCoRoutineAddToDelayedList>
    1b04:	8a e4       	ldi	r24, 0x4A	; 74
    1b06:	90 e0       	ldi	r25, 0x00	; 0
    1b08:	99 8f       	std	Y+25, r25	; 0x19
    1b0a:	88 8f       	std	Y+24, r24	; 0x18
    1b0c:	df 91       	pop	r29
    1b0e:	cf 91       	pop	r28
    1b10:	08 95       	ret

00001b12 <taskPwm>:
    1b12:	cf 93       	push	r28
    1b14:	df 93       	push	r29
    1b16:	ec 01       	movw	r28, r24
    1b18:	88 8d       	ldd	r24, Y+24	; 0x18
    1b1a:	99 8d       	ldd	r25, Y+25	; 0x19
    1b1c:	82 35       	cpi	r24, 0x52	; 82
    1b1e:	91 05       	cpc	r25, r1
    1b20:	09 f4       	brne	.+2      	; 0x1b24 <taskPwm+0x12>
    1b22:	3f c0       	rjmp	.+126    	; 0x1ba2 <taskPwm+0x90>
    1b24:	86 38       	cpi	r24, 0x86	; 134
    1b26:	91 05       	cpc	r25, r1
    1b28:	19 f0       	breq	.+6      	; 0x1b30 <taskPwm+0x1e>
    1b2a:	89 2b       	or	r24, r25
    1b2c:	09 f0       	breq	.+2      	; 0x1b30 <taskPwm+0x1e>
    1b2e:	73 c0       	rjmp	.+230    	; 0x1c16 <taskPwm+0x104>
    1b30:	e0 91 8f 00 	lds	r30, 0x008F
    1b34:	f0 91 90 00 	lds	r31, 0x0090
    1b38:	31 81       	ldd	r19, Z+1	; 0x01
    1b3a:	22 81       	ldd	r18, Z+2	; 0x02
    1b3c:	30 93 d6 03 	sts	0x03D6, r19
    1b40:	20 93 d5 03 	sts	0x03D5, r18
    1b44:	33 23       	and	r19, r19
    1b46:	11 f4       	brne	.+4      	; 0x1b4c <taskPwm+0x3a>
    1b48:	22 23       	and	r18, r18
    1b4a:	01 f1       	breq	.+64     	; 0x1b8c <taskPwm+0x7a>
    1b4c:	f8 94       	cli
    1b4e:	13 be       	out	0x33, r1	; 51
    1b50:	12 be       	out	0x32, r1	; 50
    1b52:	dd 9a       	sbi	0x1b, 5	; 27
    1b54:	83 e0       	ldi	r24, 0x03	; 3
    1b56:	83 bf       	out	0x33, r24	; 51
    1b58:	10 92 d4 03 	sts	0x03D4, r1
    1b5c:	90 e0       	ldi	r25, 0x00	; 0
    1b5e:	0a c0       	rjmp	.+20     	; 0x1b74 <taskPwm+0x62>
    1b60:	00 00       	nop
    1b62:	82 b7       	in	r24, 0x32	; 50
    1b64:	8f 3f       	cpi	r24, 0xFF	; 255
    1b66:	e1 f7       	brne	.-8      	; 0x1b60 <taskPwm+0x4e>
    1b68:	01 c0       	rjmp	.+2      	; 0x1b6c <taskPwm+0x5a>
    1b6a:	00 00       	nop
    1b6c:	82 b7       	in	r24, 0x32	; 50
    1b6e:	8f 3f       	cpi	r24, 0xFF	; 255
    1b70:	e1 f3       	breq	.-8      	; 0x1b6a <taskPwm+0x58>
    1b72:	9f 5f       	subi	r25, 0xFF	; 255
    1b74:	92 17       	cp	r25, r18
    1b76:	a8 f3       	brcs	.-22     	; 0x1b62 <taskPwm+0x50>
    1b78:	90 93 d4 03 	sts	0x03D4, r25
    1b7c:	01 c0       	rjmp	.+2      	; 0x1b80 <taskPwm+0x6e>
    1b7e:	00 00       	nop
    1b80:	82 b7       	in	r24, 0x32	; 50
    1b82:	83 17       	cp	r24, r19
    1b84:	e0 f3       	brcs	.-8      	; 0x1b7e <taskPwm+0x6c>
    1b86:	dd 98       	cbi	0x1b, 5	; 27
    1b88:	13 be       	out	0x33, r1	; 51
    1b8a:	78 94       	sei
    1b8c:	85 81       	ldd	r24, Z+5	; 0x05
    1b8e:	96 81       	ldd	r25, Z+6	; 0x06
    1b90:	00 97       	sbiw	r24, 0x00	; 0
    1b92:	21 f0       	breq	.+8      	; 0x1b9c <taskPwm+0x8a>
    1b94:	60 e0       	ldi	r22, 0x00	; 0
    1b96:	70 e0       	ldi	r23, 0x00	; 0
    1b98:	0e 94 91 02 	call	0x522	; 0x522 <vCoRoutineAddToDelayedList>
    1b9c:	82 e5       	ldi	r24, 0x52	; 82
    1b9e:	90 e0       	ldi	r25, 0x00	; 0
    1ba0:	38 c0       	rjmp	.+112    	; 0x1c12 <taskPwm+0x100>
    1ba2:	e0 91 8f 00 	lds	r30, 0x008F
    1ba6:	f0 91 90 00 	lds	r31, 0x0090
    1baa:	33 81       	ldd	r19, Z+3	; 0x03
    1bac:	24 81       	ldd	r18, Z+4	; 0x04
    1bae:	30 93 d6 03 	sts	0x03D6, r19
    1bb2:	20 93 d5 03 	sts	0x03D5, r18
    1bb6:	33 23       	and	r19, r19
    1bb8:	11 f4       	brne	.+4      	; 0x1bbe <taskPwm+0xac>
    1bba:	22 23       	and	r18, r18
    1bbc:	01 f1       	breq	.+64     	; 0x1bfe <taskPwm+0xec>
    1bbe:	f8 94       	cli
    1bc0:	13 be       	out	0x33, r1	; 51
    1bc2:	12 be       	out	0x32, r1	; 50
    1bc4:	de 9a       	sbi	0x1b, 6	; 27
    1bc6:	83 e0       	ldi	r24, 0x03	; 3
    1bc8:	83 bf       	out	0x33, r24	; 51
    1bca:	10 92 d4 03 	sts	0x03D4, r1
    1bce:	90 e0       	ldi	r25, 0x00	; 0
    1bd0:	0a c0       	rjmp	.+20     	; 0x1be6 <taskPwm+0xd4>
    1bd2:	00 00       	nop
    1bd4:	82 b7       	in	r24, 0x32	; 50
    1bd6:	8f 3f       	cpi	r24, 0xFF	; 255
    1bd8:	e1 f7       	brne	.-8      	; 0x1bd2 <taskPwm+0xc0>
    1bda:	01 c0       	rjmp	.+2      	; 0x1bde <taskPwm+0xcc>
    1bdc:	00 00       	nop
    1bde:	82 b7       	in	r24, 0x32	; 50
    1be0:	8f 3f       	cpi	r24, 0xFF	; 255
    1be2:	e1 f3       	breq	.-8      	; 0x1bdc <taskPwm+0xca>
    1be4:	9f 5f       	subi	r25, 0xFF	; 255
    1be6:	92 17       	cp	r25, r18
    1be8:	a8 f3       	brcs	.-22     	; 0x1bd4 <taskPwm+0xc2>
    1bea:	90 93 d4 03 	sts	0x03D4, r25
    1bee:	01 c0       	rjmp	.+2      	; 0x1bf2 <taskPwm+0xe0>
    1bf0:	00 00       	nop
    1bf2:	82 b7       	in	r24, 0x32	; 50
    1bf4:	83 17       	cp	r24, r19
    1bf6:	e0 f3       	brcs	.-8      	; 0x1bf0 <taskPwm+0xde>
    1bf8:	de 98       	cbi	0x1b, 6	; 27
    1bfa:	13 be       	out	0x33, r1	; 51
    1bfc:	78 94       	sei
    1bfe:	85 81       	ldd	r24, Z+5	; 0x05
    1c00:	96 81       	ldd	r25, Z+6	; 0x06
    1c02:	00 97       	sbiw	r24, 0x00	; 0
    1c04:	21 f0       	breq	.+8      	; 0x1c0e <taskPwm+0xfc>
    1c06:	60 e0       	ldi	r22, 0x00	; 0
    1c08:	70 e0       	ldi	r23, 0x00	; 0
    1c0a:	0e 94 91 02 	call	0x522	; 0x522 <vCoRoutineAddToDelayedList>
    1c0e:	86 e8       	ldi	r24, 0x86	; 134
    1c10:	90 e0       	ldi	r25, 0x00	; 0
    1c12:	99 8f       	std	Y+25, r25	; 0x19
    1c14:	88 8f       	std	Y+24, r24	; 0x18
    1c16:	df 91       	pop	r29
    1c18:	cf 91       	pop	r28
    1c1a:	08 95       	ret

00001c1c <uartInit>:
    1c1c:	90 bd       	out	0x20, r25	; 32
    1c1e:	89 b9       	out	0x09, r24	; 9
    1c20:	88 e1       	ldi	r24, 0x18	; 24
    1c22:	8a b9       	out	0x0a, r24	; 10
    1c24:	8e e8       	ldi	r24, 0x8E	; 142
    1c26:	80 bd       	out	0x20, r24	; 32
    1c28:	08 95       	ret

00001c2a <uartWrite>:
    1c2a:	5d 99       	sbic	0x0b, 5	; 11
    1c2c:	02 c0       	rjmp	.+4      	; 0x1c32 <uartWrite+0x8>
    1c2e:	81 e0       	ldi	r24, 0x01	; 1
    1c30:	08 95       	ret
    1c32:	8c b9       	out	0x0c, r24	; 12
    1c34:	80 e0       	ldi	r24, 0x00	; 0
    1c36:	08 95       	ret

00001c38 <uartRead>:
    1c38:	fc 01       	movw	r30, r24
    1c3a:	5f 99       	sbic	0x0b, 7	; 11
    1c3c:	02 c0       	rjmp	.+4      	; 0x1c42 <uartRead+0xa>
    1c3e:	81 e0       	ldi	r24, 0x01	; 1
    1c40:	08 95       	ret
    1c42:	8c b1       	in	r24, 0x0c	; 12
    1c44:	80 83       	st	Z, r24
    1c46:	80 e0       	ldi	r24, 0x00	; 0
    1c48:	08 95       	ret

00001c4a <memcpy>:
    1c4a:	fb 01       	movw	r30, r22
    1c4c:	dc 01       	movw	r26, r24
    1c4e:	02 c0       	rjmp	.+4      	; 0x1c54 <memcpy+0xa>
    1c50:	01 90       	ld	r0, Z+
    1c52:	0d 92       	st	X+, r0
    1c54:	41 50       	subi	r20, 0x01	; 1
    1c56:	50 40       	sbci	r21, 0x00	; 0
    1c58:	d8 f7       	brcc	.-10     	; 0x1c50 <memcpy+0x6>
    1c5a:	08 95       	ret

00001c5c <memset>:
    1c5c:	dc 01       	movw	r26, r24
    1c5e:	01 c0       	rjmp	.+2      	; 0x1c62 <memset+0x6>
    1c60:	6d 93       	st	X+, r22
    1c62:	41 50       	subi	r20, 0x01	; 1
    1c64:	50 40       	sbci	r21, 0x00	; 0
    1c66:	e0 f7       	brcc	.-8      	; 0x1c60 <memset+0x4>
    1c68:	08 95       	ret

00001c6a <strncpy>:
    1c6a:	fb 01       	movw	r30, r22
    1c6c:	dc 01       	movw	r26, r24
    1c6e:	41 50       	subi	r20, 0x01	; 1
    1c70:	50 40       	sbci	r21, 0x00	; 0
    1c72:	48 f0       	brcs	.+18     	; 0x1c86 <strncpy+0x1c>
    1c74:	01 90       	ld	r0, Z+
    1c76:	0d 92       	st	X+, r0
    1c78:	00 20       	and	r0, r0
    1c7a:	c9 f7       	brne	.-14     	; 0x1c6e <strncpy+0x4>
    1c7c:	01 c0       	rjmp	.+2      	; 0x1c80 <strncpy+0x16>
    1c7e:	1d 92       	st	X+, r1
    1c80:	41 50       	subi	r20, 0x01	; 1
    1c82:	50 40       	sbci	r21, 0x00	; 0
    1c84:	e0 f7       	brcc	.-8      	; 0x1c7e <strncpy+0x14>
    1c86:	08 95       	ret

00001c88 <_exit>:
    1c88:	f8 94       	cli

00001c8a <__stop_program>:
    1c8a:	ff cf       	rjmp	.-2      	; 0x1c8a <__stop_program>
