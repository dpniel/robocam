
build/ch.elf:     file format elf32-littlearm
build/ch.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x080000f0

Program Header:
    LOAD off    0x00008000 vaddr 0x08000000 paddr 0x08000000 align 2**15
         filesz 0x00003f5c memsz 0x00003f60 flags rwx
    LOAD off    0x00010800 vaddr 0x20000800 paddr 0x08003f60 align 2**15
         filesz 0x00000064 memsz 0x00000064 flags rw-
    LOAD off    0x00010868 vaddr 0x20000868 paddr 0x08003fc4 align 2**15
         filesz 0x00000000 memsz 0x00000844 flags rw-
    LOAD off    0x00018000 vaddr 0x20000000 paddr 0x20000000 align 2**15
         filesz 0x00000000 memsz 0x00000800 flags rw-
private flags = 5000002: [Version5 EABI] [has entry point]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 startup       000000ec  08000000  08000000  00008000  2**4
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00003e6c  080000f0  080000f0  000080f0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .textalign    00000004  08003f5c  08003f5c  0000bf5c  2**0
                  ALLOC
  3 .stacks       00000800  20000000  20000000  00018000  2**0
                  ALLOC
  4 .data         00000064  20000800  08003f60  00010800  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .bss          00000844  20000868  08003fc4  00010868  2**3
                  ALLOC
  6 .debug_abbrev 00004e8f  00000000  00000000  00010864  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00014620  00000000  00000000  000156f3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00008582  00000000  00000000  00029d13  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000065db  00000000  00000000  00032295  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_pubnames 000015f6  00000000  00000000  00038870  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_pubtypes 00003c38  00000000  00000000  00039e66  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_aranges 00000d68  00000000  00000000  0003da9e  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000e38  00000000  00000000  0003e806  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00002fe2  00000000  00000000  0003f63e  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .comment      0000002a  00000000  00000000  00042620  2**0
                  CONTENTS, READONLY
 16 .ARM.attributes 00000031  00000000  00000000  0004264a  2**0
                  CONTENTS, READONLY
 17 .debug_frame  00002340  00000000  00000000  0004267c  2**2
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
08000000 l    d  startup	00000000 startup
080000f0 l    d  .text	00000000 .text
08003f5c l    d  .textalign	00000000 .textalign
20000000 l    d  .stacks	00000000 .stacks
20000800 l    d  .data	00000000 .data
20000868 l    d  .bss	00000000 .bss
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_pubnames	00000000 .debug_pubnames
00000000 l    d  .debug_pubtypes	00000000 .debug_pubtypes
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 vectors.c
00000000 l    df *ABS*	00000000 strcasecmp.c
00000000 l    df *ABS*	00000000 strchr.c
00000000 l    df *ABS*	00000000 strspn.c
00000000 l    df *ABS*	00000000 crt0.c
00000000 l    df *ABS*	00000000 chcore.c
00000000 l    df *ABS*	00000000 chcore_v7m.c
080004ac l       .text	00000000 _port_exit_from_isr
00000000 l    df *ABS*	00000000 nvic.c
00000000 l    df *ABS*	00000000 chsys.c
20000868 l     O .bss	0000004c mainthread.4697
00000000 l    df *ABS*	00000000 chdebug.c
00000000 l    df *ABS*	00000000 chlists.c
00000000 l    df *ABS*	00000000 chvt.c
00000000 l    df *ABS*	00000000 chschd.c
08000bb0 l     F .text	0000003e wakeup
00000000 l    df *ABS*	00000000 chthreads.c
00000000 l    df *ABS*	00000000 chdynamic.c
00000000 l    df *ABS*	00000000 chmtx.c
00000000 l    df *ABS*	00000000 chevents.c
00000000 l    df *ABS*	00000000 chqueues.c
08001290 l     F .text	0000002c qwait
00000000 l    df *ABS*	00000000 chmemcore.c
20000dbc l     O .bss	00000004 endmem
20000dc0 l     O .bss	00000004 nextmem
00000000 l    df *ABS*	00000000 chheap.c
20000dc8 l     O .bss	00000020 default_heap
00000000 l    df *ABS*	00000000 chmempools.c
00000000 l    df *ABS*	00000000 hal.c
00000000 l    df *ABS*	00000000 adc.c
00000000 l    df *ABS*	00000000 pwm.c
00000000 l    df *ABS*	00000000 serial.c
08001a10 l     F .text	0000000c putwouldblock
08001a20 l     F .text	0000000c getwouldblock
08001a30 l     F .text	0000001e getflags
08001a50 l     F .text	00000006 readt
08001a60 l     F .text	0000000a reads
08001a70 l     F .text	00000006 writet
08001a80 l     F .text	0000000a writes
08001a90 l     F .text	00000006 gett
08001aa0 l     F .text	00000006 putt
08003b20 l     O .text	00000024 vmt
00000000 l    df *ABS*	00000000 tm.c
08001bb0 l     F .text	0000000c tm_start
08001bc0 l     F .text	0000002c tm_stop
20000de8 l     O .bss	00000004 measurement_offset
00000000 l    df *ABS*	00000000 stm32_dma.c
20000dec l     O .bss	00000038 dma_isr_redir
20000e24 l     O .bss	00000004 dma_streams_mask
00000000 l    df *ABS*	00000000 hal_lld.c
00000000 l    df *ABS*	00000000 adc_lld.c
08002000 l     F .text	0000012c adc_lld_serve_rx_interrupt
00000000 l    df *ABS*	00000000 pwm_lld.c
00000000 l    df *ABS*	00000000 serial_lld.c
08002480 l     F .text	00000014 notify3
08003c30 l     O .text	0000000c default_config
00000000 l    df *ABS*	00000000 pal_lld.c
08003c40 l     O .text	00000012 cfgtab.5960
00000000 l    df *ABS*	00000000 board.c
00000000 l    df *ABS*	00000000 shell.c
08002890 l     F .text	00000028 cmd_systime
080028c0 l     F .text	000000c0 cmd_info
08002980 l     F .text	00000020 list_commands
080029a0 l     F .text	00000042 cmdexec
080029f0 l     F .text	00000044 _strtok.clone.0
08002b10 l     F .text	000001d8 shell_thread
20000804 l     O .data	00000018 local_commands
00000000 l    df *ABS*	00000000 chprintf.c
08002cf0 l     F .text	00000062 ltoa
00000000 l    df *ABS*	00000000 main.c
08003110 l     F .text	00000054 Leds
20000ee8 l     O .bss	000001b0 waLeds
00000000 l    df *ABS*	00000000 conv_ctrl.c
080031d0 l     F .text	00000114 contAdcReadyCb
2000081c l     O .data	00000002 boostSp
08003eb0 l     O .text	0000002c adcGroup
2000081e l     O .data	00000002 buckGain
20000820 l     O .data	00000030 pwmCfg
20000850 l     O .data	00000002 buckSp
20000852 l     O .data	00000002 boostGain
20001098 l     O .bss	0000000c adcSamples
200010a4 l     O .bss	00000002 boostPwm
20000854 l     O .data	00000002 solarSp
200010a6 l     O .bss	00000002 buckPwm
00000000 l    df *ABS*	00000000 serial_ctrl.c
08003380 l     F .text	00000044 cmd_mem
08003ee0 l     O .text	00000010 commands
08003ef0 l     O .text	00000008 shell_cfg
20000858 l     O .data	0000000c config
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 chregistry.c
00000000 l    df *ABS*	00000000 chsem.c
00000000 l    df *ABS*	00000000 chcond.c
00000000 l    df *ABS*	00000000 chmsg.c
00000000 l    df *ABS*	00000000 chmboxes.c
00000000 l    df *ABS*	00000000 can.c
00000000 l    df *ABS*	00000000 ext.c
00000000 l    df *ABS*	00000000 gpt.c
00000000 l    df *ABS*	00000000 i2c.c
00000000 l    df *ABS*	00000000 icu.c
00000000 l    df *ABS*	00000000 mac.c
00000000 l    df *ABS*	00000000 pal.c
00000000 l    df *ABS*	00000000 sdc.c
00000000 l    df *ABS*	00000000 spi.c
00000000 l    df *ABS*	00000000 uart.c
00000000 l    df *ABS*	00000000 usb.c
00000000 l    df *ABS*	00000000 mmc_spi.c
00000000 l    df *ABS*	00000000 serial_usb.c
00000000 l    df *ABS*	00000000 rtc.c
00000000 l    df *ABS*	00000000 can_lld.c
00000000 l    df *ABS*	00000000 ext_lld.c
00000000 l    df *ABS*	00000000 gpt_lld.c
00000000 l    df *ABS*	00000000 i2c_lld.c
00000000 l    df *ABS*	00000000 icu_lld.c
00000000 l    df *ABS*	00000000 mac_lld.c
00000000 l    df *ABS*	00000000 sdc_lld.c
00000000 l    df *ABS*	00000000 spi_lld.c
00000000 l    df *ABS*	00000000 uart_lld.c
00000000 l    df *ABS*	00000000 usb_lld.c
00000000 l    df *ABS*	00000000 rtc_lld.c
00000000 l    df *ABS*	00000000 evtimer.c
00000000 l    df *ABS*	00000000 syscalls.c
00000000 l    df *ABS*	00000000 light_ctrl.c
00000000 l    df *ABS*	00000000 power_ctrl.c
00000000 l    df *ABS*	00000000 moto_ctrl.c
00000000 l    df *ABS*	00000000 adc_ctrl.c
00000000 l    df *ABS*	00000000 atoi.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 strtol.c
00000000 l       *ABS*	00000000 shift
08003c60 g     O .text	0000003c pal_default_config
08000480  w    F .text	00000002 Vector58
08000480  w    F .text	00000002 VectorE8
08000480  w    F .text	00000002 Vector9C
08000610 g     F .text	00000044 nvicEnableVector
08000830 g     F .text	00000034 dbg_check_lock_from_isr
08001200 g     F .text	00000048 chEvtSignalFlagsI
08000480  w    F .text	00000002 VectorAC
08000f60 g     F .text	00000016 chThdExit
08000720 g     F .text	00000054 chSysTimerHandlerI
08001250 g     F .text	00000034 chEvtBroadcastFlagsI
08000c40 g     F .text	0000004c chSchGoSleepTimeoutS
08001090 g     F .text	000000b8 chMtxLockS
080007b0 g     F .text	00000034 dbg_check_lock
08003170 g     F .text	00000024 initLeds
08000480  w    F .text	00000002 Vector5C
08000480  w    F .text	00000002 NMIVector
08000d90 g     F .text	00000032 _thread_memfill
080016c0 g     F .text	000000b4 chHeapFree
08001dd0 g     F .text	0000005c dmaInit
08000480  w    F .text	00000002 Vector8C
08001970 g     F .text	0000004c pwmStart
080024a0 g     F .text	00000164 VectorDC
08000000 g     O startup	000000ec _vectors
08000510 g     F .text	00000008 _port_lock
08000bf0 g     F .text	00000050 chSchGoSleepS
08002310 g     F .text	00000130 pwm_lld_start
200010ac g       *ABS*	00000000 __heap_base__
08000520 g     F .text	00000008 _port_unlock
08003f60 g       *ABS*	00000000 _etext
08000dd0 g     F .text	00000084 chThdCreateI
08000780 g     F .text	00000028 dbg_check_enable
08000480  w    F .text	00000002 VectorC8
08000c90 g     F .text	00000060 chSchWakeupS
08001b50 g     F .text	00000060 sdIncomingDataI
08001490 g     F .text	0000004a chOQGetI
08000b50 g     F .text	00000018 _scheduler_init
08000e60 g     F .text	00000080 chThdCreateStatic
08000480  w    F .text	00000002 Vector94
08000480  w    F .text	00000002 VectorA8
08000480  w    F .text	00000002 VectorB4
08000b70 g     F .text	00000040 chSchReadyI
080000ec g       startup	00000000 __fini_array_end
08000490  w    F .text	00000004 port_halt
20000800 g       .stacks	00000000 __main_thread_stack_end__
08000a80 g     F .text	00000018 _vt_init
080015a0 g     F .text	00000030 chCoreAllocI
08001610 g     F .text	0000001c _heap_init
08001c90 g     F .text	00000034 Vector74
08001810 g     F .text	00000028 halInit
20000868 g       .bss	00000000 _bss_start
08000480  w    F .text	00000002 UsageFaultVector
20002800 g       *ABS*	00000000 __heap_end__
08000480  w    F .text	00000002 DebugMonitorVector
08001000 g     F .text	00000060 chThdCreateFromHeap
080007f0 g     F .text	00000038 dbg_check_unlock
08000480  w    F .text	00000002 Vector40
08000a40 g     F .text	0000000c queue_insert
080002b0 g     F .text	000001c4 ResetHandler
08001390 g     F .text	00000080 chIQReadTimeout
08000480  w    F .text	00000002 VectorBC
08001780 g     F .text	00000040 chHeapStatus
080004d0 g     F .text	00000034 _port_init
080018c0 g     F .text	00000058 adcStartConversionI
08001ed0 g     F .text	0000009c hal_lld_init
08000f10 g     F .text	00000050 chThdExitS
08001920 g     F .text	00000028 adcStartConversion
20000ee4 g     O .bss	00000004 shell_terminated
08001840 g     F .text	00000004 adcInit
2000097c g     O .bss	00000408 dbg_trace_buffer
080021a0 g     F .text	0000005c adc_lld_start
08000480  w    F .text	00000002 PendSVVector
08000aa0 g     F .text	00000054 chVTSetI
08000480  w    F .text	00000002 Vector64
200010ac g       .bss	00000000 _bss_end
20000d88 g     O .bss	00000004 dbg_panic_msg
080002a0  w    F .text	00000002 _default_exit
08002720 g     F .text	00000144 _pal_lld_setgroupmode
08002130 g     F .text	00000064 adc_lld_init
08000480  w    F .text	00000002 VectorCC
20000e70 g     O .bss	00000074 SD3
08002610 g     F .text	00000020 sd_lld_init
08000480  w    F .text	00000002 Vector54
08000480  w    F .text	00000002 Vector98
20000e28 g     O .bss	00000034 ADCD1
08000480  w    F .text	00000002 VectorD8
08000480  w    F .text	00000002 Vector24
08000930 g     F .text	0000002c chDbgCheckClassI
08001150 g     F .text	0000001c chMtxLock
080015f0 g     F .text	00000014 chCoreStatus
08000cf0 g     F .text	0000004c chSchDoReschedule
080006b0 g     F .text	00000070 chSysInit
00000000  w      *UND*	00000000 __sf_fake_stderr
08000ee0 g     F .text	0000002c chThdSleep
080012c0 g     F .text	0000001a chIQInit
08000a10 g     F .text	00000026 prio_insert
08003b90 g     O .text	00000054 _stm32_dma_streams
08001d90 g     F .text	00000034 Vector84
080005b0 g     F .text	00000026 SysTickVector
20000978 g     O .bss	00000004 dbg_isr_cnt
08001f70 g     F .text	0000008c stm32_clock_init
080026b0 g     F .text	00000070 _pal_lld_init
08001ab0 g     F .text	00000004 sdInit
08000480  w    F .text	00000002 BusFaultVector
08000480  w    F .text	00000002 VectorD0
08001570 g     F .text	00000028 _core_init
080022f0 g     F .text	00000018 pwm_lld_init
20000e5c g     O .bss	00000014 PWMD2
08001b00 g     F .text	00000048 sdStart
08000480  w    F .text	00000002 VectorE4
080019c0 g     F .text	00000048 pwmEnableChannel
08000480  w    F .text	00000002 VectorC0
080005e0 g     F .text	00000010 _port_switch
00002800 g       *ABS*	00000000 __ram_size__
080004b0 g     F .text	00000014 SVCallVector
080000f0 g     F .text	00000046 strcasecmp
08000290  w    F .text	00000002 __late_init
08000a00 g     F .text	0000000c chDbgPanic
20000d8c g     O .bss	00000010 vtlist
08000480  w    F .text	00000002 HardFaultVector
08000530 g     F .text	00000074 _port_irq_epilogue
080015d0 g     F .text	00000020 chCoreAlloc
08002a40 g     F .text	00000018 shellCreate
08001630 g     F .text	00000088 chHeapAlloc
08000960 g     F .text	0000002c chDbgCheckClassS
08001950 g     F .text	00000004 pwmInit
080008f0 g     F .text	0000003c dbg_check_leave_isr
08003f60 g       *ABS*	00000000 _textdata
08000480  w    F .text	00000002 VectorE0
00000000 g       *ABS*	00000000 _text
08000480  w    F .text	00000002 MemManageVector
080000ec g       startup	00000000 __fini_array_start
00000000  w      *UND*	00000000 __sf_fake_stdin
080031a0 g     F .text	00000024 main
08001c30 g     F .text	00000030 Vector6C
08001870 g     F .text	00000048 adcStart
20000d9c g     O .bss	00000020 rlist
08000480  w    F .text	00000002 VectorA0
08001850 g     F .text	00000016 adcObjectInit
080008b0 g     F .text	0000003c dbg_check_enter_isr
080000ec g       startup	00000000 __init_array_end
08002440 g     F .text	00000036 pwm_lld_enable_channel
08000480  w    F .text	00000002 VectorC4
08001d10 g     F .text	00000034 Vector7C
080033e0 g     F .text	00000034 processSerial
08001060 g     F .text	00000024 chMtxInit
08000690 g     F .text	00000014 _idle_thread
080014e0 g     F .text	00000090 chOQWriteTimeout
08001960 g     F .text	0000000a pwmObjectInit
08002270 g     F .text	00000074 VectorB0
08002d60 g     F .text	000003a4 chprintf
08000480  w    F .text	00000002 Vector90
20000d84 g     O .bss	00000004 dbg_lock_cnt
20000000 g       *ABS*	00000000 __ram_start__
080005f0 g     F .text	00000014 _port_thread_start
08000480  w    F .text	00000002 Vector60
080017c0 g     F .text	00000028 chPoolFreeI
08000480  w    F .text	00000002 Vector1C
08000480  w    F .text	00000002 Vector48
20000400 g       .stacks	00000000 __process_stack_base__
08002200 g     F .text	00000070 adc_lld_start_conversion
08001c60 g     F .text	00000030 Vector70
08000480  w    F .text	00000002 VectorD4
08000660 g     F .text	00000030 nvicSetSystemHandlerPriority
08002a60 g     F .text	000000ac shellGetLine
08000f80 g     F .text	0000007c chThdRelease
200008b8 g     O .bss	000000c0 _idle_thread_wa
08001410 g     F .text	00000018 chOQInit
08001330 g     F .text	00000054 chIQGetTimeout
20000800 g       .data	00000000 _data
08000a50 g     F .text	0000000c fifo_remove
080017f0 g     F .text	00000020 chPoolFree
08000480  w    F .text	00000002 Vector4C
08001d50 g     F .text	00000034 Vector80
080012e0 g     F .text	00000050 chIQPutI
080004a0 g     F .text	0000000e _port_switch_from_isr
08001bf0 g     F .text	0000003c tmInit
08000480  w    F .text	00000002 Vector68
08001170 g     F .text	0000008c chMtxUnlock
08000990 g     F .text	00000014 _trace_init
20000400 g       .stacks	00000000 __main_stack_end__
08001cd0 g     F .text	00000034 Vector78
08000a60 g     F .text	0000000c dequeue
20002800 g       *ABS*	00000000 __ram_end__
20000864 g       .data	00000000 _edata
200010ac g       *ABS*	00000000 _end
08000b00 g     F .text	00000048 chVTResetI
080033d0 g     F .text	00000010 initSerial
08000480 g     F .text	00000002 _unhandled_exception
08001ac0 g     F .text	00000040 sdObjectInit
08000480  w    F .text	00000002 Vector88
20000400 g       .stacks	00000000 __main_thread_stack_base__
20000800 g     O .data	00000004 __ctype_ptr__
00000000  w      *UND*	00000000 __sf_fake_stdout
080009b0 g     F .text	00000044 dbg_trace
08003430 g     O .text	00000101 _ctype_
080000ec g       startup	00000000 __init_array_start
200010a8 g     O .bss	00000004 shelltp
08000250 g     F .text	00000038 strspn
08000d40 g     F .text	0000004c _thread_init
08000480  w    F .text	00000002 Vector50
08001e30 g     F .text	00000098 dmaStreamAllocate
08000140 g     F .text	0000010c strchr
08001430 g     F .text	00000058 chOQPutTimeout
20000000 g       .stacks	00000000 __main_stack_base__
08000480  w    F .text	00000002 Vector44
08000480  w    F .text	00000002 Vector28
08002880 g     F .text	00000002 boardInit
08000480  w    F .text	00000002 VectorB8
08002630 g     F .text	00000074 sd_lld_start
00000400 g       *ABS*	00000000 __main_stack_size__
08000870 g     F .text	0000003c dbg_check_unlock_from_isr
20000800 g       .stacks	00000000 __process_stack_end__
08000a70 g     F .text	0000000a list_remove
08000480  w    F .text	00000002 Vector34
08002870 g     F .text	00000004 __early_init
08000480  w    F .text	00000002 VectorA4
00000400 g       *ABS*	00000000 __process_stack_size__
080032f0 g     F .text	00000084 convStart
08000480  w    F .text	00000002 Vector20


