
build/ch.elf:     file format elf32-littlearm
build/ch.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x080000f0

Program Header:
    LOAD off    0x00008000 vaddr 0x08000000 paddr 0x08000000 align 2**15
         filesz 0x000049d4 memsz 0x000049d8 flags rwx
    LOAD off    0x00010800 vaddr 0x20000800 paddr 0x080049d8 align 2**15
         filesz 0x00000128 memsz 0x00001494 flags rw-
    LOAD off    0x00018000 vaddr 0x20000000 paddr 0x20000000 align 2**15
         filesz 0x00000000 memsz 0x00000800 flags rw-
private flags = 5000002: [Version5 EABI] [has entry point]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 startup       000000ec  08000000  08000000  00008000  2**4
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000048e4  080000f0  080000f0  000080f0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .textalign    00000004  080049d4  080049d4  0000c9d4  2**0
                  ALLOC
  3 .stacks       00000800  20000000  20000000  00018000  2**0
                  ALLOC
  4 .data         00000128  20000800  080049d8  00010800  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .bss          0000136c  20000928  08004b00  00010928  2**3
                  ALLOC
  6 .debug_abbrev 00005163  00000000  00000000  00010928  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   000152e5  00000000  00000000  00015a8b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000869f  00000000  00000000  0002ad70  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00008215  00000000  00000000  0003340f  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_pubnames 000016d4  00000000  00000000  0003b624  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_pubtypes 00003904  00000000  00000000  0003ccf8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_aranges 00000d38  00000000  00000000  000405fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00001728  00000000  00000000  00041334  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    000033c8  00000000  00000000  00042a5c  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .comment      0000002a  00000000  00000000  00045e24  2**0
                  CONTENTS, READONLY
 16 .ARM.attributes 00000031  00000000  00000000  00045e4e  2**0
                  CONTENTS, READONLY
 17 .debug_frame  000023cc  00000000  00000000  00045e80  2**2
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
08000000 l    d  startup	00000000 startup
080000f0 l    d  .text	00000000 .text
080049d4 l    d  .textalign	00000000 .textalign
20000000 l    d  .stacks	00000000 .stacks
20000800 l    d  .data	00000000 .data
20000928 l    d  .bss	00000000 .bss
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_pubnames	00000000 .debug_pubnames
00000000 l    d  .debug_pubtypes	00000000 .debug_pubtypes
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 vectors.c
00000000 l    df *ABS*	00000000 atoi.c
00000000 l    df *ABS*	00000000 strcasecmp.c
00000000 l    df *ABS*	00000000 strchr.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 strspn.c
00000000 l    df *ABS*	00000000 strtol.c
08000480 l       .text	00000000 .udivsi3_skip_div0_test
00000000 l       *ABS*	00000000 shift
00000000 l    df *ABS*	00000000 crt0.c
00000000 l    df *ABS*	00000000 chcore.c
00000000 l    df *ABS*	00000000 chcore_v7m.c
0800092c l       .text	00000000 _port_exit_from_isr
00000000 l    df *ABS*	00000000 nvic.c
00000000 l    df *ABS*	00000000 chsys.c
20000928 l     O .bss	0000004c mainthread.4712
00000000 l    df *ABS*	00000000 chdebug.c
00000000 l    df *ABS*	00000000 chvt.c
00000000 l    df *ABS*	00000000 chschd.c
08000f90 l     F .text	00000038 wakeup
00000000 l    df *ABS*	00000000 chthreads.c
00000000 l    df *ABS*	00000000 chmtx.c
00000000 l    df *ABS*	00000000 chevents.c
00000000 l    df *ABS*	00000000 chqueues.c
080015b0 l     F .text	0000002c qwait
00000000 l    df *ABS*	00000000 chmemcore.c
20000e7c l     O .bss	00000004 endmem
20000e80 l     O .bss	00000004 nextmem
00000000 l    df *ABS*	00000000 chheap.c
20000e88 l     O .bss	00000020 default_heap
00000000 l    df *ABS*	00000000 hal.c
00000000 l    df *ABS*	00000000 adc.c
00000000 l    df *ABS*	00000000 usb.c
08001940 l     F .text	00000022 set_address
08004280 l     O .text	00000002 zero_status
08004290 l     O .text	00000002 active_status
080043d0 l     O .text	00000002 halted_status
00000000 l    df *ABS*	00000000 tm.c
08001f30 l     F .text	0000000c tm_start
08001f40 l     F .text	0000002c tm_stop
20000ea8 l     O .bss	00000004 measurement_offset
00000000 l    df *ABS*	00000000 serial_usb.c
08001fb0 l     F .text	0000000c putwouldblock
08001fc0 l     F .text	0000000c getwouldblock
08001fd0 l     F .text	00000022 getflags
08002000 l     F .text	0000008e onotify
08002090 l     F .text	0000007e inotify
08002110 l     F .text	00000006 readt
08002120 l     F .text	0000000a reads
08002130 l     F .text	00000006 writet
08002140 l     F .text	0000000a writes
08002150 l     F .text	00000006 gett
08002160 l     F .text	00000006 putt
08004420 l     O .text	00000024 vmt
200008f8 l     O .data	00000007 linecoding
00000000 l    df *ABS*	00000000 stm32_dma.c
20000eac l     O .bss	00000038 dma_isr_redir
20000ee4 l     O .bss	00000004 dma_streams_mask
00000000 l    df *ABS*	00000000 hal_lld.c
00000000 l    df *ABS*	00000000 adc_lld.c
00000000 l    df *ABS*	00000000 pal_lld.c
080044b0 l     O .text	00000012 cfgtab.6123
00000000 l    df *ABS*	00000000 usb_lld.c
080044d0 l     O .text	00000006 CSWTCH.7
080044e0 l     O .text	00000011 CSWTCH.10
08004510 l     O .text	0000001c ep0config
20000f6c l     O .bss	00000010 ep0_state
00000000 l    df *ABS*	00000000 board.c
00000000 l    df *ABS*	00000000 shell.c
08003040 l     F .text	00000028 cmd_systime
08003070 l     F .text	000000c0 cmd_info
08003130 l     F .text	00000020 list_commands
08003150 l     F .text	00000042 cmdexec
080031a0 l     F .text	00000044 _strtok.clone.0
080032d0 l     F .text	000001d8 shell_thread
20000900 l     O .data	00000018 local_commands
00000000 l    df *ABS*	00000000 chprintf.c
080034b0 l     F .text	00000062 ltoa
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 usb_ctrl.c
080038f0 l     F .text	00000034 get_descriptor
08003930 l     F .text	0000004c usb_event
08004770 l     O .text	0000001c ep1config
08004790 l     O .text	00000004 vcom_string0
20001830 l     O .bss	000000d4 SDU1
080047a0 l     O .text	00000008 vcom_configuration_descriptor
08004860 l     O .text	00000043 vcom_configuration_descriptor_data
080047b0 l     O .text	0000001c ep2config
080047d0 l     O .text	00000038 commands
08004810 l     O .text	00000012 vcom_device_descriptor_data
08004830 l     O .text	0000001c ep3config
08004850 l     O .text	00000008 shell_cfg1
080048e0 l     O .text	00000026 vcom_string1
08004910 l     O .text	00000038 vcom_string2
08004950 l     O .text	00000008 vcom_string3
08004960 l     O .text	00000020 vcom_strings
08004980 l     O .text	00000014 serusbcfg
080049a0 l     O .text	00000008 vcom_device_descriptor
00000000 l    df *ABS*	00000000 light_ctrl.c
00000000 l    df *ABS*	00000000 power_ctrl.c
08003a20 l     F .text	00000030 setPower
08003a50 l     F .text	000000bc Power
20001908 l     O .bss	000001b0 waPower
20001abc l     O .bss	00000010 g_mutex
00000000 l    df *ABS*	00000000 moto_ctrl.c
08003d20 l     F .text	00000070 Moto
20001ad0 l     O .bss	000001b0 waMoto
20001c80 l     O .bss	00000010 g_mutex
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 impure.c
20000808 l     O .data	000000f0 impure_data
00000000 l    df *ABS*	00000000 chlists.c
00000000 l    df *ABS*	00000000 chdynamic.c
00000000 l    df *ABS*	00000000 chregistry.c
00000000 l    df *ABS*	00000000 chsem.c
00000000 l    df *ABS*	00000000 chcond.c
00000000 l    df *ABS*	00000000 chmsg.c
00000000 l    df *ABS*	00000000 chmboxes.c
00000000 l    df *ABS*	00000000 chmempools.c
00000000 l    df *ABS*	00000000 can.c
00000000 l    df *ABS*	00000000 ext.c
00000000 l    df *ABS*	00000000 gpt.c
00000000 l    df *ABS*	00000000 i2c.c
00000000 l    df *ABS*	00000000 icu.c
00000000 l    df *ABS*	00000000 mac.c
00000000 l    df *ABS*	00000000 pal.c
00000000 l    df *ABS*	00000000 pwm.c
00000000 l    df *ABS*	00000000 sdc.c
00000000 l    df *ABS*	00000000 serial.c
00000000 l    df *ABS*	00000000 spi.c
00000000 l    df *ABS*	00000000 uart.c
00000000 l    df *ABS*	00000000 mmc_spi.c
00000000 l    df *ABS*	00000000 rtc.c
00000000 l    df *ABS*	00000000 can_lld.c
00000000 l    df *ABS*	00000000 ext_lld.c
00000000 l    df *ABS*	00000000 gpt_lld.c
00000000 l    df *ABS*	00000000 i2c_lld.c
00000000 l    df *ABS*	00000000 icu_lld.c
00000000 l    df *ABS*	00000000 mac_lld.c
00000000 l    df *ABS*	00000000 pwm_lld.c
00000000 l    df *ABS*	00000000 serial_lld.c
00000000 l    df *ABS*	00000000 sdc_lld.c
00000000 l    df *ABS*	00000000 spi_lld.c
00000000 l    df *ABS*	00000000 uart_lld.c
00000000 l    df *ABS*	00000000 rtc_lld.c
00000000 l    df *ABS*	00000000 evtimer.c
00000000 l    df *ABS*	00000000 syscalls.c
00000000 l    df *ABS*	00000000 adc_ctrl.c
00000000 l    df *ABS*	00000000 memset.c
08004530 g     O .text	0000003c pal_default_config
08003b60 g     F .text	00000050 cmd_pwr_cfg
08000900  w    F .text	00000002 Vector58
08000900  w    F .text	00000002 VectorE8
08000900  w    F .text	00000002 Vector9C
08000a60 g     F .text	00000044 nvicEnableVector
08000c80 g     F .text	00000034 dbg_check_lock_from_isr
08001520 g     F .text	00000048 chEvtSignalFlagsI
080021d0 g     F .text	00000058 sduStart
08000900  w    F .text	00000002 VectorAC
08001310 g     F .text	00000018 chThdExit
08000b70 g     F .text	00000054 chSysTimerHandlerI
08001570 g     F .text	00000034 chEvtBroadcastFlagsI
08001020 g     F .text	0000004c chSchGoSleepTimeoutS
08002c20 g     F .text	00000068 usb_lld_write_packet_buffer
08001360 g     F .text	00000100 chMtxLockS
080039d0 g     F .text	00000024 setLight
08000c00 g     F .text	00000034 dbg_check_lock
08000900  w    F .text	00000002 Vector5C
08000900  w    F .text	00000002 NMIVector
20001c90 g     O .bss	00000004 g_timeout
08001ab0 g     F .text	00000040 usbStartTransmitI
08002570 g     F .text	0000005c dmaInit
08001e30 g     F .text	0000008c _usb_ep0in
08002ef0 g     F .text	00000028 usb_lld_prepare_receive
08002930 g     F .text	00000012 Vector8C
08000900  w    F .text	00000002 VectorDC
08000000 g     O startup	000000ec _vectors
08000fd0 g     F .text	00000050 chSchGoSleepS
08002280 g     F .text	00000096 sduDataTransmitted
20001c94 g       *ABS*	00000000 __heap_base__
080049d8 g       *ABS*	00000000 _etext
08001170 g     F .text	00000084 chThdCreateI
08002fc0 g     F .text	0000002c usb_lld_clear_out
08000bd0 g     F .text	00000028 dbg_check_enable
08003bf0 g     F .text	00000024 motoReset
08000900  w    F .text	00000002 VectorC8
08001070 g     F .text	00000060 chSchWakeupS
08000f30 g     F .text	00000018 _scheduler_init
08001980 g     F .text	00000010 usbObjectInit
08001200 g     F .text	00000084 chThdCreateStatic
08000900  w    F .text	00000002 Vector94
08000900  w    F .text	00000002 VectorA8
08003d90 g     F .text	00000044 cmd_moto_cfg
08001b30 g     F .text	000002fc _usb_ep0setup
08000900  w    F .text	00000002 VectorB4
08003e30 g     F .text	00000034 initMoto
20000918 g     O .data	00000004 g_firstOnDelay
08000f50 g     F .text	00000040 chSchReadyI
080000ec g       startup	00000000 __fini_array_end
08000910  w    F .text	00000004 port_halt
20000800 g       .stacks	00000000 __main_thread_stack_end__
08000e60 g     F .text	00000018 _vt_init
08001860 g     F .text	00000030 chCoreAllocI
08002320 g     F .text	00000092 sduDataReceived
08000480 g     F .text	0000025c __udivsi3
080018c0 g     F .text	0000001c _heap_init
08003de0 g     F .text	00000004 cmd_moto_rst
08002430 g     F .text	00000034 Vector74
080018e0 g     F .text	00000028 halInit
2000091c g     O .data	00000004 g_offDelay
20000928 g       .bss	00000000 _bss_start
08000900  w    F .text	00000002 UsageFaultVector
20002800 g       *ABS*	00000000 __heap_end__
08000900  w    F .text	00000002 DebugMonitorVector
08000c40 g     F .text	00000038 dbg_check_unlock
08000900  w    F .text	00000002 Vector40
08001a70 g     F .text	00000040 usbStartReceiveI
08000730 g     F .text	000001c4 ResetHandler
08001660 g     F .text	00000090 chIQReadTimeout
08000900  w    F .text	00000002 VectorBC
08002b50 g     F .text	00000044 usb_lld_read_setup
08000950 g     F .text	00000034 _port_init
080025d0 g     F .text	0000009c hal_lld_init
08002f40 g     F .text	0000001c usb_lld_start_out
080012c0 g     F .text	00000050 chThdExitS
080023c0 g     F .text	00000002 sduInterruptTransmitted
20000f7c g     O .bss	00000004 shell_terminated
08001910 g     F .text	00000004 adcInit
08002f80 g     F .text	0000001c usb_lld_stall_out
20000a3c g     O .bss	00000408 dbg_trace_buffer
080031f0 g     F .text	0000000c shellInit
08000900  w    F .text	00000002 PendSVVector
08000464 g     F .text	00000018 strtol
08000e80 g     F .text	00000054 chVTSetI
08000900  w    F .text	00000002 Vector64
20001c94 g       .bss	00000000 _bss_end
20000e48 g     O .bss	00000004 dbg_panic_msg
08000720  w    F .text	00000002 _default_exit
080027e0 g     F .text	00000144 _pal_lld_setgroupmode
08002700 g     F .text	00000064 adc_lld_init
08000900  w    F .text	00000002 VectorCC
08000900  w    F .text	00000002 Vector54
08000900  w    F .text	00000002 Vector98
20000ee8 g     O .bss	00000034 ADCD1
08000900  w    F .text	00000002 VectorD8
08000900  w    F .text	00000002 Vector24
08000d80 g     F .text	0000002c chDbgCheckClassI
08001460 g     F .text	00000020 chMtxLock
08003200 g     F .text	0000001c shellCreateStatic
08002ad0 g     F .text	00000038 usb_lld_reset
080010d0 g     F .text	0000004c chSchDoReschedule
08000b00 g     F .text	00000070 chSysInit
00000000  w      *UND*	00000000 __sf_fake_stderr
080019f0 g     F .text	0000007c usbInitEndpointI
08001290 g     F .text	00000030 chThdSleep
080015e0 g     F .text	0000001a chIQInit
08004450 g     O .text	00000054 _stm32_dma_streams
08002530 g     F .text	00000034 Vector84
080000f8 g     F .text	00000008 _atoi_r
08002f20 g     F .text	00000020 usb_lld_prepare_transmit
08000a00 g     F .text	0000002a SysTickVector
20000a38 g     O .bss	00000004 dbg_isr_cnt
08002b30 g     F .text	00000020 usb_lld_get_status_in
08002670 g     F .text	0000008c stm32_clock_init
08002770 g     F .text	00000070 _pal_lld_init
08003bb0 g     F .text	00000034 initPower
08000900  w    F .text	00000002 BusFaultVector
08000900  w    F .text	00000002 VectorD0
08002ff0 g     F .text	00000028 usb_lld_clear_in
08002950 g     F .text	0000000c usb_lld_init
08001830 g     F .text	00000028 _core_init
08000900  w    F .text	00000002 VectorE4
08001ec0 g     F .text	00000068 _usb_ep0out
08000900  w    F .text	00000002 VectorC0
08003980 g     F .text	0000004c initUsb
08000a30 g     F .text	00000010 _port_switch
00002800 g       *ABS*	00000000 __ram_size__
08000930 g     F .text	00000012 SVCallVector
08000100 g     F .text	00000046 strcasecmp
08000710  w    F .text	00000002 __late_init
08000e50 g     F .text	0000000c chDbgPanic
20000e4c g     O .bss	00000010 vtlist
08000900  w    F .text	00000002 HardFaultVector
08000990 g     F .text	00000070 _port_irq_epilogue
08001890 g     F .text	00000024 chCoreAlloc
08000db0 g     F .text	0000002c chDbgCheckClassS
08003b10 g     F .text	00000034 powerOffReset
08000700  w    F .text	00000002 __aeabi_ldiv0
08001af0 g     F .text	00000032 _usb_reset
08003b50 g     F .text	00000004 cmd_pwr_rst
08000d40 g     F .text	00000040 dbg_check_leave_isr
080049d8 g       *ABS*	00000000 _textdata
08000900  w    F .text	00000002 VectorE0
08003df0 g     F .text	0000003c cmd_moto_set
00000000 g       *ABS*	00000000 _text
08000900  w    F .text	00000002 MemManageVector
080000ec g       startup	00000000 __fini_array_start
00000000  w      *UND*	00000000 __sf_fake_stdin
080038d0 g     F .text	00000020 main
080023d0 g     F .text	00000030 Vector6C
08003a00 g     F .text	0000001a cmd_light
20000e5c g     O .bss	00000020 rlist
08000900  w    F .text	00000002 VectorA0
08001920 g     F .text	00000016 adcObjectInit
08000480 g     F .text	00000000 __aeabi_uidiv
08000d00 g     F .text	00000040 dbg_check_enter_isr
20000f1c g     O .bss	00000050 USBD1
08000300 g     F .text	00000164 _strtol_r
080000ec g       startup	00000000 __init_array_end
08000900  w    F .text	00000002 VectorC4
080024b0 g     F .text	00000034 Vector7C
20001ab8 g     O .bss	00000004 g_timer
08001330 g     F .text	00000024 chMtxInit
08000ae0 g     F .text	00000014 _idle_thread
08001780 g     F .text	000000a4 chOQWriteTimeout
08000900  w    F .text	00000002 VectorB0
08001990 g     F .text	00000060 usbStart
08003520 g     F .text	000003a4 chprintf
08002c90 g     F .text	00000254 Vector90
20000e44 g     O .bss	00000004 dbg_lock_cnt
08002230 g     F .text	00000044 sduRequestsHook
20000000 g       *ABS*	00000000 __ram_start__
08000a40 g     F .text	00000016 _port_thread_start
08000900  w    F .text	00000002 Vector60
08000900  w    F .text	00000002 Vector1C
08000900  w    F .text	00000002 Vector48
08002fa0 g     F .text	0000001c usb_lld_stall_in
20000400 g       .stacks	00000000 __process_stack_base__
20000804 g     O .data	00000004 _impure_ptr
08002400 g     F .text	00000030 Vector70
08000900  w    F .text	00000002 VectorD4
08000ab0 g     F .text	00000030 nvicSetSystemHandlerPriority
08003220 g     F .text	000000ac shellGetLine
08003cd0 g     F .text	00000050 motoConfig
20000978 g     O .bss	000000c0 _idle_thread_wa
080016f0 g     F .text	00000018 chOQInit
08001600 g     F .text	0000005a chIQGetTimeout
20000800 g       .data	00000000 _data
08000900  w    F .text	00000002 Vector4C
080024f0 g     F .text	00000034 Vector80
08000920 g     F .text	0000000e _port_switch_from_isr
080029b0 g     F .text	00000014 usb_lld_set_address
08001f70 g     F .text	0000003c tmInit
20001acc g     O .bss	00000004 g_nextOnDelay
20000f80 g     O .bss	000008b0 SHELL_PTR
08000900  w    F .text	00000002 Vector68
08001480 g     F .text	00000094 chMtxUnlock
08000de0 g     F .text	00000014 _trace_init
20000400 g       .stacks	00000000 __main_stack_end__
080006dc g     F .text	0000001a __aeabi_uidivmod
08002470 g     F .text	00000034 Vector78
20002800 g       *ABS*	00000000 __ram_end__
20000928 g       .data	00000000 _edata
20001c94 g       *ABS*	00000000 _end
08000ee0 g     F .text	00000048 chVTResetI
08000900 g     F .text	00000002 _unhandled_exception
08003c20 g     F .text	000000ac motoSet
08000900  w    F .text	00000002 Vector88
20000400 g       .stacks	00000000 __main_thread_stack_base__
08001970 g     F .text	00000004 usbInit
20000800 g     O .data	00000004 __ctype_ptr__
08002960 g     F .text	0000004c usb_lld_start
08002180 g     F .text	00000048 sduObjectInit
00000000  w      *UND*	00000000 __sf_fake_stdout
08000e00 g     F .text	00000044 dbg_trace
080000f0 g     F .text	00000008 atoi
08003e80 g     O .text	00000101 _ctype_
08000700  w    F .text	00000002 __aeabi_idiv0
080000ec g       startup	00000000 __init_array_start
08002f60 g     F .text	0000001c usb_lld_start_in
20000924 g     O .data	00000004 g_offTimeout
20001904 g     O .bss	00000004 shelltp
08002b10 g     F .text	0000001c usb_lld_get_status_out
080002c0 g     F .text	00000038 strspn
08001120 g     F .text	0000004c _thread_init
08000900  w    F .text	00000002 Vector50
08000260 g     F .text	0000005e strlen
08000150 g     F .text	0000010c strchr
08001710 g     F .text	00000066 chOQPutTimeout
20000000 g       .stacks	00000000 __main_stack_base__
08000900  w    F .text	00000002 Vector44
08000900  w    F .text	00000002 Vector28
08003030 g     F .text	00000002 boardInit
08000900  w    F .text	00000002 VectorB8
00000400 g       *ABS*	00000000 __main_stack_size__
08000cc0 g     F .text	0000003c dbg_check_unlock_from_isr
20000800 g       .stacks	00000000 __process_stack_end__
08002170 g     F .text	00000002 sduInit
08000900  w    F .text	00000002 Vector34
08003020 g     F .text	00000004 __early_init
08002ba0 g     F .text	00000074 usb_lld_read_packet_buffer
20000920 g     O .data	00000004 g_onDelay
08000900  w    F .text	00000002 VectorA4
00000400 g       *ABS*	00000000 __process_stack_size__
080029d0 g     F .text	00000100 usb_lld_init_endpoint
08000900  w    F .text	00000002 Vector20


